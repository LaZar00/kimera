[
  uuid(CA61032D-9248-437f-8815-97E6E8A75655),
  version(2.0),
  helpstring("OpenGL32 Type Library By Raedwulf (tcmreastwood@ntlworld.com)")
]
library OpenGL32
{


	typedef struct PIXELFORMATDESCRIPTOR
	{
		short nSize;
		short nVersion;
		long dwFlags;
		byte iPixelType;
		byte cColorBits;
		byte cRedBits;
		byte cRedShift;
		byte cGreenBits;
		byte cGreenShift;
		byte cBlueBits;
		byte cBlueShift;
		byte cAlphaBits;
		byte cAlphaShift;
		byte cAccumBits;
		byte cAccumRedBits;
		byte cAccumGreenBits;
		byte cAccumBlueBits;
		byte cAccumAlphaBits;
		byte cDepthBits;
		byte cStencilBits;
		byte cAuxBuffers;
		byte iLayerType;
		byte bReserved;
		long dwLayerMask;
		long dwVisibleMask;
		long dwDamageMask;
	 } PIXELFORMATDESCRIPTOR;
	typedef struct RECT
	{
		float LEFT;
		float TOP;
		float RIGHT;
		float BOTTOM;
	} RECT;

	typedef struct _POINTFLOAT { // ptf
		FLOAT      x;
		FLOAT      y;
    } POINTFLOAT;

	typedef struct _GLYPHMETRICSFLOAT {
		FLOAT       gmfBlackBoxX;
		FLOAT       gmfBlackBoxY;
		POINTFLOAT  gmfptGlyphOrigin;
		FLOAT       gmfCellIncX;
		FLOAT       gmfCellIncY;
	} GLYPHMETRICSFLOAT;

	/* Layer plane descriptor */
	typedef struct tagLAYERPLANEDESCRIPTOR { // lpd
		WORD  nSize;
		WORD  nVersion;
		DWORD dwFlags;
		BYTE  iPixelType;
		BYTE  cColorBits;
		BYTE  cRedBits;
		BYTE  cRedShift;
		BYTE  cGreenBits;
		BYTE  cGreenShift;
		BYTE  cBlueBits;
		BYTE  cBlueShift;
		BYTE  cAlphaBits;
		BYTE  cAlphaShift;
		BYTE  cAccumBits;
		BYTE  cAccumRedBits;
		BYTE  cAccumGreenBits;
		BYTE  cAccumBlueBits;
		BYTE  cAccumAlphaBits;
		BYTE  cDepthBits;
		BYTE  cStencilBits;
		BYTE  cAuxBuffers;
		BYTE  iLayerPlane;
		BYTE  bReserved;
		COLORREF crTransparent;
	} LAYERPLANEDESCRIPTOR;

	typedef struct _WGLSWAP
	{
		long hdc;
		long uiFlags;
	} WGLSWAP;

	typedef struct INT64 {
		long     upper;
		long     lower;
	} INT64 ;

	/*
	** ToolKit Event Structure
	*/

	typedef struct _AUX_EVENTREC {
		long auxevent;
		long auxdata[4];
	} AUX_EVENTREC;

	/*
	** RGB Image Structure
	*/

	typedef struct _AUX_RGBImageRec {
		long sizeX, sizeY;
		long dataptr;
	} AUX_RGBImageRec;

	/* Display Mode Selection Criteria */
	enum EAUXDisplayMode{
		AUX_USE_ID = 1,
		AUX_EXACT_MATCH,
		AUX_MINIMUM_CRITERIA
	};

	[dllname("opengl32.dll")]
	module OpenGL
	{

		#define GLenum int
		#define GLboolean byte
		#define GLbitfield int
		#define GLbyte byte
		#define GLshort short
		#define GLint int
		#define GLsizei int
		#define GLubyte byte
		#define GLushort short
		#define GLuint int
		#define GLfloat float
		#define GLclampf float
		#define GLdouble double
		#define GLclampd double
		#define GLvoid void

		/* Version */
		const long  GL_VERSION_1_1                    = 1;

		/* AccumOp */
		const long  GL_ACCUM                          = 0x0100;
		const long  GL_LOAD                           = 0x0101;
		const long  GL_RETURN                         = 0x0102;
		const long  GL_MULT                           = 0x0103;
		const long  GL_ADD                            = 0x0104;

		/* AlphaFunction */
		const long  GL_NEVER                          = 0x0200;
		const long  GL_LESS                           = 0x0201;
		const long  GL_EQUAL                          = 0x0202;
		const long  GL_LEQUAL                         = 0x0203;
		const long  GL_GREATER                        = 0x0204;
		const long  GL_NOTEQUAL                       = 0x0205;
		const long  GL_GEQUAL                         = 0x0206;
		const long  GL_ALWAYS                         = 0x0207;

		/* AttribMask */
		const long  GL_CURRENT_BIT                    = 0x00000001;
		const long  GL_POINT_BIT                      = 0x00000002;
		const long  GL_LINE_BIT                       = 0x00000004;
		const long  GL_POLYGON_BIT                    = 0x00000008;
		const long  GL_POLYGON_STIPPLE_BIT            = 0x00000010;
		const long  GL_PIXEL_MODE_BIT                 = 0x00000020;
		const long  GL_LIGHTING_BIT                   = 0x00000040;
		const long  GL_FOG_BIT                        = 0x00000080;
		const long  GL_DEPTH_BUFFER_BIT               = 0x00000100;
		const long  GL_ACCUM_BUFFER_BIT               = 0x00000200;
		const long  GL_STENCIL_BUFFER_BIT             = 0x00000400;
		const long  GL_VIEWPORT_BIT                   = 0x00000800;
		const long  GL_TRANSFORM_BIT                  = 0x00001000;
		const long  GL_ENABLE_BIT                     = 0x00002000;
		const long  GL_COLOR_BUFFER_BIT               = 0x00004000;
		const long  GL_HINT_BIT                       = 0x00008000;
		const long  GL_EVAL_BIT                       = 0x00010000;
		const long  GL_LIST_BIT                       = 0x00020000;
		const long  GL_TEXTURE_BIT                    = 0x00040000;
		const long  GL_SCISSOR_BIT                    = 0x00080000;
		const long  GL_ALL_ATTRIB_BITS                = 0x000fffff;

		/* BeginMode */
		const long  GL_POINTS                         = 0x0000;
		const long  GL_LINES                          = 0x0001;
		const long  GL_LINE_LOOP                      = 0x0002;
		const long  GL_LINE_STRIP                     = 0x0003;
		const long  GL_TRIANGLES                      = 0x0004;
		const long  GL_TRIANGLE_STRIP                 = 0x0005;
		const long  GL_TRIANGLE_FAN                   = 0x0006;
		const long  GL_QUADS                          = 0x0007;
		const long  GL_QUAD_STRIP                     = 0x0008;
		const long  GL_POLYGON                        = 0x0009;

		/* BlendingFactorDest */
		const long  GL_ZERO                           = 0;
		const long  GL_ONE                            = 1;
		const long  GL_SRC_COLOR                      = 0x0300;
		const long  GL_ONE_MINUS_SRC_COLOR            = 0x0301;
		const long  GL_SRC_ALPHA                      = 0x0302;
		const long  GL_ONE_MINUS_SRC_ALPHA            = 0x0303;
		const long  GL_DST_ALPHA                      = 0x0304;
		const long  GL_ONE_MINUS_DST_ALPHA            = 0x0305;

		/* BlendingFactorSrc */
		/*      GL_ZERO */
		/*      GL_ONE */
		const long  GL_DST_COLOR                      = 0x0306;
		const long  GL_ONE_MINUS_DST_COLOR            = 0x0307;
		const long  GL_SRC_ALPHA_SATURATE             = 0x0308;
		/*      GL_SRC_ALPHA */
		/*      GL_ONE_MINUS_SRC_ALPHA */
		/*      GL_DST_ALPHA */
		/*      GL_ONE_MINUS_DST_ALPHA */

		/* Boolean */
		const long  GL_TRUE                           = 1;
		const long  GL_FALSE                          = 0;

		/* ClearBufferMask */
		/*      GL_COLOR_BUFFER_BIT */
		/*      GL_ACCUM_BUFFER_BIT */
		/*      GL_STENCIL_BUFFER_BIT */
		/*      GL_DEPTH_BUFFER_BIT */

		/* ClientArrayType */
		/*      GL_VERTEX_ARRAY */
		/*      GL_NORMAL_ARRAY */
		/*      GL_COLOR_ARRAY */
		/*      GL_INDEX_ARRAY */
		/*      GL_TEXTURE_COORD_ARRAY */
		/*      GL_EDGE_FLAG_ARRAY */

		/* ClipPlaneName */
		const long  GL_CLIP_PLANE0                    = 0x3000;
		const long  GL_CLIP_PLANE1                    = 0x3001;
		const long  GL_CLIP_PLANE2                    = 0x3002;
		const long  GL_CLIP_PLANE3                    = 0x3003;
		const long  GL_CLIP_PLANE4                    = 0x3004;
		const long  GL_CLIP_PLANE5                    = 0x3005;

		/* ColorMaterialFace */
		/*      GL_FRONT */
		/*      GL_BACK */
		/*      GL_FRONT_AND_BACK */

		/* ColorMaterialParameter */
		/*      GL_AMBIENT */
		/*      GL_DIFFUSE */
		/*      GL_SPECULAR */
		/*      GL_EMISSION */
		/*      GL_AMBIENT_AND_DIFFUSE */

		/* ColorPointerType */
		/*      GL_BYTE */
		/*      GL_UNSIGNED_BYTE */
		/*      GL_SHORT */
		/*      GL_UNSIGNED_SHORT */
		/*      GL_INT */
		/*      GL_UNSIGNED_INT */
		/*      GL_FLOAT */
		/*      GL_DOUBLE */

		/* CullFaceMode */
		/*      GL_FRONT */
		/*      GL_BACK */
		/*      GL_FRONT_AND_BACK */

		/* DataType */
		const long  GL_BYTE                           = 0x1400;
		const long  GL_UNSIGNED_BYTE                  = 0x1401;
		const long  GL_SHORT                          = 0x1402;
		const long  GL_UNSIGNED_SHORT                 = 0x1403;
		const long  GL_INT                            = 0x1404;
		const long  GL_UNSIGNED_INT                   = 0x1405;
		const long  GL_FLOAT                          = 0x1406;
		const long  GL_2_BYTES                        = 0x1407;
		const long  GL_3_BYTES                        = 0x1408;
		const long  GL_4_BYTES                        = 0x1409;
		const long  GL_DOUBLE                         = 0x140A;

		/* DepthFunction */
		/*      GL_NEVER */
		/*      GL_LESS */
		/*      GL_EQUAL */
		/*      GL_LEQUAL */
		/*      GL_GREATER */
		/*      GL_NOTEQUAL */
		/*      GL_GEQUAL */
		/*      GL_ALWAYS */

		/* DrawBufferMode */
		const long  GL_NONE                           = 0;
		const long  GL_FRONT_LEFT                     = 0x0400;
		const long  GL_FRONT_RIGHT                    = 0x0401;
		const long  GL_BACK_LEFT                      = 0x0402;
		const long  GL_BACK_RIGHT                     = 0x0403;
		const long  GL_FRONT                          = 0x0404;
		const long  GL_BACK                           = 0x0405;
		const long  GL_LEFT                           = 0x0406;
		const long  GL_RIGHT                          = 0x0407;
		const long  GL_FRONT_AND_BACK                 = 0x0408;
		const long  GL_AUX0                           = 0x0409;
		const long  GL_AUX1                           = 0x040A;
		const long  GL_AUX2                           = 0x040B;
		const long  GL_AUX3                           = 0x040C;

		/* Enable */
		/*      GL_FOG */
		/*      GL_LIGHTING */
		/*      GL_TEXTURE_1D */
		/*      GL_TEXTURE_2D */
		/*      GL_LINE_STIPPLE */
		/*      GL_POLYGON_STIPPLE */
		/*      GL_CULL_FACE */
		/*      GL_ALPHA_TEST */
		/*      GL_BLEND */
		/*      GL_INDEX_LOGIC_OP */
		/*      GL_COLOR_LOGIC_OP */
		/*      GL_DITHER */
		/*      GL_STENCIL_TEST */
		/*      GL_DEPTH_TEST */
		/*      GL_CLIP_PLANE0 */
		/*      GL_CLIP_PLANE1 */
		/*      GL_CLIP_PLANE2 */
		/*      GL_CLIP_PLANE3 */
		/*      GL_CLIP_PLANE4 */
		/*      GL_CLIP_PLANE5 */
		/*      GL_LIGHT0 */
		/*      GL_LIGHT1 */
		/*      GL_LIGHT2 */
		/*      GL_LIGHT3 */
		/*      GL_LIGHT4 */
		/*      GL_LIGHT5 */
		/*      GL_LIGHT6 */
		/*      GL_LIGHT7 */
		/*      GL_TEXTURE_GEN_S */
		/*      GL_TEXTURE_GEN_T */
		/*      GL_TEXTURE_GEN_R */
		/*      GL_TEXTURE_GEN_Q */
		/*      GL_MAP1_VERTEX_3 */
		/*      GL_MAP1_VERTEX_4 */
		/*      GL_MAP1_COLOR_4 */
		/*      GL_MAP1_INDEX */
		/*      GL_MAP1_NORMAL */
		/*      GL_MAP1_TEXTURE_COORD_1 */
		/*      GL_MAP1_TEXTURE_COORD_2 */
		/*      GL_MAP1_TEXTURE_COORD_3 */
		/*      GL_MAP1_TEXTURE_COORD_4 */
		/*      GL_MAP2_VERTEX_3 */
		/*      GL_MAP2_VERTEX_4 */
		/*      GL_MAP2_COLOR_4 */
		/*      GL_MAP2_INDEX */
		/*      GL_MAP2_NORMAL */
		/*      GL_MAP2_TEXTURE_COORD_1 */
		/*      GL_MAP2_TEXTURE_COORD_2 */
		/*      GL_MAP2_TEXTURE_COORD_3 */
		/*      GL_MAP2_TEXTURE_COORD_4 */
		/*      GL_POINT_SMOOTH */
		/*      GL_LINE_SMOOTH */
		/*      GL_POLYGON_SMOOTH */
		/*      GL_SCISSOR_TEST */
		/*      GL_COLOR_MATERIAL */
		/*      GL_NORMALIZE */
		/*      GL_AUTO_NORMAL */
		/*      GL_VERTEX_ARRAY */
		/*      GL_NORMAL_ARRAY */
		/*      GL_COLOR_ARRAY */
		/*      GL_INDEX_ARRAY */
		/*      GL_TEXTURE_COORD_ARRAY */
		/*      GL_EDGE_FLAG_ARRAY */
		/*      GL_POLYGON_OFFSET_POINT */
		/*      GL_POLYGON_OFFSET_LINE */
		/*      GL_POLYGON_OFFSET_FILL */

		/* ErrorCode */
		const long  GL_NO_ERROR                       = 0;
		const long  GL_INVALID_ENUM                   = 0x0500;
		const long  GL_INVALID_VALUE                  = 0x0501;
		const long  GL_INVALID_OPERATION              = 0x0502;
		const long  GL_STACK_OVERFLOW                 = 0x0503;
		const long  GL_STACK_UNDERFLOW                = 0x0504;
		const long  GL_OUT_OF_MEMORY                  = 0x0505;

		/* FeedBackMode */
		const long  GL_2D                             = 0x0600;
		const long  GL_3D                             = 0x0601;
		const long  GL_3D_COLOR                       = 0x0602;
		const long  GL_3D_COLOR_TEXTURE               = 0x0603;
		const long  GL_4D_COLOR_TEXTURE               = 0x0604;

		/* FeedBackToken */
		const long  GL_PASS_THROUGH_TOKEN             = 0x0700;
		const long  GL_POINT_TOKEN                    = 0x0701;
		const long  GL_LINE_TOKEN                     = 0x0702;
		const long  GL_POLYGON_TOKEN                  = 0x0703;
		const long  GL_BITMAP_TOKEN                   = 0x0704;
		const long  GL_DRAW_PIXEL_TOKEN               = 0x0705;
		const long  GL_COPY_PIXEL_TOKEN               = 0x0706;
		const long  GL_LINE_RESET_TOKEN               = 0x0707;

		/* FogMode */
		/*      GL_LINEAR */
		const long  GL_EXP                            = 0x0800;
		const long  GL_EXP2                           = 0x0801;


		/* FogParameter */
		/*      GL_FOG_COLOR */
		/*      GL_FOG_DENSITY */
		/*      GL_FOG_END */
		/*      GL_FOG_INDEX */
		/*      GL_FOG_MODE */
		/*      GL_FOG_START */

		/* FrontFaceDirection */
		const long  GL_CW                             = 0x0900;
		const long  GL_CCW                            = 0x0901;

		/* GetMapTarget */
		const long  GL_COEFF                          = 0x0A00;
		const long  GL_ORDER                          = 0x0A01;
		const long  GL_DOMAIN                         = 0x0A02;

		/* GetPixelMap */
		/*      GL_PIXEL_MAP_I_TO_I */
		/*      GL_PIXEL_MAP_S_TO_S */
		/*      GL_PIXEL_MAP_I_TO_R */
		/*      GL_PIXEL_MAP_I_TO_G */
		/*      GL_PIXEL_MAP_I_TO_B */
		/*      GL_PIXEL_MAP_I_TO_A */
		/*      GL_PIXEL_MAP_R_TO_R */
		/*      GL_PIXEL_MAP_G_TO_G */
		/*      GL_PIXEL_MAP_B_TO_B */
		/*      GL_PIXEL_MAP_A_TO_A */

		/* GetPointerTarget */
		/*      GL_VERTEX_ARRAY_POINTER */
		/*      GL_NORMAL_ARRAY_POINTER */
		/*      GL_COLOR_ARRAY_POINTER */
		/*      GL_INDEX_ARRAY_POINTER */
		/*      GL_TEXTURE_COORD_ARRAY_POINTER */
		/*      GL_EDGE_FLAG_ARRAY_POINTER */

		/* GetTarget */
		const long  GL_CURRENT_COLOR                  = 0x0B00;
		const long  GL_CURRENT_INDEX                  = 0x0B01;
		const long  GL_CURRENT_NORMAL                 = 0x0B02;
		const long  GL_CURRENT_TEXTURE_COORDS         = 0x0B03;
		const long  GL_CURRENT_RASTER_COLOR           = 0x0B04;
		const long  GL_CURRENT_RASTER_INDEX           = 0x0B05;
		const long  GL_CURRENT_RASTER_TEXTURE_COORDS  = 0x0B06;
		const long  GL_CURRENT_RASTER_POSITION        = 0x0B07;
		const long  GL_CURRENT_RASTER_POSITION_VALID  = 0x0B08;
		const long  GL_CURRENT_RASTER_DISTANCE        = 0x0B09;
		const long  GL_POINT_SMOOTH                   = 0x0B10;
		const long  GL_POINT_SIZE                     = 0x0B11;
		const long  GL_POINT_SIZE_RANGE               = 0x0B12;
		const long  GL_POINT_SIZE_GRANULARITY         = 0x0B13;
		const long  GL_LINE_SMOOTH                    = 0x0B20;
		const long  GL_LINE_WIDTH                     = 0x0B21;
		const long  GL_LINE_WIDTH_RANGE               = 0x0B22;
		const long  GL_LINE_WIDTH_GRANULARITY         = 0x0B23;
		const long  GL_LINE_STIPPLE                   = 0x0B24;
		const long  GL_LINE_STIPPLE_PATTERN           = 0x0B25;
		const long  GL_LINE_STIPPLE_REPEAT            = 0x0B26;
		const long  GL_LIST_MODE                      = 0x0B30;
		const long  GL_MAX_LIST_NESTING               = 0x0B31;
		const long  GL_LIST_BASE                      = 0x0B32;
		const long  GL_LIST_INDEX                     = 0x0B33;
		const long  GL_POLYGON_MODE                   = 0x0B40;
		const long  GL_POLYGON_SMOOTH                 = 0x0B41;
		const long  GL_POLYGON_STIPPLE                = 0x0B42;
		const long  GL_EDGE_FLAG                      = 0x0B43;
		const long  GL_CULL_FACE                      = 0x0B44;
		const long  GL_CULL_FACE_MODE                 = 0x0B45;
		const long  GL_FRONT_FACE                     = 0x0B46;
		const long  GL_LIGHTING                       = 0x0B50;
		const long  GL_LIGHT_MODEL_LOCAL_VIEWER       = 0x0B51;
		const long  GL_LIGHT_MODEL_TWO_SIDE           = 0x0B52;
		const long  GL_LIGHT_MODEL_AMBIENT            = 0x0B53;
		const long  GL_SHADE_MODEL                    = 0x0B54;
		const long  GL_COLOR_MATERIAL_FACE            = 0x0B55;
		const long  GL_COLOR_MATERIAL_PARAMETER       = 0x0B56;
		const long  GL_COLOR_MATERIAL                 = 0x0B57;
		const long  GL_FOG                            = 0x0B60;
		const long  GL_FOG_INDEX                      = 0x0B61;
		const long  GL_FOG_DENSITY                    = 0x0B62;
		const long  GL_FOG_START                      = 0x0B63;
		const long  GL_FOG_END                        = 0x0B64;
		const long  GL_FOG_MODE                       = 0x0B65;
		const long  GL_FOG_COLOR                      = 0x0B66;
		const long  GL_DEPTH_RANGE                    = 0x0B70;
		const long  GL_DEPTH_TEST                     = 0x0B71;
		const long  GL_DEPTH_WRITEMASK                = 0x0B72;
		const long  GL_DEPTH_CLEAR_VALUE              = 0x0B73;
		const long  GL_DEPTH_FUNC                     = 0x0B74;
		const long  GL_ACCUM_CLEAR_VALUE              = 0x0B80;
		const long  GL_STENCIL_TEST                   = 0x0B90;
		const long  GL_STENCIL_CLEAR_VALUE            = 0x0B91;
		const long  GL_STENCIL_FUNC                   = 0x0B92;
		const long  GL_STENCIL_VALUE_MASK             = 0x0B93;
		const long  GL_STENCIL_FAIL                   = 0x0B94;
		const long  GL_STENCIL_PASS_DEPTH_FAIL        = 0x0B95;
		const long  GL_STENCIL_PASS_DEPTH_PASS        = 0x0B96;
		const long  GL_STENCIL_REF                    = 0x0B97;
		const long  GL_STENCIL_WRITEMASK              = 0x0B98;
		const long  GL_MATRIX_MODE                    = 0x0BA0;
		const long  GL_NORMALIZE                      = 0x0BA1;
		const long  GL_VIEWPORT                       = 0x0BA2;
		const long  GL_MODELVIEW_STACK_DEPTH          = 0x0BA3;
		const long  GL_PROJECTION_STACK_DEPTH         = 0x0BA4;
		const long  GL_TEXTURE_STACK_DEPTH            = 0x0BA5;
		const long  GL_MODELVIEW_MATRIX               = 0x0BA6;
		const long  GL_PROJECTION_MATRIX              = 0x0BA7;
		const long  GL_TEXTURE_MATRIX                 = 0x0BA8;
		const long  GL_ATTRIB_STACK_DEPTH             = 0x0BB0;
		const long  GL_CLIENT_ATTRIB_STACK_DEPTH      = 0x0BB1;
		const long  GL_ALPHA_TEST                     = 0x0BC0;
		const long  GL_ALPHA_TEST_FUNC                = 0x0BC1;
		const long  GL_ALPHA_TEST_REF                 = 0x0BC2;
		const long  GL_DITHER                         = 0x0BD0;
		const long  GL_BLEND_DST                      = 0x0BE0;
		const long  GL_BLEND_SRC                      = 0x0BE1;
		const long  GL_BLEND                          = 0x0BE2;
		const long  GL_LOGIC_OP_MODE                  = 0x0BF0;
		const long  GL_INDEX_LOGIC_OP                 = 0x0BF1;
		const long  GL_COLOR_LOGIC_OP                 = 0x0BF2;
		const long  GL_AUX_BUFFERS                    = 0x0C00;
		const long  GL_DRAW_BUFFER                    = 0x0C01;
		const long  GL_READ_BUFFER                    = 0x0C02;
		const long  GL_SCISSOR_BOX                    = 0x0C10;
		const long  GL_SCISSOR_TEST                   = 0x0C11;
		const long  GL_INDEX_CLEAR_VALUE              = 0x0C20;
		const long  GL_INDEX_WRITEMASK                = 0x0C21;
		const long  GL_COLOR_CLEAR_VALUE              = 0x0C22;
		const long  GL_COLOR_WRITEMASK                = 0x0C23;
		const long  GL_INDEX_MODE                     = 0x0C30;
		const long  GL_RGBA_MODE                      = 0x0C31;
		const long  GL_DOUBLEBUFFER                   = 0x0C32;
		const long  GL_STEREO                         = 0x0C33;
		const long  GL_RENDER_MODE                    = 0x0C40;
		const long  GL_PERSPECTIVE_CORRECTION_HINT    = 0x0C50;
		const long  GL_POINT_SMOOTH_HINT              = 0x0C51;
		const long  GL_LINE_SMOOTH_HINT               = 0x0C52;
		const long  GL_POLYGON_SMOOTH_HINT            = 0x0C53;
		const long  GL_FOG_HINT                       = 0x0C54;
		const long  GL_TEXTURE_GEN_S                  = 0x0C60;
		const long  GL_TEXTURE_GEN_T                  = 0x0C61;
		const long  GL_TEXTURE_GEN_R                  = 0x0C62;
		const long  GL_TEXTURE_GEN_Q                  = 0x0C63;
		const long  GL_PIXEL_MAP_I_TO_I               = 0x0C70;
		const long  GL_PIXEL_MAP_S_TO_S               = 0x0C71;
		const long  GL_PIXEL_MAP_I_TO_R               = 0x0C72;
		const long  GL_PIXEL_MAP_I_TO_G               = 0x0C73;
		const long  GL_PIXEL_MAP_I_TO_B               = 0x0C74;
		const long  GL_PIXEL_MAP_I_TO_A               = 0x0C75;
		const long  GL_PIXEL_MAP_R_TO_R               = 0x0C76;
		const long  GL_PIXEL_MAP_G_TO_G               = 0x0C77;
		const long  GL_PIXEL_MAP_B_TO_B               = 0x0C78;
		const long  GL_PIXEL_MAP_A_TO_A               = 0x0C79;
		const long  GL_PIXEL_MAP_I_TO_I_SIZE          = 0x0CB0;
		const long  GL_PIXEL_MAP_S_TO_S_SIZE          = 0x0CB1;
		const long  GL_PIXEL_MAP_I_TO_R_SIZE          = 0x0CB2;
		const long  GL_PIXEL_MAP_I_TO_G_SIZE          = 0x0CB3;
		const long  GL_PIXEL_MAP_I_TO_B_SIZE          = 0x0CB4;
		const long  GL_PIXEL_MAP_I_TO_A_SIZE          = 0x0CB5;
		const long  GL_PIXEL_MAP_R_TO_R_SIZE          = 0x0CB6;
		const long  GL_PIXEL_MAP_G_TO_G_SIZE          = 0x0CB7;
		const long  GL_PIXEL_MAP_B_TO_B_SIZE          = 0x0CB8;
		const long  GL_PIXEL_MAP_A_TO_A_SIZE          = 0x0CB9;
		const long  GL_UNPACK_SWAP_BYTES              = 0x0CF0;
		const long  GL_UNPACK_LSB_FIRST               = 0x0CF1;
		const long  GL_UNPACK_ROW_LENGTH              = 0x0CF2;
		const long  GL_UNPACK_SKIP_ROWS               = 0x0CF3;
		const long  GL_UNPACK_SKIP_PIXELS             = 0x0CF4;
		const long  GL_UNPACK_ALIGNMENT               = 0x0CF5;
		const long  GL_PACK_SWAP_BYTES                = 0x0D00;
		const long  GL_PACK_LSB_FIRST                 = 0x0D01;
		const long  GL_PACK_ROW_LENGTH                = 0x0D02;
		const long  GL_PACK_SKIP_ROWS                 = 0x0D03;
		const long  GL_PACK_SKIP_PIXELS               = 0x0D04;
		const long  GL_PACK_ALIGNMENT                 = 0x0D05;
		const long  GL_MAP_COLOR                      = 0x0D10;
		const long  GL_MAP_STENCIL                    = 0x0D11;
		const long  GL_INDEX_SHIFT                    = 0x0D12;
		const long  GL_INDEX_OFFSET                   = 0x0D13;
		const long  GL_RED_SCALE                      = 0x0D14;
		const long  GL_RED_BIAS                       = 0x0D15;
		const long  GL_ZOOM_X                         = 0x0D16;
		const long  GL_ZOOM_Y                         = 0x0D17;
		const long  GL_GREEN_SCALE                    = 0x0D18;
		const long  GL_GREEN_BIAS                     = 0x0D19;
		const long  GL_BLUE_SCALE                     = 0x0D1A;
		const long  GL_BLUE_BIAS                      = 0x0D1B;
		const long  GL_ALPHA_SCALE                    = 0x0D1C;
		const long  GL_ALPHA_BIAS                     = 0x0D1D;
		const long  GL_DEPTH_SCALE                    = 0x0D1E;
		const long  GL_DEPTH_BIAS                     = 0x0D1F;
		const long  GL_MAX_EVAL_ORDER                 = 0x0D30;
		const long  GL_MAX_LIGHTS                     = 0x0D31;
		const long  GL_MAX_CLIP_PLANES                = 0x0D32;
		const long  GL_MAX_TEXTURE_SIZE               = 0x0D33;
		const long  GL_MAX_PIXEL_MAP_TABLE            = 0x0D34;
		const long  GL_MAX_ATTRIB_STACK_DEPTH         = 0x0D35;
		const long  GL_MAX_MODELVIEW_STACK_DEPTH      = 0x0D36;
		const long  GL_MAX_NAME_STACK_DEPTH           = 0x0D37;
		const long  GL_MAX_PROJECTION_STACK_DEPTH     = 0x0D38;
		const long  GL_MAX_TEXTURE_STACK_DEPTH        = 0x0D39;
		const long  GL_MAX_VIEWPORT_DIMS              = 0x0D3A;
		const long  GL_MAX_CLIENT_ATTRIB_STACK_DEPTH  = 0x0D3B;
		const long  GL_SUBPIXEL_BITS                  = 0x0D50;
		const long  GL_INDEX_BITS                     = 0x0D51;
		const long  GL_RED_BITS                       = 0x0D52;
		const long  GL_GREEN_BITS                     = 0x0D53;
		const long  GL_BLUE_BITS                      = 0x0D54;
		const long  GL_ALPHA_BITS                     = 0x0D55;
		const long  GL_DEPTH_BITS                     = 0x0D56;
		const long  GL_STENCIL_BITS                   = 0x0D57;
		const long  GL_ACCUM_RED_BITS                 = 0x0D58;
		const long  GL_ACCUM_GREEN_BITS               = 0x0D59;
		const long  GL_ACCUM_BLUE_BITS                = 0x0D5A;
		const long  GL_ACCUM_ALPHA_BITS               = 0x0D5B;
		const long  GL_NAME_STACK_DEPTH               = 0x0D70;
		const long  GL_AUTO_NORMAL                    = 0x0D80;
		const long  GL_MAP1_COLOR_4                   = 0x0D90;
		const long  GL_MAP1_INDEX                     = 0x0D91;
		const long  GL_MAP1_NORMAL                    = 0x0D92;
		const long  GL_MAP1_TEXTURE_COORD_1           = 0x0D93;
		const long  GL_MAP1_TEXTURE_COORD_2           = 0x0D94;
		const long  GL_MAP1_TEXTURE_COORD_3           = 0x0D95;
		const long  GL_MAP1_TEXTURE_COORD_4           = 0x0D96;
		const long  GL_MAP1_VERTEX_3                  = 0x0D97;
		const long  GL_MAP1_VERTEX_4                  = 0x0D98;
		const long  GL_MAP2_COLOR_4                   = 0x0DB0;
		const long  GL_MAP2_INDEX                     = 0x0DB1;
		const long  GL_MAP2_NORMAL                    = 0x0DB2;
		const long  GL_MAP2_TEXTURE_COORD_1           = 0x0DB3;
		const long  GL_MAP2_TEXTURE_COORD_2           = 0x0DB4;
		const long  GL_MAP2_TEXTURE_COORD_3           = 0x0DB5;
		const long  GL_MAP2_TEXTURE_COORD_4           = 0x0DB6;
		const long  GL_MAP2_VERTEX_3                  = 0x0DB7;
		const long  GL_MAP2_VERTEX_4                  = 0x0DB8;
		const long  GL_MAP1_GRID_DOMAIN               = 0x0DD0;
		const long  GL_MAP1_GRID_SEGMENTS             = 0x0DD1;
		const long  GL_MAP2_GRID_DOMAIN               = 0x0DD2;
		const long  GL_MAP2_GRID_SEGMENTS             = 0x0DD3;
		const long  GL_TEXTURE_1D                     = 0x0DE0;
		const long  GL_TEXTURE_2D                     = 0x0DE1;
		const long  GL_FEEDBACK_BUFFER_POINTER        = 0x0DF0;
		const long  GL_FEEDBACK_BUFFER_SIZE           = 0x0DF1;
		const long  GL_FEEDBACK_BUFFER_TYPE           = 0x0DF2;
		const long  GL_SELECTION_BUFFER_POINTER       = 0x0DF3;
		const long  GL_SELECTION_BUFFER_SIZE          = 0x0DF4;
		/*      GL_TEXTURE_BINDING_1D */
		/*      GL_TEXTURE_BINDING_2D */
		/*      GL_VERTEX_ARRAY */
		/*      GL_NORMAL_ARRAY */
		/*      GL_COLOR_ARRAY */
		/*      GL_INDEX_ARRAY */
		/*      GL_TEXTURE_COORD_ARRAY */
		/*      GL_EDGE_FLAG_ARRAY */
		/*      GL_VERTEX_ARRAY_SIZE */
		/*      GL_VERTEX_ARRAY_TYPE */
		/*      GL_VERTEX_ARRAY_STRIDE */
		/*      GL_NORMAL_ARRAY_TYPE */
		/*      GL_NORMAL_ARRAY_STRIDE */
		/*      GL_COLOR_ARRAY_SIZE */
		/*      GL_COLOR_ARRAY_TYPE */
		/*      GL_COLOR_ARRAY_STRIDE */
		/*      GL_INDEX_ARRAY_TYPE */
		/*      GL_INDEX_ARRAY_STRIDE */
		/*      GL_TEXTURE_COORD_ARRAY_SIZE */
		/*      GL_TEXTURE_COORD_ARRAY_TYPE */
		/*      GL_TEXTURE_COORD_ARRAY_STRIDE */
		/*      GL_EDGE_FLAG_ARRAY_STRIDE */
		/*      GL_POLYGON_OFFSET_FACTOR */
		/*      GL_POLYGON_OFFSET_UNITS */

		/* GetTextureParameter */
		/*      GL_TEXTURE_MAG_FILTER */
		/*      GL_TEXTURE_MIN_FILTER */
		/*      GL_TEXTURE_WRAP_S */
		/*      GL_TEXTURE_WRAP_T */
		const long  GL_TEXTURE_WIDTH                  = 0x1000;
		const long  GL_TEXTURE_HEIGHT                 = 0x1001;
		const long  GL_TEXTURE_INTERNAL_FORMAT        = 0x1003;
		const long  GL_TEXTURE_BORDER_COLOR           = 0x1004;
		const long  GL_TEXTURE_BORDER                 = 0x1005;
		/*      GL_TEXTURE_RED_SIZE */
		/*      GL_TEXTURE_GREEN_SIZE */
		/*      GL_TEXTURE_BLUE_SIZE */
		/*      GL_TEXTURE_ALPHA_SIZE */
		/*      GL_TEXTURE_LUMINANCE_SIZE */
		/*      GL_TEXTURE_INTENSITY_SIZE */
		/*      GL_TEXTURE_PRIORITY */
		/*      GL_TEXTURE_RESIDENT */

		/* HintMode */
		const long  GL_DONT_CARE                      = 0x1100;
		const long  GL_FASTEST                        = 0x1101;
		const long  GL_NICEST                         = 0x1102;

		/* HintTarget */
		/*      GL_PERSPECTIVE_CORRECTION_HINT */
		/*      GL_POINT_SMOOTH_HINT */
		/*      GL_LINE_SMOOTH_HINT */
		/*      GL_POLYGON_SMOOTH_HINT */
		/*      GL_FOG_HINT */
		/*      GL_PHONG_HINT */

		/* IndexPointerType */
		/*      GL_SHORT */
		/*      GL_INT */
		/*      GL_FLOAT */
		/*      GL_DOUBLE */

		/* LightModelParameter */
		/*      GL_LIGHT_MODEL_AMBIENT */
		/*      GL_LIGHT_MODEL_LOCAL_VIEWER */
		/*      GL_LIGHT_MODEL_TWO_SIDE */

		/* LightName */
		const long  GL_LIGHT0                         = 0x4000;
		const long  GL_LIGHT1                         = 0x4001;
		const long  GL_LIGHT2                         = 0x4002;
		const long  GL_LIGHT3                         = 0x4003;
		const long  GL_LIGHT4                         = 0x4004;
		const long  GL_LIGHT5                         = 0x4005;
		const long  GL_LIGHT6                         = 0x4006;
		const long  GL_LIGHT7                         = 0x4007;

		/* LightParameter */
		const long  GL_AMBIENT                        = 0x1200;
		const long  GL_DIFFUSE                        = 0x1201;
		const long  GL_SPECULAR                       = 0x1202;
		const long  GL_POSITION                       = 0x1203;
		const long  GL_SPOT_DIRECTION                 = 0x1204;
		const long  GL_SPOT_EXPONENT                  = 0x1205;
		const long  GL_SPOT_CUTOFF                    = 0x1206;
		const long  GL_CONSTANT_ATTENUATION           = 0x1207;
		const long  GL_LINEAR_ATTENUATION             = 0x1208;
		const long  GL_QUADRATIC_ATTENUATION          = 0x1209;

		/* InterleavedArrays */
		/*      GL_V2F */
		/*      GL_V3F */
		/*      GL_C4UB_V2F */
		/*      GL_C4UB_V3F */
		/*      GL_C3F_V3F */
		/*      GL_N3F_V3F */
		/*      GL_C4F_N3F_V3F */
		/*      GL_T2F_V3F */
		/*      GL_T4F_V4F */
		/*      GL_T2F_C4UB_V3F */
		/*      GL_T2F_C3F_V3F */
		/*      GL_T2F_N3F_V3F */
		/*      GL_T2F_C4F_N3F_V3F */
		/*      GL_T4F_C4F_N3F_V4F */

		/* ListMode */
		const long  GL_COMPILE                        = 0x1300;
		const long  GL_COMPILE_AND_EXECUTE            = 0x1301;

		/* ListNameType */
		/*      GL_BYTE */
		/*      GL_UNSIGNED_BYTE */
		/*      GL_SHORT */
		/*      GL_UNSIGNED_SHORT */
		/*      GL_INT */
		/*      GL_UNSIGNED_INT */
		/*      GL_FLOAT */
		/*      GL_2_BYTES */
		/*      GL_3_BYTES */
		/*      GL_4_BYTES */

		/* LogicOp */
		const long  GL_CLEAR                          = 0x1500;
		const long  GL_AND                            = 0x1501;
		const long  GL_AND_REVERSE                    = 0x1502;
		const long  GL_COPY                           = 0x1503;
		const long  GL_AND_INVERTED                   = 0x1504;
		const long  GL_NOOP                           = 0x1505;
		const long  GL_XOR                            = 0x1506;
		const long  GL_OR                             = 0x1507;
		const long  GL_NOR                            = 0x1508;
		const long  GL_EQUIV                          = 0x1509;
		const long  GL_INVERT                         = 0x150A;
		const long  GL_OR_REVERSE                     = 0x150B;
		const long  GL_COPY_INVERTED                  = 0x150C;
		const long  GL_OR_INVERTED                    = 0x150D;
		const long  GL_NAND                           = 0x150E;
		const long  GL_SET                            = 0x150F;

		/* MapTarget */
		/*      GL_MAP1_COLOR_4 */
		/*      GL_MAP1_INDEX */
		/*      GL_MAP1_NORMAL */
		/*      GL_MAP1_TEXTURE_COORD_1 */
		/*      GL_MAP1_TEXTURE_COORD_2 */
		/*      GL_MAP1_TEXTURE_COORD_3 */
		/*      GL_MAP1_TEXTURE_COORD_4 */
		/*      GL_MAP1_VERTEX_3 */
		/*      GL_MAP1_VERTEX_4 */
		/*      GL_MAP2_COLOR_4 */
		/*      GL_MAP2_INDEX */
		/*      GL_MAP2_NORMAL */
		/*      GL_MAP2_TEXTURE_COORD_1 */
		/*      GL_MAP2_TEXTURE_COORD_2 */
		/*      GL_MAP2_TEXTURE_COORD_3 */
		/*      GL_MAP2_TEXTURE_COORD_4 */
		/*      GL_MAP2_VERTEX_3 */
		/*      GL_MAP2_VERTEX_4 */

		/* MaterialFace */
		/*      GL_FRONT */
		/*      GL_BACK */
		/*      GL_FRONT_AND_BACK */

		/* MaterialParameter */
		const long  GL_EMISSION                       = 0x1600;
		const long  GL_SHININESS                      = 0x1601;
		const long  GL_AMBIENT_AND_DIFFUSE            = 0x1602;
		const long  GL_COLOR_INDEXES                  = 0x1603;
		/*      GL_AMBIENT */
		/*      GL_DIFFUSE */
		/*      GL_SPECULAR */

		/* MatrixMode */
		const long  GL_MODELVIEW                      = 0x1700;
		const long  GL_PROJECTION                     = 0x1701;
		const long  GL_TEXTURE                        = 0x1702;

		/* MeshMode1 */
		/*      GL_POINT */
		/*      GL_LINE */

		/* MeshMode2 */
		/*      GL_POINT */
		/*      GL_LINE */
		/*      GL_FILL */

		/* NormalPointerType */
		/*      GL_BYTE */
		/*      GL_SHORT */
		/*      GL_INT */
		/*      GL_FLOAT */
		/*      GL_DOUBLE */

		/* PixelCopyType */
		const long  GL_COLOR                          = 0x1800;
		const long  GL_DEPTH                          = 0x1801;
		const long  GL_STENCIL                        = 0x1802;

		/* PixelFormat */
		const long  GL_COLOR_INDEX                    = 0x1900;
		const long  GL_STENCIL_INDEX                  = 0x1901;
		const long  GL_DEPTH_COMPONENT                = 0x1902;
		const long  GL_RED                            = 0x1903;
		const long  GL_GREEN                          = 0x1904;
		const long  GL_BLUE                           = 0x1905;
		const long  GL_ALPHA                          = 0x1906;
		const long  GL_RGB                            = 0x1907;
		const long  GL_RGBA                           = 0x1908;
		const long  GL_LUMINANCE                      = 0x1909;
		const long  GL_LUMINANCE_ALPHA                = 0x190A;

		/* PixelMap */
		/*      GL_PIXEL_MAP_I_TO_I */
		/*      GL_PIXEL_MAP_S_TO_S */
		/*      GL_PIXEL_MAP_I_TO_R */
		/*      GL_PIXEL_MAP_I_TO_G */
		/*      GL_PIXEL_MAP_I_TO_B */
		/*      GL_PIXEL_MAP_I_TO_A */
		/*      GL_PIXEL_MAP_R_TO_R */
		/*      GL_PIXEL_MAP_G_TO_G */
		/*      GL_PIXEL_MAP_B_TO_B */
		/*      GL_PIXEL_MAP_A_TO_A */

		/* PixelStore */
		/*      GL_UNPACK_SWAP_BYTES */
		/*      GL_UNPACK_LSB_FIRST */
		/*      GL_UNPACK_ROW_LENGTH */
		/*      GL_UNPACK_SKIP_ROWS */
		/*      GL_UNPACK_SKIP_PIXELS */
		/*      GL_UNPACK_ALIGNMENT */
		/*      GL_PACK_SWAP_BYTES */
		/*      GL_PACK_LSB_FIRST */
		/*      GL_PACK_ROW_LENGTH */
		/*      GL_PACK_SKIP_ROWS */
		/*      GL_PACK_SKIP_PIXELS */
		/*      GL_PACK_ALIGNMENT */

		/* PixelTransfer */
		/*      GL_MAP_COLOR */
		/*      GL_MAP_STENCIL */
		/*      GL_INDEX_SHIFT */
		/*      GL_INDEX_OFFSET */
		/*      GL_RED_SCALE */
		/*      GL_RED_BIAS */
		/*      GL_GREEN_SCALE */
		/*      GL_GREEN_BIAS */
		/*      GL_BLUE_SCALE */
		/*      GL_BLUE_BIAS */
		/*      GL_ALPHA_SCALE */
		/*      GL_ALPHA_BIAS */
		/*      GL_DEPTH_SCALE */
		/*      GL_DEPTH_BIAS */

		/* PixelType */
		const long  GL_BITMAP                         = 0x1A00;
		/*      GL_BYTE */
		/*      GL_UNSIGNED_BYTE */
		/*      GL_SHORT */
		/*      GL_UNSIGNED_SHORT */
		/*      GL_INT */
		/*      GL_UNSIGNED_INT */
		/*      GL_FLOAT */

		/* PolygonMode */
		const long  GL_POINT                          = 0x1B00;
		const long  GL_LINE                           = 0x1B01;
		const long  GL_FILL                           = 0x1B02;

		/* ReadBufferMode */
		/*      GL_FRONT_LEFT */
		/*      GL_FRONT_RIGHT */
		/*      GL_BACK_LEFT */
		/*      GL_BACK_RIGHT */
		/*      GL_FRONT */
		/*      GL_BACK */
		/*      GL_LEFT */
		/*      GL_RIGHT */
		/*      GL_AUX0 */
		/*      GL_AUX1 */
		/*      GL_AUX2 */
		/*      GL_AUX3 */

		/* RenderingMode */
		const long  GL_RENDER                         = 0x1C00;
		const long  GL_FEEDBACK                       = 0x1C01;
		const long  GL_SELECT                         = 0x1C02;

		/* ShadingModel */
		const long  GL_FLAT                           = 0x1D00;
		const long  GL_SMOOTH                         = 0x1D01;


		/* StencilFunction */
		/*      GL_NEVER */
		/*      GL_LESS */
		/*      GL_EQUAL */
		/*      GL_LEQUAL */
		/*      GL_GREATER */
		/*      GL_NOTEQUAL */
		/*      GL_GEQUAL */
		/*      GL_ALWAYS */

		/* StencilOp */
		/*      GL_ZERO */
		const long  GL_KEEP                           = 0x1E00;
		const long  GL_REPLACE                        = 0x1E01;
		const long  GL_INCR                           = 0x1E02;
		const long  GL_DECR                           = 0x1E03;
		/*      GL_INVERT */

		/* StringName */
		const long  GL_VENDOR                         = 0x1F00;
		const long  GL_RENDERER                       = 0x1F01;
		const long  GL_VERSION                        = 0x1F02;
		const long  GL_EXTENSIONS                     = 0x1F03;

		/* TextureCoordName */
		const long  GL_S                              = 0x2000;
		const long  GL_T                              = 0x2001;
		const long  GL_R                              = 0x2002;
		const long  GL_Q                              = 0x2003;

		/* TexCoordPointerType */
		/*      GL_SHORT */
		/*      GL_INT */
		/*      GL_FLOAT */
		/*      GL_DOUBLE */

		/* TextureEnvMode */
		const long  GL_MODULATE                       = 0x2100;
		const long  GL_DECAL                          = 0x2101;
		/*      GL_BLEND */
		/*      GL_REPLACE */

		/* TextureEnvParameter */
		const long  GL_TEXTURE_ENV_MODE               = 0x2200;
		const long  GL_TEXTURE_ENV_COLOR              = 0x2201;

		/* TextureEnvTarget */
		const long  GL_TEXTURE_ENV                    = 0x2300;

		/* TextureGenMode */
		const long  GL_EYE_LINEAR                     = 0x2400;
		const long  GL_OBJECT_LINEAR                  = 0x2401;
		const long  GL_SPHERE_MAP                     = 0x2402;

		/* TextureGenParameter */
		const long  GL_TEXTURE_GEN_MODE               = 0x2500;
		const long  GL_OBJECT_PLANE                   = 0x2501;
		const long  GL_EYE_PLANE                      = 0x2502;

		/* TextureMagFilter */
		const long  GL_NEAREST                        = 0x2600;
		const long  GL_LINEAR                         = 0x2601;

		/* TextureMinFilter */
		/*      GL_NEAREST */
		/*      GL_LINEAR */
		const long  GL_NEAREST_MIPMAP_NEAREST         = 0x2700;
		const long  GL_LINEAR_MIPMAP_NEAREST          = 0x2701;
		const long  GL_NEAREST_MIPMAP_LINEAR          = 0x2702;
		const long  GL_LINEAR_MIPMAP_LINEAR           = 0x2703;

		/* TextureParameterName */
		const long  GL_TEXTURE_MAG_FILTER             = 0x2800;
		const long  GL_TEXTURE_MIN_FILTER             = 0x2801;
		const long  GL_TEXTURE_WRAP_S                 = 0x2802;
		const long  GL_TEXTURE_WRAP_T                 = 0x2803;
		/*      GL_TEXTURE_BORDER_COLOR */
		/*      GL_TEXTURE_PRIORITY */

		/* TextureTarget */
		/*      GL_TEXTURE_1D */
		/*      GL_TEXTURE_2D */
		/*      GL_PROXY_TEXTURE_1D */
		/*      GL_PROXY_TEXTURE_2D */

		/* TextureWrapMode */
		const long  GL_CLAMP                          = 0x2900;
		const long  GL_REPEAT                         = 0x2901;

		/* VertexPointerType */
		/*      GL_SHORT */
		/*      GL_INT */
		/*      GL_FLOAT */
		/*      GL_DOUBLE */

		/* ClientAttribMask */
		const long  GL_CLIENT_PIXEL_STORE_BIT         = 0x00000001;
		const long  GL_CLIENT_VERTEX_ARRAY_BIT        = 0x00000002;
		const long  GL_CLIENT_ALL_ATTRIB_BITS         = 0xffffffff;

		/* polygon_offset */
		const long  GL_POLYGON_OFFSET_FACTOR          = 0x8038;
		const long  GL_POLYGON_OFFSET_UNITS           = 0x2A00;
		const long  GL_POLYGON_OFFSET_POINT           = 0x2A01;
		const long  GL_POLYGON_OFFSET_LINE            = 0x2A02;
		const long  GL_POLYGON_OFFSET_FILL            = 0x8037;

		/* texture */
		const long  GL_ALPHA4                         = 0x803B;
		const long  GL_ALPHA8                         = 0x803C;
		const long  GL_ALPHA12                        = 0x803D;
		const long  GL_ALPHA16                        = 0x803E;
		const long  GL_LUMINANCE4                     = 0x803F;
		const long  GL_LUMINANCE8                     = 0x8040;
		const long  GL_LUMINANCE12                    = 0x8041;
		const long  GL_LUMINANCE16                    = 0x8042;
		const long  GL_LUMINANCE4_ALPHA4              = 0x8043;
		const long  GL_LUMINANCE6_ALPHA2              = 0x8044;
		const long  GL_LUMINANCE8_ALPHA8              = 0x8045;
		const long  GL_LUMINANCE12_ALPHA4             = 0x8046;
		const long  GL_LUMINANCE12_ALPHA12            = 0x8047;
		const long  GL_LUMINANCE16_ALPHA16            = 0x8048;
		const long  GL_INTENSITY                      = 0x8049;
		const long  GL_INTENSITY4                     = 0x804A;
		const long  GL_INTENSITY8                     = 0x804B;
		const long  GL_INTENSITY12                    = 0x804C;
		const long  GL_INTENSITY16                    = 0x804D;
		const long  GL_R3_G3_B2                       = 0x2A10;
		const long  GL_RGB4                           = 0x804F;
		const long  GL_RGB5                           = 0x8050;
		const long  GL_RGB8                           = 0x8051;
		const long  GL_RGB10                          = 0x8052;
		const long  GL_RGB12                          = 0x8053;
		const long  GL_RGB16                          = 0x8054;
		const long  GL_RGBA2                          = 0x8055;
		const long  GL_RGBA4                          = 0x8056;
		const long  GL_RGB5_A1                        = 0x8057;
		const long  GL_RGBA8                          = 0x8058;
		const long  GL_RGB10_A2                       = 0x8059;
		const long  GL_RGBA12                         = 0x805A;
		const long  GL_RGBA16                         = 0x805B;
		const long  GL_TEXTURE_RED_SIZE               = 0x805C;
		const long  GL_TEXTURE_GREEN_SIZE             = 0x805D;
		const long  GL_TEXTURE_BLUE_SIZE              = 0x805E;
		const long  GL_TEXTURE_ALPHA_SIZE             = 0x805F;
		const long  GL_TEXTURE_LUMINANCE_SIZE         = 0x8060;
		const long  GL_TEXTURE_INTENSITY_SIZE         = 0x8061;
		const long  GL_PROXY_TEXTURE_1D               = 0x8063;
		const long  GL_PROXY_TEXTURE_2D               = 0x8064;

		/* texture_object */
		const long  GL_TEXTURE_PRIORITY               = 0x8066;
		const long  GL_TEXTURE_RESIDENT               = 0x8067;
		const long  GL_TEXTURE_BINDING_1D             = 0x8068;
		const long  GL_TEXTURE_BINDING_2D             = 0x8069;

		/* vertex_array */
		const long  GL_VERTEX_ARRAY                   = 0x8074;
		const long  GL_NORMAL_ARRAY                   = 0x8075;
		const long  GL_COLOR_ARRAY                    = 0x8076;
		const long  GL_INDEX_ARRAY                    = 0x8077;
		const long  GL_TEXTURE_COORD_ARRAY            = 0x8078;
		const long  GL_EDGE_FLAG_ARRAY                = 0x8079;
		const long  GL_VERTEX_ARRAY_SIZE              = 0x807A;
		const long  GL_VERTEX_ARRAY_TYPE              = 0x807B;
		const long  GL_VERTEX_ARRAY_STRIDE            = 0x807C;
		const long  GL_NORMAL_ARRAY_TYPE              = 0x807E;
		const long  GL_NORMAL_ARRAY_STRIDE            = 0x807F;
		const long  GL_COLOR_ARRAY_SIZE               = 0x8081;
		const long  GL_COLOR_ARRAY_TYPE               = 0x8082;
		const long  GL_COLOR_ARRAY_STRIDE             = 0x8083;
		const long  GL_INDEX_ARRAY_TYPE               = 0x8085;
		const long  GL_INDEX_ARRAY_STRIDE             = 0x8086;
		const long  GL_TEXTURE_COORD_ARRAY_SIZE       = 0x8088;
		const long  GL_TEXTURE_COORD_ARRAY_TYPE       = 0x8089;
		const long  GL_TEXTURE_COORD_ARRAY_STRIDE     = 0x808A;
		const long  GL_EDGE_FLAG_ARRAY_STRIDE         = 0x808C;
		const long  GL_VERTEX_ARRAY_POINTER           = 0x808E;
		const long  GL_NORMAL_ARRAY_POINTER           = 0x808F;
		const long  GL_COLOR_ARRAY_POINTER            = 0x8090;
		const long  GL_INDEX_ARRAY_POINTER            = 0x8091;
		const long  GL_TEXTURE_COORD_ARRAY_POINTER    = 0x8092;
		const long  GL_EDGE_FLAG_ARRAY_POINTER        = 0x8093;
		const long  GL_V2F                            = 0x2A20;
		const long  GL_V3F                            = 0x2A21;
		const long  GL_C4UB_V2F                       = 0x2A22;
		const long  GL_C4UB_V3F                       = 0x2A23;
		const long  GL_C3F_V3F                        = 0x2A24;
		const long  GL_N3F_V3F                        = 0x2A25;
		const long  GL_C4F_N3F_V3F                    = 0x2A26;
		const long  GL_T2F_V3F                        = 0x2A27;
		const long  GL_T4F_V4F                        = 0x2A28;
		const long  GL_T2F_C4UB_V3F                   = 0x2A29;
		const long  GL_T2F_C3F_V3F                    = 0x2A2A;
		const long  GL_T2F_N3F_V3F                    = 0x2A2B;
		const long  GL_T2F_C4F_N3F_V3F                = 0x2A2C;
		const long  GL_T4F_C4F_N3F_V4F                = 0x2A2D;

		/* Extensions */
		/*const long  GL_EXT_vertex_array               = 1;
		const long  GL_EXT_bgra                       = 1;
		const long  GL_EXT_paletted_texture           = 1;
		const long  GL_WIN_swap_hint                  = 1;
		const long  GL_WIN_draw_range_elements        = 1;
		*/
		// const long  GL_WIN_phong_shading             = 1;
		// const long  GL_WIN_specular_fog              = 1;

		/* EXT_vertex_array */
		const long  GL_VERTEX_ARRAY_EXT               = 0x8074;
		const long  GL_NORMAL_ARRAY_EXT               = 0x8075;
		const long  GL_COLOR_ARRAY_EXT                = 0x8076;
		const long  GL_INDEX_ARRAY_EXT                = 0x8077;
		const long  GL_TEXTURE_COORD_ARRAY_EXT        = 0x8078;
		const long  GL_EDGE_FLAG_ARRAY_EXT            = 0x8079;
		const long  GL_VERTEX_ARRAY_SIZE_EXT          = 0x807A;
		const long  GL_VERTEX_ARRAY_TYPE_EXT          = 0x807B;
		const long  GL_VERTEX_ARRAY_STRIDE_EXT        = 0x807C;
		const long  GL_VERTEX_ARRAY_COUNT_EXT         = 0x807D;
		const long  GL_NORMAL_ARRAY_TYPE_EXT          = 0x807E;
		const long  GL_NORMAL_ARRAY_STRIDE_EXT        = 0x807F;
		const long  GL_NORMAL_ARRAY_COUNT_EXT         = 0x8080;
		const long  GL_COLOR_ARRAY_SIZE_EXT           = 0x8081;
		const long  GL_COLOR_ARRAY_TYPE_EXT           = 0x8082;
		const long  GL_COLOR_ARRAY_STRIDE_EXT         = 0x8083;
		const long  GL_COLOR_ARRAY_COUNT_EXT          = 0x8084;
		const long  GL_INDEX_ARRAY_TYPE_EXT           = 0x8085;
		const long  GL_INDEX_ARRAY_STRIDE_EXT         = 0x8086;
		const long  GL_INDEX_ARRAY_COUNT_EXT          = 0x8087;
		const long  GL_TEXTURE_COORD_ARRAY_SIZE_EXT   = 0x8088;
		const long  GL_TEXTURE_COORD_ARRAY_TYPE_EXT   = 0x8089;
		const long  GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A;
		const long  GL_TEXTURE_COORD_ARRAY_COUNT_EXT  = 0x808B;
		const long  GL_EDGE_FLAG_ARRAY_STRIDE_EXT     = 0x808C;
		const long  GL_EDGE_FLAG_ARRAY_COUNT_EXT      = 0x808D;
		const long  GL_VERTEX_ARRAY_POINTER_EXT       = 0x808E;
		const long  GL_NORMAL_ARRAY_POINTER_EXT       = 0x808F;
		const long  GL_COLOR_ARRAY_POINTER_EXT        = 0x8090;
		const long  GL_INDEX_ARRAY_POINTER_EXT        = 0x8091;
		const long  GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;
		const long  GL_EDGE_FLAG_ARRAY_POINTER_EXT    = 0x8093;
		const long  GL_DOUBLE_EXT                     = 0x140A; //GL_DOUBLE;

		/* EXT_bgra */
		const long  GL_BGR_EXT                        = 0x80E0;
		const long  GL_BGRA_EXT                       = 0x80E1;

		/* EXT_paletted_texture */

		/* These must match the GL_COLOR_TABLE_*_SGI enumerants */
		const long  GL_COLOR_TABLE_FORMAT_EXT         = 0x80D8;
		const long  GL_COLOR_TABLE_WIDTH_EXT          = 0x80D9;
		const long  GL_COLOR_TABLE_RED_SIZE_EXT       = 0x80DA;
		const long  GL_COLOR_TABLE_GREEN_SIZE_EXT     = 0x80DB;
		const long  GL_COLOR_TABLE_BLUE_SIZE_EXT      = 0x80DC;
		const long  GL_COLOR_TABLE_ALPHA_SIZE_EXT     = 0x80DD;
		const long  GL_COLOR_TABLE_LUMINANCE_SIZE_EXT = 0x80DE;
		const long  GL_COLOR_TABLE_INTENSITY_SIZE_EXT = 0x80DF;

		const long  GL_COLOR_INDEX1_EXT               = 0x80E2;
		const long  GL_COLOR_INDEX2_EXT               = 0x80E3;
		const long  GL_COLOR_INDEX4_EXT               = 0x80E4;
		const long  GL_COLOR_INDEX8_EXT               = 0x80E5;
		const long  GL_COLOR_INDEX12_EXT              = 0x80E6;
		const long  GL_COLOR_INDEX16_EXT              = 0x80E7;

		/* WIN_draw_range_elements */
		const long  GL_MAX_ELEMENTS_VERTICES_WIN      = 0x80E8;
		const long  GL_MAX_ELEMENTS_INDICES_WIN       = 0x80E9;

		/* WIN_phong_shading */
		const long  GL_PHONG_WIN                      = 0x80EA;
		const long  GL_PHONG_HINT_WIN                 = 0x80EB;

		/* WIN_specular_fog */
		const long  GL_FOG_SPECULAR_TEXTURE_WIN       = 0x80EC;

		/* For compatibility with OpenGL v1.0 */
		const long  GL_LOGIC_OP = 0x0BF1; //GL_INDEX_LOGIC_OP;
		const long  GL_TEXTURE_COMPONENTS = 0x1003; //GL_TEXTURE_INTERNAL_FORMAT;

		[entry("glAccum")] void glAccum (GLenum op, GLfloat value);
		[entry("glAlphaFunc")] void glAlphaFunc (GLenum func, GLclampf ref);
		[entry("glAreTexturesResident")] GLboolean glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences);
		[entry("glArrayElement")] void glArrayElement (GLint i);
		[entry("glBegin")] void glBegin (GLenum mode);
		[entry("glBindTexture")] void glBindTexture (GLenum target, GLuint texture);
		[entry("glBitmap")] void glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
		[entry("glBlendFunc")] void glBlendFunc (GLenum sfactor, GLenum dfactor);
		[entry("glCallList")] void glCallList (GLuint list);
		[entry("glCallLists")] void glCallLists (GLsizei n, GLenum type, const GLvoid *lists);
		[entry("glClear")] void glClear (GLbitfield mask);
		[entry("glClearAccum")] void glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
		[entry("glClearColor")] void glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
		[entry("glClearDepth")] void glClearDepth (GLclampd depth);
		[entry("glClearIndex")] void glClearIndex (GLfloat c);
		[entry("glClearStencil")] void glClearStencil (GLint s);
		[entry("glClipPlane")] void glClipPlane (GLenum plane, const GLdouble *equation);
		[entry("glColor3b")] void glColor3b (GLbyte red, GLbyte green, GLbyte blue);
		[entry("glColor3bv")] void glColor3bv (const GLbyte *v);
		[entry("glColor3d")] void glColor3d (GLdouble red, GLdouble green, GLdouble blue);
		[entry("glColor3dv")] void glColor3dv (const GLdouble *v);
		[entry("glColor3f")] void glColor3f (GLfloat red, GLfloat green, GLfloat blue);
		[entry("glColor3fv")] void glColor3fv (const GLfloat *v);
		[entry("glColor3i")] void glColor3i (GLint red, GLint green, GLint blue);
		[entry("glColor3iv")] void glColor3iv (const GLint *v);
		[entry("glColor3s")] void glColor3s (GLshort red, GLshort green, GLshort blue);
		[entry("glColor3sv")] void glColor3sv (const GLshort *v);
		[entry("glColor3ub")] void glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
		[entry("glColor3ubv")] void glColor3ubv (const GLubyte *v);
		[entry("glColor3ui")] void glColor3ui (GLuint red, GLuint green, GLuint blue);
		[entry("glColor3uiv")] void glColor3uiv (const GLuint *v);
		[entry("glColor3us")] void glColor3us (GLushort red, GLushort green, GLushort blue);
		[entry("glColor3usv")] void glColor3usv (const GLushort *v);
		[entry("glColor4b")] void glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
		[entry("glColor4bv")] void glColor4bv (const GLbyte *v);
		[entry("glColor4d")] void glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
		[entry("glColor4dv")] void glColor4dv (const GLdouble *v);
		[entry("glColor4f")] void glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
		[entry("glColor4fv")] void glColor4fv (const GLfloat *v);
		[entry("glColor4i")] void glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
		[entry("glColor4iv")] void glColor4iv (const GLint *v);
		[entry("glColor4s")] void glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
		[entry("glColor4sv")] void glColor4sv (const GLshort *v);
		[entry("glColor4ub")] void glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
		[entry("glColor4ubv")] void glColor4ubv (const GLubyte *v);
		[entry("glColor4ui")] void glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
		[entry("glColor4uiv")] void glColor4uiv (const GLuint *v);
		[entry("glColor4us")] void glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
		[entry("glColor4usv")] void glColor4usv (const GLushort *v);
		[entry("glColorMask")] void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
		[entry("glColorMaterial")] void glColorMaterial (GLenum face, GLenum mode);
		[entry("glColorPointer")] void glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
		[entry("glCopyPixels")] void glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
		[entry("glCopyTexImage1D")] void glCopyTexImage1D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
		[entry("glCopyTexImage2D")] void glCopyTexImage2D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
		[entry("glCopyTexSubImage1D")] void glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
		[entry("glCopyTexSubImage2D")] void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
		[entry("glCullFace")] void glCullFace (GLenum mode);
		[entry("glDeleteLists")] void glDeleteLists (GLuint list, GLsizei range);
		[entry("glDeleteTextures")] void glDeleteTextures (GLsizei n, const GLuint *textures);
		[entry("glDepthFunc")] void glDepthFunc (GLenum func);
		[entry("glDepthMask")] void glDepthMask (GLboolean flag);
		[entry("glDepthRange")] void glDepthRange (GLclampd zNear, GLclampd zFar);
		[entry("glDisable")] void glDisable (GLenum cap);
		[entry("glDisableClientState")] void glDisableClientState (GLenum array);
		[entry("glDrawArrays")] void glDrawArrays (GLenum mode, GLint first, GLsizei count);
		[entry("glDrawBuffer")] void glDrawBuffer (GLenum mode);
		[entry("glDrawElements")] void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
		[entry("glDrawPixels")] void glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
		[entry("glEdgeFlag")] void glEdgeFlag (GLboolean flag);
		[entry("glEdgeFlagPointer")] void glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer);
		[entry("glEdgeFlagv")] void glEdgeFlagv (const GLboolean *flag);
		[entry("glEnable")] void glEnable (GLenum cap);
		[entry("glEnableClientState")] void glEnableClientState (GLenum array);
		[entry("glEnd")] void glEnd (void);
		[entry("glEndList")] void glEndList (void);
		[entry("glEvalCoord1d")] void glEvalCoord1d (GLdouble u);
		[entry("glEvalCoord1dv")] void glEvalCoord1dv (const GLdouble *u);
		[entry("glEvalCoord1f")] void glEvalCoord1f (GLfloat u);
		[entry("glEvalCoord1fv")] void glEvalCoord1fv (const GLfloat *u);
		[entry("glEvalCoord2d")] void glEvalCoord2d (GLdouble u, GLdouble v);
		[entry("glEvalCoord2dv")] void glEvalCoord2dv (const GLdouble *u);
		[entry("glEvalCoord2f")] void glEvalCoord2f (GLfloat u, GLfloat v);
		[entry("glEvalCoord2fv")] void glEvalCoord2fv (const GLfloat *u);
		[entry("glEvalMesh1")] void glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
		[entry("glEvalMesh2")] void glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
		[entry("glEvalPoint1")] void glEvalPoint1 (GLint i);
		[entry("glEvalPoint2")] void glEvalPoint2 (GLint i, GLint j);
		[entry("glFeedbackBuffer")] void glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer);
		[entry("glFinish")] void glFinish (void);
		[entry("glFlush")] void glFlush (void);
		[entry("glFogf")] void glFogf (GLenum pname, GLfloat param);
		[entry("glFogfv")] void glFogfv (GLenum pname, const GLfloat *params);
		[entry("glFogi")] void glFogi (GLenum pname, GLint param);
		[entry("glFogiv")] void glFogiv (GLenum pname, const GLint *params);
		[entry("glFrontFace")] void glFrontFace (GLenum mode);
		[entry("glFrustum")] void glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
		[entry("glGenLists")] GLuint glGenLists (GLsizei range);
		[entry("glGenTextures")] void glGenTextures (GLsizei n, GLuint *textures);
		[entry("glGetBooleanv")] void glGetBooleanv (GLenum pname, GLboolean *params);
		[entry("glGetClipPlane")] void glGetClipPlane (GLenum plane, GLdouble *equation);
		[entry("glGetDoublev")] void glGetDoublev (GLenum pname, GLdouble *params);
		[entry("glGetError")] GLenum glGetError (void);
		[entry("glGetFloatv")] void glGetFloatv (GLenum pname, GLfloat *params);
		[entry("glGetIntegerv")] void glGetIntegerv (GLenum pname, GLint *params);
		[entry("glGetLightfv")] void glGetLightfv (GLenum light, GLenum pname, GLfloat *params);
		[entry("glGetLightiv")] void glGetLightiv (GLenum light, GLenum pname, GLint *params);
		[entry("glGetMapdv")] void glGetMapdv (GLenum target, GLenum query, GLdouble *v);
		[entry("glGetMapfv")] void glGetMapfv (GLenum target, GLenum query, GLfloat *v);
		[entry("glGetMapiv")] void glGetMapiv (GLenum target, GLenum query, GLint *v);
		[entry("glGetMaterialfv")] void glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);
		[entry("glGetMaterialiv")] void glGetMaterialiv (GLenum face, GLenum pname, GLint *params);
		[entry("glGetPixelMapfv")] void glGetPixelMapfv (GLenum map, GLfloat *values);
		[entry("glGetPixelMapuiv")] void glGetPixelMapuiv (GLenum map, GLuint *values);
		[entry("glGetPixelMapusv")] void glGetPixelMapusv (GLenum map, GLushort *values);
		[entry("glGetPointerv")] void glGetPointerv (GLenum pname, GLvoid* *params);
		[entry("glGetPolygonStipple")] void glGetPolygonStipple (GLubyte *mask);
		[entry("GLubyte")] const GLubyte * glGetString (GLenum name);
		[entry("glGetTexEnvfv")] void glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params);
		[entry("glGetTexEnviv")] void glGetTexEnviv (GLenum target, GLenum pname, GLint *params);
		[entry("glGetTexGendv")] void glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params);
		[entry("glGetTexGenfv")] void glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);
		[entry("glGetTexGeniv")] void glGetTexGeniv (GLenum coord, GLenum pname, GLint *params);
		[entry("glGetTexImage")] void glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
		[entry("glGetTexLevelParameterfv")] void glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);
		[entry("glGetTexLevelParameteriv")] void glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);
		[entry("glGetTexParameterfv")] void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
		[entry("glGetTexParameteriv")] void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
		[entry("glHint")] void glHint (GLenum target, GLenum mode);
		[entry("glIndexMask")] void glIndexMask (GLuint mask);
		[entry("glIndexPointer")] void glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
		[entry("glIndexd")] void glIndexd (GLdouble c);
		[entry("glIndexdv")] void glIndexdv (const GLdouble *c);
		[entry("glIndexf")] void glIndexf (GLfloat c);
		[entry("glIndexfv")] void glIndexfv (const GLfloat *c);
		[entry("glIndexi")] void glIndexi (GLint c);
		[entry("glIndexiv")] void glIndexiv (const GLint *c);
		[entry("glIndexs")] void glIndexs (GLshort c);
		[entry("glIndexsv")] void glIndexsv (const GLshort *c);
		[entry("glIndexub")] void glIndexub (GLubyte c);
		[entry("glIndexubv")] void glIndexubv (const GLubyte *c);
		[entry("glInitNames")] void glInitNames (void);
		[entry("glInterleavedArrays")] void glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);
		[entry("glIsEnabled")] GLboolean glIsEnabled (GLenum cap);
		[entry("glIsList")] GLboolean glIsList (GLuint list);
		[entry("glIsTexture")] GLboolean glIsTexture (GLuint texture);
		[entry("glLightModelf")] void glLightModelf (GLenum pname, GLfloat param);
		[entry("glLightModelfv")] void glLightModelfv (GLenum pname, const GLfloat *params);
		[entry("glLightModeli")] void glLightModeli (GLenum pname, GLint param);
		[entry("glLightModeliv")] void glLightModeliv (GLenum pname, const GLint *params);
		[entry("glLightf")] void glLightf (GLenum light, GLenum pname, GLfloat param);
		[entry("glLightfv")] void glLightfv (GLenum light, GLenum pname, const GLfloat *params);
		[entry("glLighti")] void glLighti (GLenum light, GLenum pname, GLint param);
		[entry("glLightiv")] void glLightiv (GLenum light, GLenum pname, const GLint *params);
		[entry("glLineStipple")] void glLineStipple (GLint factor, GLushort pattern);
		[entry("glLineWidth")] void glLineWidth (GLfloat width);
		[entry("glListBase")] void glListBase (GLuint base);
		[entry("glLoadIdentity")] void glLoadIdentity (void);
		[entry("glLoadMatrixd")] void glLoadMatrixd (const GLdouble *m);
		[entry("glLoadMatrixf")] void glLoadMatrixf (const GLfloat *m);
		[entry("glLoadName")] void glLoadName (GLuint name);
		[entry("glLogicOp")] void glLogicOp (GLenum opcode);
		[entry("glMap1d")] void glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
		[entry("glMap1f")] void glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
		[entry("glMap2d")] void glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
		[entry("glMap2f")] void glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
		[entry("glMapGrid1d")] void glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
		[entry("glMapGrid1f")] void glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
		[entry("glMapGrid2d")] void glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
		[entry("glMapGrid2f")] void glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
		[entry("glMaterialf")] void glMaterialf (GLenum face, GLenum pname, GLfloat param);
		[entry("glMaterialfv")] void glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);
		[entry("glMateriali")] void glMateriali (GLenum face, GLenum pname, GLint param);
		[entry("glMaterialiv")] void glMaterialiv (GLenum face, GLenum pname, const GLint *params);
		[entry("glMatrixMode")] void glMatrixMode (GLenum mode);
		[entry("glMultMatrixd")] void glMultMatrixd (const GLdouble *m);
		[entry("glMultMatrixf")] void glMultMatrixf (const GLfloat *m);
		[entry("glNewList")] void glNewList (GLuint list, GLenum mode);
		[entry("glNormal3b")] void glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
		[entry("glNormal3bv")] void glNormal3bv (const GLbyte *v);
		[entry("glNormal3d")] void glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
		[entry("glNormal3dv")] void glNormal3dv (const GLdouble *v);
		[entry("glNormal3f")] void glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
		[entry("glNormal3fv")] void glNormal3fv (const GLfloat *v);
		[entry("glNormal3i")] void glNormal3i (GLint nx, GLint ny, GLint nz);
		[entry("glNormal3iv")] void glNormal3iv (const GLint *v);
		[entry("glNormal3s")] void glNormal3s (GLshort nx, GLshort ny, GLshort nz);
		[entry("glNormal3sv")] void glNormal3sv (const GLshort *v);
		[entry("glNormalPointer")] void glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
		[entry("glOrtho")] void glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
		[entry("glPassThrough")] void glPassThrough (GLfloat token);
		[entry("glPixelMapfv")] void glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat *values);
		[entry("glPixelMapuiv")] void glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint *values);
		[entry("glPixelMapusv")] void glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort *values);
		[entry("glPixelStoref")] void glPixelStoref (GLenum pname, GLfloat param);
		[entry("glPixelStorei")] void glPixelStorei (GLenum pname, GLint param);
		[entry("glPixelTransferf")] void glPixelTransferf (GLenum pname, GLfloat param);
		[entry("glPixelTransferi")] void glPixelTransferi (GLenum pname, GLint param);
		[entry("glPixelZoom")] void glPixelZoom (GLfloat xfactor, GLfloat yfactor);
		[entry("glPointSize")] void glPointSize (GLfloat size);
		[entry("glPolygonMode")] void glPolygonMode (GLenum face, GLenum mode);
		[entry("glPolygonOffset")] void glPolygonOffset (GLfloat factor, GLfloat units);
		[entry("glPolygonStipple")] void glPolygonStipple (const GLubyte *mask);
		[entry("glPopAttrib")] void glPopAttrib (void);
		[entry("glPopClientAttrib")] void glPopClientAttrib (void);
		[entry("glPopMatrix")] void glPopMatrix (void);
		[entry("glPopName")] void glPopName (void);
		[entry("glPrioritizeTextures")] void glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);
		[entry("glPushAttrib")] void glPushAttrib (GLbitfield mask);
		[entry("glPushClientAttrib")] void glPushClientAttrib (GLbitfield mask);
		[entry("glPushMatrix")] void glPushMatrix (void);
		[entry("glPushName")] void glPushName (GLuint name);
		[entry("glRasterPos2d")] void glRasterPos2d (GLdouble x, GLdouble y);
		[entry("glRasterPos2dv")] void glRasterPos2dv (const GLdouble *v);
		[entry("glRasterPos2f")] void glRasterPos2f (GLfloat x, GLfloat y);
		[entry("glRasterPos2fv")] void glRasterPos2fv (const GLfloat *v);
		[entry("glRasterPos2i")] void glRasterPos2i (GLint x, GLint y);
		[entry("glRasterPos2iv")] void glRasterPos2iv (const GLint *v);
		[entry("glRasterPos2s")] void glRasterPos2s (GLshort x, GLshort y);
		[entry("glRasterPos2sv")] void glRasterPos2sv (const GLshort *v);
		[entry("glRasterPos3d")] void glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
		[entry("glRasterPos3dv")] void glRasterPos3dv (const GLdouble *v);
		[entry("glRasterPos3f")] void glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
		[entry("glRasterPos3fv")] void glRasterPos3fv (const GLfloat *v);
		[entry("glRasterPos3i")] void glRasterPos3i (GLint x, GLint y, GLint z);
		[entry("glRasterPos3iv")] void glRasterPos3iv (const GLint *v);
		[entry("glRasterPos3s")] void glRasterPos3s (GLshort x, GLshort y, GLshort z);
		[entry("glRasterPos3sv")] void glRasterPos3sv (const GLshort *v);
		[entry("glRasterPos4d")] void glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
		[entry("glRasterPos4dv")] void glRasterPos4dv (const GLdouble *v);
		[entry("glRasterPos4f")] void glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
		[entry("glRasterPos4fv")] void glRasterPos4fv (const GLfloat *v);
		[entry("glRasterPos4i")] void glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
		[entry("glRasterPos4iv")] void glRasterPos4iv (const GLint *v);
		[entry("glRasterPos4s")] void glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
		[entry("glRasterPos4sv")] void glRasterPos4sv (const GLshort *v);
		[entry("glReadBuffer")] void glReadBuffer (GLenum mode);
		[entry("glReadPixels")] void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
		[entry("glRectd")] void glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
		[entry("glRectdv")] void glRectdv (const GLdouble *v1, const GLdouble *v2);
		[entry("glRectf")] void glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
		[entry("glRectfv")] void glRectfv (const GLfloat *v1, const GLfloat *v2);
		[entry("glRecti")] void glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
		[entry("glRectiv")] void glRectiv (const GLint *v1, const GLint *v2);
		[entry("glRects")] void glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
		[entry("glRectsv")] void glRectsv (const GLshort *v1, const GLshort *v2);
		[entry("glRenderMode")] GLint glRenderMode (GLenum mode);
		[entry("glRotated")] void glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
		[entry("glRotatef")] void glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
		[entry("glScaled")] void glScaled (GLdouble x, GLdouble y, GLdouble z);
		[entry("glScalef")] void glScalef (GLfloat x, GLfloat y, GLfloat z);
		[entry("glScissor")] void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
		[entry("glSelectBuffer")] void glSelectBuffer (GLsizei size, GLuint *buffer);
		[entry("glShadeModel")] void glShadeModel (GLenum mode);
		[entry("glStencilFunc")] void glStencilFunc (GLenum func, GLint ref, GLuint mask);
		[entry("glStencilMask")] void glStencilMask (GLuint mask);
		[entry("glStencilOp")] void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
		[entry("glTexCoord1d")] void glTexCoord1d (GLdouble s);
		[entry("glTexCoord1dv")] void glTexCoord1dv (const GLdouble *v);
		[entry("glTexCoord1f")] void glTexCoord1f (GLfloat s);
		[entry("glTexCoord1fv")] void glTexCoord1fv (const GLfloat *v);
		[entry("glTexCoord1i")] void glTexCoord1i (GLint s);
		[entry("glTexCoord1iv")] void glTexCoord1iv (const GLint *v);
		[entry("glTexCoord1s")] void glTexCoord1s (GLshort s);
		[entry("glTexCoord1sv")] void glTexCoord1sv (const GLshort *v);
		[entry("glTexCoord2d")] void glTexCoord2d (GLdouble s, GLdouble t);
		[entry("glTexCoord2dv")] void glTexCoord2dv (const GLdouble *v);
		[entry("glTexCoord2f")] void glTexCoord2f (GLfloat s, GLfloat t);
		[entry("glTexCoord2fv")] void glTexCoord2fv (const GLfloat *v);
		[entry("glTexCoord2i")] void glTexCoord2i (GLint s, GLint t);
		[entry("glTexCoord2iv")] void glTexCoord2iv (const GLint *v);
		[entry("glTexCoord2s")] void glTexCoord2s (GLshort s, GLshort t);
		[entry("glTexCoord2sv")] void glTexCoord2sv (const GLshort *v);
		[entry("glTexCoord3d")] void glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
		[entry("glTexCoord3dv")] void glTexCoord3dv (const GLdouble *v);
		[entry("glTexCoord3f")] void glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
		[entry("glTexCoord3fv")] void glTexCoord3fv (const GLfloat *v);
		[entry("glTexCoord3i")] void glTexCoord3i (GLint s, GLint t, GLint r);
		[entry("glTexCoord3iv")] void glTexCoord3iv (const GLint *v);
		[entry("glTexCoord3s")] void glTexCoord3s (GLshort s, GLshort t, GLshort r);
		[entry("glTexCoord3sv")] void glTexCoord3sv (const GLshort *v);
		[entry("glTexCoord4d")] void glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
		[entry("glTexCoord4dv")] void glTexCoord4dv (const GLdouble *v);
		[entry("glTexCoord4f")] void glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
		[entry("glTexCoord4fv")] void glTexCoord4fv (const GLfloat *v);
		[entry("glTexCoord4i")] void glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
		[entry("glTexCoord4iv")] void glTexCoord4iv (const GLint *v);
		[entry("glTexCoord4s")] void glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
		[entry("glTexCoord4sv")] void glTexCoord4sv (const GLshort *v);
		[entry("glTexCoordPointer")] void glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
		[entry("glTexEnvf")] void glTexEnvf (GLenum target, GLenum pname, GLfloat param);
		[entry("glTexEnvfv")] void glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);
		[entry("glTexEnvi")] void glTexEnvi (GLenum target, GLenum pname, GLint param);
		[entry("glTexEnviv")] void glTexEnviv (GLenum target, GLenum pname, const GLint *params);
		[entry("glTexGend")] void glTexGend (GLenum coord, GLenum pname, GLdouble param);
		[entry("glTexGendv")] void glTexGendv (GLenum coord, GLenum pname, const GLdouble *params);
		[entry("glTexGenf")] void glTexGenf (GLenum coord, GLenum pname, GLfloat param);
		[entry("glTexGenfv")] void glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params);
		[entry("glTexGeni")] void glTexGeni (GLenum coord, GLenum pname, GLint param);
		[entry("glTexGeniv")] void glTexGeniv (GLenum coord, GLenum pname, const GLint *params);
		[entry("glTexImage1D")] void glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
		[entry("glTexImage2D")] void glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
		[entry("glTexParameterf")] void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
		[entry("glTexParameterfv")] void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
		[entry("glTexParameteri")] void glTexParameteri (GLenum target, GLenum pname, GLint param);
		[entry("glTexParameteriv")] void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
		[entry("glTexSubImage1D")] void glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
		[entry("glTexSubImage2D")] void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
		[entry("glTranslated")] void glTranslated (GLdouble x, GLdouble y, GLdouble z);
		[entry("glTranslatef")] void glTranslatef (GLfloat x, GLfloat y, GLfloat z);
		[entry("glVertex2d")] void glVertex2d (GLdouble x, GLdouble y);
		[entry("glVertex2dv")] void glVertex2dv (const GLdouble *v);
		[entry("glVertex2f")] void glVertex2f (GLfloat x, GLfloat y);
		[entry("glVertex2fv")] void glVertex2fv (const GLfloat *v);
		[entry("glVertex2i")] void glVertex2i (GLint x, GLint y);
		[entry("glVertex2iv")] void glVertex2iv (const GLint *v);
		[entry("glVertex2s")] void glVertex2s (GLshort x, GLshort y);
		[entry("glVertex2sv")] void glVertex2sv (const GLshort *v);
		[entry("glVertex3d")] void glVertex3d (GLdouble x, GLdouble y, GLdouble z);
		[entry("glVertex3dv")] void glVertex3dv (const GLdouble *v);
		[entry("glVertex3f")] void glVertex3f (GLfloat x, GLfloat y, GLfloat z);
		[entry("glVertex3fv")] void glVertex3fv (const GLfloat *v);
		[entry("glVertex3i")] void glVertex3i (GLint x, GLint y, GLint z);
		[entry("glVertex3iv")] void glVertex3iv (const GLint *v);
		[entry("glVertex3s")] void glVertex3s (GLshort x, GLshort y, GLshort z);
		[entry("glVertex3sv")] void glVertex3sv (const GLshort *v);
		[entry("glVertex4d")] void glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
		[entry("glVertex4dv")] void glVertex4dv (const GLdouble *v);
		[entry("glVertex4f")] void glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
		[entry("glVertex4fv")] void glVertex4fv (const GLfloat *v);
		[entry("glVertex4i")] void glVertex4i (GLint x, GLint y, GLint z, GLint w);
		[entry("glVertex4iv")] void glVertex4iv (const GLint *v);
		[entry("glVertex4s")] void glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
		[entry("glVertex4sv")] void glVertex4sv (const GLshort *v);
		[entry("glVertexPointer")] void glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
		[entry("glViewport")] void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);

		// OpenGL wgl prototypes
		// regular expressions used:
		// #define\:b+\(\:i\)\:b+\(0x\:h\) -replacewith- const long \1 = \2;
		// WINGDIAPI\:b+\(\:i\)\:b+WINAPI\:b+\(\:i\) -replacewith- [entry("\2")] \1 \2

		#define HGLRC long
		#define UINT long
		#define VOID void
		#define HDC long
		#define PROC long
		#define CONST const
		#define DWORD long
		#define FLOAT float
		#define BOOL long

		[entry("wglCopyContext")] BOOL wglCopyContext(HGLRC, HGLRC, UINT);
		[entry("wglCreateContext")] HGLRC wglCreateContext(HDC);
		[entry("wglCreateLayerContext")] HGLRC wglCreateLayerContext(HDC, int);
		[entry("wglDeleteContext")] BOOL wglDeleteContext(HGLRC);
		[entry("wglGetCurrentContext")] HGLRC wglGetCurrentContext(VOID);
		[entry("wglGetCurrentDC")] HDC wglGetCurrentDC(VOID);
		[entry("wglGetProcAddress")] PROC wglGetProcAddress(LPCSTR);
		[entry("wglMakeCurrent")] BOOL wglMakeCurrent(HDC, HGLRC);
		[entry("wglShareLists")] BOOL wglShareLists(HGLRC, HGLRC);
		[entry("wglUseFontBitmapsA")] BOOL wglUseFontBitmapsA(HDC, DWORD, DWORD, DWORD);
		[entry("wglUseFontBitmapsW")] BOOL wglUseFontBitmapsW(HDC, DWORD, DWORD, DWORD);

		const long WGL_FONT_LINES = 0;
		const long WGL_FONT_POLYGONS = 1;
		[entry("wglUseFontOutlinesA")] BOOL wglUseFontOutlinesA(HDC, DWORD, DWORD, DWORD, FLOAT,
												   FLOAT, int, GLYPHMETRICSFLOAT *);
		[entry("wglUseFontOutlinesW")] BOOL wglUseFontOutlinesW(HDC, DWORD, DWORD, DWORD, FLOAT,
												   FLOAT, int, GLYPHMETRICSFLOAT *);

		/* LAYERPLANEDESCRIPTOR flags */
		const long LPD_DOUBLEBUFFER = 0x00000001;
		const long LPD_STEREO = 0x00000002;
		const long LPD_SUPPORT_GDI = 0x00000010;
		const long LPD_SUPPORT_OPENGL = 0x00000020;
		const long LPD_SHARE_DEPTH = 0x00000040;
		const long LPD_SHARE_STENCIL = 0x00000080;
		const long LPD_SHARE_ACCUM = 0x00000100;
		const long LPD_SWAP_EXCHANGE = 0x00000200;
		const long LPD_SWAP_COPY = 0x00000400;
		const long LPD_TRANSPARENT = 0x00001000;

		const long LPD_TYPE_RGBA = 0;
		const long LPD_TYPE_COLORINDEX = 1;

		/* wglSwapLayerBuffers flags */
		const long WGL_SWAP_MAIN_PLANE = 0x00000001;
		const long WGL_SWAP_OVERLAY1 = 0x00000002;
		const long WGL_SWAP_OVERLAY2 = 0x00000004;
		const long WGL_SWAP_OVERLAY3 = 0x00000008;
		const long WGL_SWAP_OVERLAY4 = 0x00000010;
		const long WGL_SWAP_OVERLAY5 = 0x00000020;
		const long WGL_SWAP_OVERLAY6 = 0x00000040;
		const long WGL_SWAP_OVERLAY7 = 0x00000080;
		const long WGL_SWAP_OVERLAY8 = 0x00000100;
		const long WGL_SWAP_OVERLAY9 = 0x00000200;
		const long WGL_SWAP_OVERLAY10 = 0x00000400;
		const long WGL_SWAP_OVERLAY11 = 0x00000800;
		const long WGL_SWAP_OVERLAY12 = 0x00001000;
		const long WGL_SWAP_OVERLAY13 = 0x00002000;
		const long WGL_SWAP_OVERLAY14 = 0x00004000;
		const long WGL_SWAP_OVERLAY15 = 0x00008000;
		const long WGL_SWAP_UNDERLAY1 = 0x00010000;
		const long WGL_SWAP_UNDERLAY2 = 0x00020000;
		const long WGL_SWAP_UNDERLAY3 = 0x00040000;
		const long WGL_SWAP_UNDERLAY4 = 0x00080000;
		const long WGL_SWAP_UNDERLAY5 = 0x00100000;
		const long WGL_SWAP_UNDERLAY6 = 0x00200000;
		const long WGL_SWAP_UNDERLAY7 = 0x00400000;
		const long WGL_SWAP_UNDERLAY8 = 0x00800000;
		const long WGL_SWAP_UNDERLAY9 = 0x01000000;
		const long WGL_SWAP_UNDERLAY10 = 0x02000000;
		const long WGL_SWAP_UNDERLAY11 = 0x04000000;
		const long WGL_SWAP_UNDERLAY12 = 0x08000000;
		const long WGL_SWAP_UNDERLAY13 = 0x10000000;
		const long WGL_SWAP_UNDERLAY14 = 0x20000000;
		const long WGL_SWAP_UNDERLAY15 = 0x40000000;

		[entry("wglDescribeLayerPlane")] BOOL wglDescribeLayerPlane(HDC, int, int, UINT,
													 LAYERPLANEDESCRIPTOR *);
		[entry("wglSetLayerPaletteEntries")] int wglSetLayerPaletteEntries(HDC, int, int, int,
														 CONST COLORREF *);
		[entry("wglGetLayerPaletteEntries")] int wglGetLayerPaletteEntries(HDC, int, int, int,
														 COLORREF *);
		[entry("wglRealizeLayerPalette")] BOOL wglRealizeLayerPalette(HDC, int, BOOL);
		[entry("wglSwapLayerBuffers")] BOOL wglSwapLayerBuffers(HDC, UINT);

		#define WGL_SWAPMULTIPLE_MAX 16

		[entry("wglSwapMultipleBuffers")] DWORD wglSwapMultipleBuffers(UINT, CONST WGLSWAP *);


	}
	[dllname("GLU32.dll")]
	module GLU32
	{
		[entry("gluErrorString")] long gluErrorString (
			GLenum   errCode);

		[entry("gluErrorUnicodeStringEXT")] long gluErrorUnicodeStringEXT (
			GLenum   errCode);

		[entry("gluGetString")] long gluGetString (
			GLenum   name);

		[entry("gluOrtho2D")] void gluOrtho2D (
			GLdouble left,
			GLdouble right,
			GLdouble bottom,
			GLdouble top);

		[entry("gluPerspective")] void gluPerspective (
			GLdouble fovy,
			GLdouble aspect,
			GLdouble zNear,
			GLdouble zFar);

		[entry("gluPickMatrix")] void gluPickMatrix (
			GLdouble x,
			GLdouble y,
			GLdouble width,
			GLdouble height,
			GLint    viewport[4]);

		[entry("gluLookAt")] void gluLookAt (
			GLdouble eyex,
			GLdouble eyey,
			GLdouble eyez,
			GLdouble centerx,
			GLdouble centery,
			GLdouble centerz,
			GLdouble upx,
			GLdouble upy,
			GLdouble upz);

		[entry("gluProject")] int gluProject (
			GLdouble        objx,
			GLdouble        objy,
			GLdouble        objz,
			const GLdouble  modelMatrix[16],
			const GLdouble  projMatrix[16],
			const GLint     viewport[4],
			GLdouble        *winx,
			GLdouble        *winy,
			GLdouble        *winz);

		[entry("gluUnProject")] int gluUnProject (
			GLdouble       winx,
			GLdouble       winy,
			GLdouble       winz,
			const GLdouble modelMatrix[16],
			const GLdouble projMatrix[16],
			const GLint    viewport[4],
			GLdouble       *objx,
			GLdouble       *objy,
			GLdouble       *objz);


		[entry("gluScaleImage")] int gluScaleImage (
			GLenum      format,
			GLint       widthin,
			GLint       heightin,
			GLenum      typein,
			const void  *datain,
			GLint       widthout,
			GLint       heightout,
			GLenum      typeout,
			void        *dataout);


		[entry("gluBuild1DMipmaps")] int gluBuild1DMipmaps (
			GLenum      target,
			GLint       components,
			GLint       width,
			GLenum      format,
			GLenum      type,
			const void  *data);

		[entry("gluBuild2DMipmaps")] int gluBuild2DMipmaps (
			GLenum      target,
			GLint       components,
			GLint       width,
			GLint       height,
			GLenum      format,
			GLenum      type,
			const void  *data);

		[entry("gluBuild2DMipmaps")] long gluNewQuadric (void);
		[entry("gluDeleteQuadric")] void gluDeleteQuadric (
			long state);

		[entry("gluQuadricNormals")] void gluQuadricNormals (
			long quadObject,
			GLenum              normals);

		[entry("gluQuadricTexture")] void gluQuadricTexture (
			long quadObject,
			GLboolean           textureCoords);

		[entry("gluQuadricOrientation")] void gluQuadricOrientation (
			long quadObject,
			GLenum              orientation);

		[entry("gluQuadricDrawStyle")] void gluQuadricDrawStyle (
			long quadObject,
			GLenum              drawStyle);

		[entry("gluCylinder")] void gluCylinder (
			long qobj,
			GLdouble            baseRadius,
			GLdouble            topRadius,
			GLdouble            height,
			GLint               slices,
			GLint               stacks);

		[entry("gluDisk")] void gluDisk (
			long qobj,
			GLdouble            innerRadius,
			GLdouble            outerRadius,
			GLint               slices,
			GLint               loops);

		[entry("gluPartialDisk")] void gluPartialDisk (
			long qobj,
			GLdouble            innerRadius,
			GLdouble            outerRadius,
			GLint               slices,
			GLint               loops,
			GLdouble            startAngle,
			GLdouble            sweepAngle);

		[entry("gluSphere")] void gluSphere (
			long qobj,
			GLdouble            radius,
			GLint               slices,
			GLint               stacks);

		[entry("gluQuadricCallback")] void gluQuadricCallback (
			long qobj,
			GLenum              which,
			long                fn);

		[entry("gluNewTess")] long  gluNewTess(
			void );

		[entry("gluDeleteTess")] void gluDeleteTess(
			long tess );

		[entry("gluTessBeginPolygon")] void gluTessBeginPolygon(
			long tess,
			void                *polygon_data );

		[entry("gluTessBeginContour")] void gluTessBeginContour(
			long tess );

		[entry("gluTessVertex")] void gluTessVertex(
			long tess,
			GLdouble            coords[3],
			void                *data );

		[entry("gluTessEndContour")] void gluTessEndContour(
			long tess );

		[entry("gluTessEndPolygon")] void gluTessEndPolygon(
			long tess );

		[entry("gluTessProperty")] void gluTessProperty(
			long tess,
			GLenum              which,
			GLdouble            value );

		[entry("gluTessNormal")] void gluTessNormal(
			long tess,
			GLdouble            x,
			GLdouble            y,
			GLdouble            z );

		[entry("gluTessCallback")] void gluTessCallback(
			long tess,
			GLenum              which,
			long fn);

		[entry("gluGetTessProperty")] void gluGetTessProperty(
			long tess,
			GLenum              which,
			GLdouble            *value );

		[entry("gluNewNurbsRenderer")] long gluNewNurbsRenderer (void);

		[entry("gluDeleteNurbsRenderer")] void gluDeleteNurbsRenderer (
			long nobj);

		[entry("gluBeginSurface")] void gluBeginSurface (
			long nobj);

		[entry("gluBeginCurve")] void gluBeginCurve (
			long nobj);

		[entry("gluEndCurve")] void gluEndCurve (
			long nobj);

		[entry("gluEndSurface")] void gluEndSurface (
			long nobj);

		[entry("gluBeginTrim")] void gluBeginTrim (
			long nobj);

		[entry("gluEndTrim")] void gluEndTrim (
			long nobj);

		[entry("gluPwlCurve")] void gluPwlCurve (
			long nobj,
			GLint               count,
			GLfloat             *array,
			GLint               stride,
			GLenum              type);

		[entry("gluNurbsCurve")] void gluNurbsCurve (
			long nobj,
			GLint               nknots,
			GLfloat             *knot,
			GLint               stride,
			GLfloat             *ctlarray,
			GLint               order,
			GLenum              type);

		[entry("gluNurbsSurface")] void gluNurbsSurface(
			long nobj,
			GLint               sknot_count,
			float               *sknot,
			GLint               tknot_count,
			GLfloat             *tknot,
			GLint               s_stride,
			GLint               t_stride,
			GLfloat             *ctlarray,
			GLint               sorder,
			GLint               torder,
			GLenum              type);

		[entry("gluLoadSamplingMatrices")] void gluLoadSamplingMatrices (
			long nobj,
			const GLfloat       modelMatrix[16],
			const GLfloat       projMatrix[16],
			const GLint         viewport[4] );

		[entry("gluNurbsProperty")] void gluNurbsProperty (
			long nobj,
			GLenum              property,
			GLfloat             value );

		[entry("gluGetNurbsProperty")] void gluGetNurbsProperty (
			long nobj,
			GLenum              property,
			GLfloat             *value );

		[entry("gluNurbsCallback")] void gluNurbsCallback (
			long nobj,
			GLenum              which,
			long                fn );

		/****           Generic constants               ****/

		/* Version */
		const long GLU_VERSION_1_1 = 1;
		const long GLU_VERSION_1_2 = 1;

		/* Errors: (return value 0 = no error) */
		const long GLU_INVALID_ENUM = 100900;
		const long GLU_INVALID_VALUE = 100901;
		const long GLU_OUT_OF_MEMORY = 100902;
		const long GLU_INCOMPATIBLE_GL_VERSION = 100903;

		/* StringName */
		const long GLU_VERSION = 100800;
		const long GLU_EXTENSIONS = 100801;

		/* Boolean */
		const long GLU_TRUE =               1;
		const long GLU_FALSE =              0;


		/****           Quadric constants               ****/

		/* QuadricNormal */
		const long GLU_SMOOTH = 100000;
		const long GLU_FLAT = 100001;
		const long GLU_NONE = 100002;

		/* QuadricDrawStyle */
		const long GLU_POINT = 100010;
		const long GLU_LINE = 100011;
		const long GLU_FILL = 100012;
		const long GLU_SILHOUETTE = 100013;

		/* QuadricOrientation */
		const long GLU_OUTSIDE = 100020;
		const long GLU_INSIDE = 100021;

		/* Callback types: */
		/*      GLU_ERROR               100103 */


		/****           Tesselation constants           ****/

		const long GLU_TESS_MAX_COORD = 1.0e150;

		/* TessProperty */
		const long GLU_TESS_WINDING_RULE = 100140;
		const long GLU_TESS_BOUNDARY_ONLY = 100141;
		const long GLU_TESS_TOLERANCE = 100142;

		/* TessWinding */
		const long GLU_TESS_WINDING_ODD = 100130;
		const long GLU_TESS_WINDING_NONZERO = 100131;
		const long GLU_TESS_WINDING_POSITIVE = 100132;
		const long GLU_TESS_WINDING_NEGATIVE = 100133;
		const long GLU_TESS_WINDING_ABS_GEQ_TWO = 100134;

		/* TessCallback */
		const long GLU_TESS_BEGIN = 100100;  /* void (CALLBACK*)(GLenum    type)  */
		const long GLU_TESS_VERTEX = 100101;  /* void (CALLBACK*)(void      *data) */
		const long GLU_TESS_END = 100102;  /* void (CALLBACK*)(void)            */
		const long GLU_TESS_ERROR = 100103;  /* void (CALLBACK*)(GLenum    errno) */
		const long GLU_TESS_EDGE_FLAG = 100104;  /* void (CALLBACK*)(GLboolean boundaryEdge)  */
		const long GLU_TESS_COMBINE = 100105;  /* void (CALLBACK*)(GLdouble  coords[3],
																	void      *data[4],
																	GLfloat   weight[4],
																	void      **dataOut)     */
		const long GLU_TESS_BEGIN_DATA = 100106;  /* void (CALLBACK*)(GLenum    type,
																	void      *polygon_data) */
		const long GLU_TESS_VERTEX_DATA = 100107;  /* void (CALLBACK*)(void      *data,
																	void      *polygon_data) */
		const long GLU_TESS_END_DATA = 100108;  /* void (CALLBACK*)(void      *polygon_data) */
		const long GLU_TESS_ERROR_DATA = 100109;  /* void (CALLBACK*)(GLenum    errno,
																	void      *polygon_data) */
		const long GLU_TESS_EDGE_FLAG_DATA = 100110;  /* void (CALLBACK*)(GLboolean boundaryEdge,
																	void      *polygon_data) */
		const long GLU_TESS_COMBINE_DATA = 100111;  /* void (CALLBACK*)(GLdouble  coords[3],
																	void      *data[4],
																	GLfloat   weight[4],
																	void      **dataOut,
																	void      *polygon_data) */

		/* TessError */
		const long GLU_TESS_ERROR1 = 100151;
		const long GLU_TESS_ERROR2 = 100152;
		const long GLU_TESS_ERROR3 = 100153;
		const long GLU_TESS_ERROR4 = 100154;
		const long GLU_TESS_ERROR5 = 100155;
		const long GLU_TESS_ERROR6 = 100156;
		const long GLU_TESS_ERROR7 = 100157;
		const long GLU_TESS_ERROR8 = 100158;

		#define GLU_TESS_MISSING_BEGIN_POLYGON  GLU_TESS_ERROR1
		#define GLU_TESS_MISSING_BEGIN_CONTOUR  GLU_TESS_ERROR2
		#define GLU_TESS_MISSING_END_POLYGON    GLU_TESS_ERROR3
		#define GLU_TESS_MISSING_END_CONTOUR    GLU_TESS_ERROR4
		#define GLU_TESS_COORD_TOO_LARGE        GLU_TESS_ERROR5
		#define GLU_TESS_NEED_COMBINE_CALLBACK  GLU_TESS_ERROR6

		/****           NURBS constants                 ****/

		/* NurbsProperty */
		const long GLU_AUTO_LOAD_MATRIX = 100200;
		const long GLU_CULLING = 100201;
		const long GLU_SAMPLING_TOLERANCE = 100203;
		const long GLU_DISPLAY_MODE = 100204;
		const long GLU_PARAMETRIC_TOLERANCE = 100202;
		const long GLU_SAMPLING_METHOD = 100205;
		const long GLU_U_STEP = 100206;
		const long GLU_V_STEP = 100207;

		/* NurbsSampling */
		const long GLU_PATH_LENGTH = 100215;
		const long GLU_PARAMETRIC_ERROR = 100216;
		const long GLU_DOMAIN_DISTANCE = 100217;


		/* NurbsTrim */
		const long GLU_MAP1_TRIM_2 = 100210;
		const long GLU_MAP1_TRIM_3 = 100211;

		/* NurbsDisplay */
		/*      GLU_FILL                100012 */
		const long GLU_OUTLINE_POLYGON = 100240;
		const long GLU_OUTLINE_PATCH = 100241;

		/* NurbsCallback */
		/*      GLU_ERROR               100103 */

		/* NurbsErrors */
		const long GLU_NURBS_ERROR1 = 100251;
		const long GLU_NURBS_ERROR2 = 100252;
		const long GLU_NURBS_ERROR3 = 100253;
		const long GLU_NURBS_ERROR4 = 100254;
		const long GLU_NURBS_ERROR5 = 100255;
		const long GLU_NURBS_ERROR6 = 100256;
		const long GLU_NURBS_ERROR7 = 100257;
		const long GLU_NURBS_ERROR8 = 100258;
		const long GLU_NURBS_ERROR9 = 100259;
		const long GLU_NURBS_ERROR10 = 100260;
		const long GLU_NURBS_ERROR11 = 100261;
		const long GLU_NURBS_ERROR12 = 100262;
		const long GLU_NURBS_ERROR13 = 100263;
		const long GLU_NURBS_ERROR14 = 100264;
		const long GLU_NURBS_ERROR15 = 100265;
		const long GLU_NURBS_ERROR16 = 100266;
		const long GLU_NURBS_ERROR17 = 100267;
		const long GLU_NURBS_ERROR18 = 100268;
		const long GLU_NURBS_ERROR19 = 100269;
		const long GLU_NURBS_ERROR20 = 100270;
		const long GLU_NURBS_ERROR21 = 100271;
		const long GLU_NURBS_ERROR22 = 100272;
		const long GLU_NURBS_ERROR23 = 100273;
		const long GLU_NURBS_ERROR24 = 100274;
		const long GLU_NURBS_ERROR25 = 100275;
		const long GLU_NURBS_ERROR26 = 100276;
		const long GLU_NURBS_ERROR27 = 100277;
		const long GLU_NURBS_ERROR28 = 100278;
		const long GLU_NURBS_ERROR29 = 100279;
		const long GLU_NURBS_ERROR30 = 100280;
		const long GLU_NURBS_ERROR31 = 100281;
		const long GLU_NURBS_ERROR32 = 100282;
		const long GLU_NURBS_ERROR33 = 100283;
		const long GLU_NURBS_ERROR34 = 100284;
		const long GLU_NURBS_ERROR35 = 100285;
		const long GLU_NURBS_ERROR36 = 100286;
		const long GLU_NURBS_ERROR37 = 100287;

		/****           Backwards compatibility for old tesselator           ****/

		[entry("gluBeginPolygon")] void gluBeginPolygon( long tess );

		[entry("gluNextContour")] void gluNextContour(  long tess,
										 GLenum        type );

		[entry("gluEndPolygon")] void gluEndPolygon(   long tess );

		/* Contours types -- obsolete! */
		const long GLU_CW = 100120;
		const long GLU_CCW = 100121;
		const long GLU_INTERIOR = 100122;
		const long GLU_EXTERIOR = 100123;
		const long GLU_UNKNOWN = 100124;
	}
	/*
	[dllname("vbglext.dll")]
	module vbglext
	{
		[entry("extWireSphere")] void extWireSphere(double  rad);
		[entry("extSolidSphere")] void extSolidSphere(double  rad);
		[entry("extWireCube")] void extWireCube(double  sizes);
		[entry("extSolidCube")] void extSolidCube(double  sizes);
		[entry("extWireBox")] void extWireBox(double  a, double  b, double  c);
		[entry("extSolidBox")] void extSolidBox(double  a, double  b, double  c);
		[entry("extWireTorus")] void extWireTorus(double  a, double  b);
		[entry("extSolidTorus")] void extSolidTorus(double  a, double  b);
		[entry("extWireCylinder")] void extWireCylinder(double  a, double  b);
		[entry("extSolidCylinder")] void extSolidCylinder(double  a, double  b);
		[entry("extWireCone")] void extWireCone(double  a, double  b);
		[entry("extSolidCone")] void extSolidCone(double  a, double  b);

	}
	*/
	[dllname("kernel32")]
	module Kernel32
	{
		[entry("RtlMoveMemory")] void CopyMemory(void  *  Destination, void  *  Source, long  length);

	}
	[dllname("gdi32")]
	module GDI32
	{
		const long PFD_DRAW_TO_WINDOW  = 0x4;
		const long PFD_SUPPORT_OPENGL  = 0x20;
		const long PFD_DOUBLEBUFFER  = 0x1;
		const long PFD_TYPE_RGBA  = 0;
		const long PFD_MAIN_PLANE  = 0;
		const long PFD_DRAW_TO_BITMAP  = 0x8;

		[entry("CreateFontA")] long CreateFontA(int nHeight,
                              int nWidth,
                              int nEscapement,
                              int nOrientation,
                              int fnWeight,
                              DWORD fdwItalid,
                              DWORD fdwUnderline,
                              DWORD fdwStrikeOut,
                              DWORD fdwCharSet,
                              DWORD fdwOutputPrecision,
                              DWORD fdwClipPrecision,
                              DWORD fdwQuality,
                              DWORD fdwPitchAndFamily,
                              LPCTSTR lpszFace);
		[entry("CreateICA")] long CreateIC(LPSTR  lpDriverName, LPSTR  lpDeviceName, LPSTR  lpOutput, void *  lpInitData);
		[entry("DeleteDC")] long DeleteDC(long  hdc);
		[entry("GetDeviceCaps")] long GetDeviceCaps(long  hdc, long  nIndex);
		[entry("SelectObject")] long SelectObject(long  hdc, long  hObject);
		[entry("SetPixelFormat")] long SetPixelFormat(long  hdc, long  n, PIXELFORMATDESCRIPTOR  *  pcPixelFormatDescriptor);
		[entry("ChoosePixelFormat")] long ChoosePixelFormat(long  hdc, PIXELFORMATDESCRIPTOR  *  pPixelFormatDescriptor);
		[entry("SwapBuffers")] long SwapBuffers(long  hdc);

	}
	[dllname("user32")]
	module User32
	{
		[entry("EnumDisplaySettingsA")] short EnumDisplaySettingsA(LPSTR  lpszDeviceName, long  iModeNum, void *  lpDevMode);

	}


	module OpenGL_Extensions
	{
		const long GL_GLEXT_VERSION = 29;


		const long GL_UNSIGNED_BYTE_3_3_2 = 0x8032;
		const long GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
		const long GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
		const long GL_UNSIGNED_INT_8_8_8_8 = 0x8035;
		const long GL_UNSIGNED_INT_10_10_10_2 = 0x8036;
		const long GL_RESCALE_NORMAL = 0x803A;
		const long GL_TEXTURE_BINDING_3D = 0x806A;
		const long GL_PACK_SKIP_IMAGES = 0x806B;
		const long GL_PACK_IMAGE_HEIGHT = 0x806C;
		const long GL_UNPACK_SKIP_IMAGES = 0x806D;
		const long GL_UNPACK_IMAGE_HEIGHT = 0x806E;
		const long GL_TEXTURE_3D = 0x806F;
		const long GL_PROXY_TEXTURE_3D = 0x8070;
		const long GL_TEXTURE_DEPTH = 0x8071;
		const long GL_TEXTURE_WRAP_R = 0x8072;
		const long GL_MAX_3D_TEXTURE_SIZE = 0x8073;
		const long GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362;
		const long GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
		const long GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364;
		const long GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
		const long GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
		const long GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367;
		const long GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;
		const long GL_BGR = 0x80E0;
		const long GL_BGRA = 0x80E1;
		const long GL_MAX_ELEMENTS_VERTICES = 0x80E8;
		const long GL_MAX_ELEMENTS_INDICES = 0x80E9;
		const long GL_CLAMP_TO_EDGE = 0x812F;
		const long GL_TEXTURE_MIN_LOD = 0x813A;
		const long GL_TEXTURE_MAX_LOD = 0x813B;
		const long GL_TEXTURE_BASE_LEVEL = 0x813C;
		const long GL_TEXTURE_MAX_LEVEL = 0x813D;
		const long GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8;
		const long GL_SINGLE_COLOR = 0x81F9;
		const long GL_SEPARATE_SPECULAR_COLOR = 0x81FA;
		const long GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;
		const long GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13;
		const long GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;
		const long GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23;
		const long GL_ALIASED_POINT_SIZE_RANGE = 0x846D;
		const long GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;



		const long GL_CONSTANT_COLOR = 0x8001;
		const long GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
		const long GL_CONSTANT_ALPHA = 0x8003;
		const long GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
		const long GL_BLEND_COLOR = 0x8005;
		const long GL_FUNC_ADD = 0x8006;
		const long GL_MIN = 0x8007;
		const long GL_MAX = 0x8008;
		const long GL_BLEND_EQUATION = 0x8009;
		const long GL_FUNC_SUBTRACT = 0x800A;
		const long GL_FUNC_REVERSE_SUBTRACT = 0x800B;
		const long GL_CONVOLUTION_1D = 0x8010;
		const long GL_CONVOLUTION_2D = 0x8011;
		const long GL_SEPARABLE_2D = 0x8012;
		const long GL_CONVOLUTION_BORDER_MODE = 0x8013;
		const long GL_CONVOLUTION_FILTER_SCALE = 0x8014;
		const long GL_CONVOLUTION_FILTER_BIAS = 0x8015;
		const long GL_REDUCE = 0x8016;
		const long GL_CONVOLUTION_FORMAT = 0x8017;
		const long GL_CONVOLUTION_WIDTH = 0x8018;
		const long GL_CONVOLUTION_HEIGHT = 0x8019;
		const long GL_MAX_CONVOLUTION_WIDTH = 0x801A;
		const long GL_MAX_CONVOLUTION_HEIGHT = 0x801B;
		const long GL_POST_CONVOLUTION_RED_SCALE = 0x801C;
		const long GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D;
		const long GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E;
		const long GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F;
		const long GL_POST_CONVOLUTION_RED_BIAS = 0x8020;
		const long GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021;
		const long GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022;
		const long GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023;
		const long GL_HISTOGRAM = 0x8024;
		const long GL_PROXY_HISTOGRAM = 0x8025;
		const long GL_HISTOGRAM_WIDTH = 0x8026;
		const long GL_HISTOGRAM_FORMAT = 0x8027;
		const long GL_HISTOGRAM_RED_SIZE = 0x8028;
		const long GL_HISTOGRAM_GREEN_SIZE = 0x8029;
		const long GL_HISTOGRAM_BLUE_SIZE = 0x802A;
		const long GL_HISTOGRAM_ALPHA_SIZE = 0x802B;
		const long GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C;
		const long GL_HISTOGRAM_SINK = 0x802D;
		const long GL_MINMAX = 0x802E;
		const long GL_MINMAX_FORMAT = 0x802F;
		const long GL_MINMAX_SINK = 0x8030;
		const long GL_TABLE_TOO_LARGE = 0x8031;
		const long GL_COLOR_MATRIX = 0x80B1;
		const long GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2;
		const long GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3;
		const long GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4;
		const long GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5;
		const long GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6;
		const long GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7;
		const long GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8;
		const long GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9;
		const long GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA;
		const long GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB;
		const long GL_COLOR_TABLE = 0x80D0;
		const long GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1;
		const long GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2;
		const long GL_PROXY_COLOR_TABLE = 0x80D3;
		const long GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4;
		const long GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5;
		const long GL_COLOR_TABLE_SCALE = 0x80D6;
		const long GL_COLOR_TABLE_BIAS = 0x80D7;
		const long GL_COLOR_TABLE_FORMAT = 0x80D8;
		const long GL_COLOR_TABLE_WIDTH = 0x80D9;
		const long GL_COLOR_TABLE_RED_SIZE = 0x80DA;
		const long GL_COLOR_TABLE_GREEN_SIZE = 0x80DB;
		const long GL_COLOR_TABLE_BLUE_SIZE = 0x80DC;
		const long GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD;
		const long GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE;
		const long GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF;
		const long GL_CONSTANT_BORDER = 0x8151;
		const long GL_REPLICATE_BORDER = 0x8153;
		const long GL_CONVOLUTION_BORDER_COLOR = 0x8154;



		const long GL_TEXTURE0 = 0x84C0;
		const long GL_TEXTURE1 = 0x84C1;
		const long GL_TEXTURE2 = 0x84C2;
		const long GL_TEXTURE3 = 0x84C3;
		const long GL_TEXTURE4 = 0x84C4;
		const long GL_TEXTURE5 = 0x84C5;
		const long GL_TEXTURE6 = 0x84C6;
		const long GL_TEXTURE7 = 0x84C7;
		const long GL_TEXTURE8 = 0x84C8;
		const long GL_TEXTURE9 = 0x84C9;
		const long GL_TEXTURE10 = 0x84CA;
		const long GL_TEXTURE11 = 0x84CB;
		const long GL_TEXTURE12 = 0x84CC;
		const long GL_TEXTURE13 = 0x84CD;
		const long GL_TEXTURE14 = 0x84CE;
		const long GL_TEXTURE15 = 0x84CF;
		const long GL_TEXTURE16 = 0x84D0;
		const long GL_TEXTURE17 = 0x84D1;
		const long GL_TEXTURE18 = 0x84D2;
		const long GL_TEXTURE19 = 0x84D3;
		const long GL_TEXTURE20 = 0x84D4;
		const long GL_TEXTURE21 = 0x84D5;
		const long GL_TEXTURE22 = 0x84D6;
		const long GL_TEXTURE23 = 0x84D7;
		const long GL_TEXTURE24 = 0x84D8;
		const long GL_TEXTURE25 = 0x84D9;
		const long GL_TEXTURE26 = 0x84DA;
		const long GL_TEXTURE27 = 0x84DB;
		const long GL_TEXTURE28 = 0x84DC;
		const long GL_TEXTURE29 = 0x84DD;
		const long GL_TEXTURE30 = 0x84DE;
		const long GL_TEXTURE31 = 0x84DF;
		const long GL_ACTIVE_TEXTURE = 0x84E0;
		const long GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;
		const long GL_MAX_TEXTURE_UNITS = 0x84E2;
		const long GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3;
		const long GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4;
		const long GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5;
		const long GL_TRANSPOSE_COLOR_MATRIX = 0x84E6;
		const long GL_MULTISAMPLE = 0x809D;
		const long GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
		const long GL_SAMPLE_ALPHA_TO_ONE = 0x809F;
		const long GL_SAMPLE_COVERAGE = 0x80A0;
		const long GL_SAMPLE_BUFFERS = 0x80A8;
		const long GL_SAMPLES = 0x80A9;
		const long GL_SAMPLE_COVERAGE_VALUE = 0x80AA;
		const long GL_SAMPLE_COVERAGE_INVERT = 0x80AB;
		const long GL_MULTISAMPLE_BIT = 0x20000000;
		const long GL_NORMAL_MAP = 0x8511;
		const long GL_REFLECTION_MAP = 0x8512;
		const long GL_TEXTURE_CUBE_MAP = 0x8513;
		const long GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
		const long GL_PROXY_TEXTURE_CUBE_MAP = 0x851B;
		const long GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
		const long GL_COMPRESSED_ALPHA = 0x84E9;
		const long GL_COMPRESSED_LUMINANCE = 0x84EA;
		const long GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB;
		const long GL_COMPRESSED_INTENSITY = 0x84EC;
		const long GL_COMPRESSED_RGB = 0x84ED;
		const long GL_COMPRESSED_RGBA = 0x84EE;
		const long GL_TEXTURE_COMPRESSION_HINT = 0x84EF;
		const long GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;
		const long GL_TEXTURE_COMPRESSED = 0x86A1;
		const long GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
		const long GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;
		const long GL_CLAMP_TO_BORDER = 0x812D;
		const long GL_COMBINE = 0x8570;
		const long GL_COMBINE_RGB = 0x8571;
		const long GL_COMBINE_ALPHA = 0x8572;
		const long GL_SOURCE0_RGB = 0x8580;
		const long GL_SOURCE1_RGB = 0x8581;
		const long GL_SOURCE2_RGB = 0x8582;
		const long GL_SOURCE0_ALPHA = 0x8588;
		const long GL_SOURCE1_ALPHA = 0x8589;
		const long GL_SOURCE2_ALPHA = 0x858A;
		const long GL_OPERAND0_RGB = 0x8590;
		const long GL_OPERAND1_RGB = 0x8591;
		const long GL_OPERAND2_RGB = 0x8592;
		const long GL_OPERAND0_ALPHA = 0x8598;
		const long GL_OPERAND1_ALPHA = 0x8599;
		const long GL_OPERAND2_ALPHA = 0x859A;
		const long GL_RGB_SCALE = 0x8573;
		const long GL_ADD_SIGNED = 0x8574;
		const long GL_INTERPOLATE = 0x8575;
		const long GL_SUBTRACT = 0x84E7;
		const long GL_CONSTANT = 0x8576;
		const long GL_PRIMARY_COLOR = 0x8577;
		const long GL_PREVIOUS = 0x8578;
		const long GL_DOT3_RGB = 0x86AE;
		const long GL_DOT3_RGBA = 0x86AF;



		const long GL_BLEND_DST_RGB = 0x80C8;
		const long GL_BLEND_SRC_RGB = 0x80C9;
		const long GL_BLEND_DST_ALPHA = 0x80CA;
		const long GL_BLEND_SRC_ALPHA = 0x80CB;
		const long GL_POINT_SIZE_MIN = 0x8126;
		const long GL_POINT_SIZE_MAX = 0x8127;
		const long GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;
		const long GL_POINT_DISTANCE_ATTENUATION = 0x8129;
		const long GL_GENERATE_MIPMAP = 0x8191;
		const long GL_GENERATE_MIPMAP_HINT = 0x8192;
		const long GL_DEPTH_COMPONENT16 = 0x81A5;
		const long GL_DEPTH_COMPONENT24 = 0x81A6;
		const long GL_DEPTH_COMPONENT32 = 0x81A7;
		const long GL_MIRRORED_REPEAT = 0x8370;
		const long GL_FOG_COORDINATE_SOURCE = 0x8450;
		const long GL_FOG_COORDINATE = 0x8451;
		const long GL_FRAGMENT_DEPTH = 0x8452;
		const long GL_CURRENT_FOG_COORDINATE = 0x8453;
		const long GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454;
		const long GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455;
		const long GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456;
		const long GL_FOG_COORDINATE_ARRAY = 0x8457;
		const long GL_COLOR_SUM = 0x8458;
		const long GL_CURRENT_SECONDARY_COLOR = 0x8459;
		const long GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A;
		const long GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B;
		const long GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;
		const long GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D;
		const long GL_SECONDARY_COLOR_ARRAY = 0x845E;
		const long GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;
		const long GL_TEXTURE_FILTER_CONTROL = 0x8500;
		const long GL_TEXTURE_LOD_BIAS = 0x8501;
		const long GL_INCR_WRAP = 0x8507;
		const long GL_DECR_WRAP = 0x8508;
		const long GL_TEXTURE_DEPTH_SIZE = 0x884A;
		const long GL_DEPTH_TEXTURE_MODE = 0x884B;
		const long GL_TEXTURE_COMPARE_MODE = 0x884C;
		const long GL_TEXTURE_COMPARE_FUNC = 0x884D;
		const long GL_COMPARE_R_TO_TEXTURE = 0x884E;



		const long GL_BUFFER_SIZE = 0x8764;
		const long GL_BUFFER_USAGE = 0x8765;
		const long GL_QUERY_COUNTER_BITS = 0x8864;
		const long GL_CURRENT_QUERY = 0x8865;
		const long GL_QUERY_RESULT = 0x8866;
		const long GL_QUERY_RESULT_AVAILABLE = 0x8867;
		const long GL_ARRAY_BUFFER = 0x8892;
		const long GL_ELEMENT_ARRAY_BUFFER = 0x8893;
		const long GL_ARRAY_BUFFER_BINDING = 0x8894;
		const long GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
		const long GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;
		const long GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;
		const long GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;
		const long GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899;
		const long GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;
		const long GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B;
		const long GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C;
		const long GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D;
		const long GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E;
		const long GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
		const long GL_READ_ONLY = 0x88B8;
		const long GL_WRITE_ONLY = 0x88B9;
		const long GL_READ_WRITE = 0x88BA;
		const long GL_BUFFER_ACCESS = 0x88BB;
		const long GL_BUFFER_MAPPED = 0x88BC;
		const long GL_BUFFER_MAP_POINTER = 0x88BD;
		const long GL_STREAM_DRAW = 0x88E0;
		const long GL_STREAM_READ = 0x88E1;
		const long GL_STREAM_COPY = 0x88E2;
		const long GL_STATIC_DRAW = 0x88E4;
		const long GL_STATIC_READ = 0x88E5;
		const long GL_STATIC_COPY = 0x88E6;
		const long GL_DYNAMIC_DRAW = 0x88E8;
		const long GL_DYNAMIC_READ = 0x88E9;
		const long GL_DYNAMIC_COPY = 0x88EA;
		const long GL_SAMPLES_PASSED = 0x8914;
		const long GL_FOG_COORD_SRC = 0x8450;
		const long GL_FOG_COORD = 0x8451;
		const long GL_CURRENT_FOG_COORD = 0x8453;
		const long GL_FOG_COORD_ARRAY_TYPE = 0x8454;
		const long GL_FOG_COORD_ARRAY_STRIDE = 0x8455;
		const long GL_FOG_COORD_ARRAY_POINTER = 0x8456;
		const long GL_FOG_COORD_ARRAY = 0x8457;
		const long GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D;
		const long GL_SRC0_RGB = 0x8580;
		const long GL_SRC1_RGB = 0x8581;
		const long GL_SRC2_RGB = 0x8582;
		const long GL_SRC0_ALPHA = 0x8588;
		const long GL_SRC1_ALPHA = 0x8589;
		const long GL_SRC2_ALPHA = 0x858A;



		const long GL_BLEND_EQUATION_RGB = 0x8009;
		const long GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
		const long GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
		const long GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
		const long GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
		const long GL_CURRENT_VERTEX_ATTRIB = 0x8626;
		const long GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642;
		const long GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643;
		const long GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
		const long GL_STENCIL_BACK_FUNC = 0x8800;
		const long GL_STENCIL_BACK_FAIL = 0x8801;
		const long GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
		const long GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
		const long GL_MAX_DRAW_BUFFERS = 0x8824;
		const long GL_DRAW_BUFFER0 = 0x8825;
		const long GL_DRAW_BUFFER1 = 0x8826;
		const long GL_DRAW_BUFFER2 = 0x8827;
		const long GL_DRAW_BUFFER3 = 0x8828;
		const long GL_DRAW_BUFFER4 = 0x8829;
		const long GL_DRAW_BUFFER5 = 0x882A;
		const long GL_DRAW_BUFFER6 = 0x882B;
		const long GL_DRAW_BUFFER7 = 0x882C;
		const long GL_DRAW_BUFFER8 = 0x882D;
		const long GL_DRAW_BUFFER9 = 0x882E;
		const long GL_DRAW_BUFFER10 = 0x882F;
		const long GL_DRAW_BUFFER11 = 0x8830;
		const long GL_DRAW_BUFFER12 = 0x8831;
		const long GL_DRAW_BUFFER13 = 0x8832;
		const long GL_DRAW_BUFFER14 = 0x8833;
		const long GL_DRAW_BUFFER15 = 0x8834;
		const long GL_BLEND_EQUATION_ALPHA = 0x883D;
		const long GL_POINT_SPRITE = 0x8861;
		const long GL_COORD_REPLACE = 0x8862;
		const long GL_MAX_VERTEX_ATTRIBS = 0x8869;
		const long GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
		const long GL_MAX_TEXTURE_COORDS = 0x8871;
		const long GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
		const long GL_FRAGMENT_SHADER = 0x8B30;
		const long GL_VERTEX_SHADER = 0x8B31;
		const long GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
		const long GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
		const long GL_MAX_VARYING_FLOATS = 0x8B4B;
		const long GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
		const long GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
		const long GL_SHADER_TYPE = 0x8B4F;
		const long GL_FLOAT_VEC2 = 0x8B50;
		const long GL_FLOAT_VEC3 = 0x8B51;
		const long GL_FLOAT_VEC4 = 0x8B52;
		const long GL_INT_VEC2 = 0x8B53;
		const long GL_INT_VEC3 = 0x8B54;
		const long GL_INT_VEC4 = 0x8B55;
		const long GL_BOOL = 0x8B56;
		const long GL_BOOL_VEC2 = 0x8B57;
		const long GL_BOOL_VEC3 = 0x8B58;
		const long GL_BOOL_VEC4 = 0x8B59;
		const long GL_FLOAT_MAT2 = 0x8B5A;
		const long GL_FLOAT_MAT3 = 0x8B5B;
		const long GL_FLOAT_MAT4 = 0x8B5C;
		const long GL_SAMPLER_1D = 0x8B5D;
		const long GL_SAMPLER_2D = 0x8B5E;
		const long GL_SAMPLER_3D = 0x8B5F;
		const long GL_SAMPLER_CUBE = 0x8B60;
		const long GL_SAMPLER_1D_SHADOW = 0x8B61;
		const long GL_SAMPLER_2D_SHADOW = 0x8B62;
		const long GL_DELETE_STATUS = 0x8B80;
		const long GL_COMPILE_STATUS = 0x8B81;
		const long GL_LINK_STATUS = 0x8B82;
		const long GL_VALIDATE_STATUS = 0x8B83;
		const long GL_INFO_LOG_LENGTH = 0x8B84;
		const long GL_ATTACHED_SHADERS = 0x8B85;
		const long GL_ACTIVE_UNIFORMS = 0x8B86;
		const long GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
		const long GL_SHADER_SOURCE_LENGTH = 0x8B88;
		const long GL_ACTIVE_ATTRIBUTES = 0x8B89;
		const long GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
		const long GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
		const long GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
		const long GL_CURRENT_PROGRAM = 0x8B8D;
		const long GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
		const long GL_LOWER_LEFT = 0x8CA1;
		const long GL_UPPER_LEFT = 0x8CA2;
		const long GL_STENCIL_BACK_REF = 0x8CA3;
		const long GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;
		const long GL_STENCIL_BACK_WRITEMASK = 0x8CA5;



		const long GL_TEXTURE0_ARB = 0x84C0;
		const long GL_TEXTURE1_ARB = 0x84C1;
		const long GL_TEXTURE2_ARB = 0x84C2;
		const long GL_TEXTURE3_ARB = 0x84C3;
		const long GL_TEXTURE4_ARB = 0x84C4;
		const long GL_TEXTURE5_ARB = 0x84C5;
		const long GL_TEXTURE6_ARB = 0x84C6;
		const long GL_TEXTURE7_ARB = 0x84C7;
		const long GL_TEXTURE8_ARB = 0x84C8;
		const long GL_TEXTURE9_ARB = 0x84C9;
		const long GL_TEXTURE10_ARB = 0x84CA;
		const long GL_TEXTURE11_ARB = 0x84CB;
		const long GL_TEXTURE12_ARB = 0x84CC;
		const long GL_TEXTURE13_ARB = 0x84CD;
		const long GL_TEXTURE14_ARB = 0x84CE;
		const long GL_TEXTURE15_ARB = 0x84CF;
		const long GL_TEXTURE16_ARB = 0x84D0;
		const long GL_TEXTURE17_ARB = 0x84D1;
		const long GL_TEXTURE18_ARB = 0x84D2;
		const long GL_TEXTURE19_ARB = 0x84D3;
		const long GL_TEXTURE20_ARB = 0x84D4;
		const long GL_TEXTURE21_ARB = 0x84D5;
		const long GL_TEXTURE22_ARB = 0x84D6;
		const long GL_TEXTURE23_ARB = 0x84D7;
		const long GL_TEXTURE24_ARB = 0x84D8;
		const long GL_TEXTURE25_ARB = 0x84D9;
		const long GL_TEXTURE26_ARB = 0x84DA;
		const long GL_TEXTURE27_ARB = 0x84DB;
		const long GL_TEXTURE28_ARB = 0x84DC;
		const long GL_TEXTURE29_ARB = 0x84DD;
		const long GL_TEXTURE30_ARB = 0x84DE;
		const long GL_TEXTURE31_ARB = 0x84DF;
		const long GL_ACTIVE_TEXTURE_ARB = 0x84E0;
		const long GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1;
		const long GL_MAX_TEXTURE_UNITS_ARB = 0x84E2;



		const long GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3;
		const long GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4;
		const long GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5;
		const long GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6;



		const long GL_MULTISAMPLE_ARB = 0x809D;
		const long GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E;
		const long GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F;
		const long GL_SAMPLE_COVERAGE_ARB = 0x80A0;
		const long GL_SAMPLE_BUFFERS_ARB = 0x80A8;
		const long GL_SAMPLES_ARB = 0x80A9;
		const long GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA;
		const long GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB;
		const long GL_MULTISAMPLE_BIT_ARB = 0x20000000;






		const long GL_NORMAL_MAP_ARB = 0x8511;
		const long GL_REFLECTION_MAP_ARB = 0x8512;
		const long GL_TEXTURE_CUBE_MAP_ARB = 0x8513;
		const long GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A;
		const long GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B;
		const long GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C;



		const long GL_COMPRESSED_ALPHA_ARB = 0x84E9;
		const long GL_COMPRESSED_LUMINANCE_ARB = 0x84EA;
		const long GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB;
		const long GL_COMPRESSED_INTENSITY_ARB = 0x84EC;
		const long GL_COMPRESSED_RGB_ARB = 0x84ED;
		const long GL_COMPRESSED_RGBA_ARB = 0x84EE;
		const long GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF;
		const long GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0;
		const long GL_TEXTURE_COMPRESSED_ARB = 0x86A1;
		const long GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2;
		const long GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3;



		const long GL_CLAMP_TO_BORDER_ARB = 0x812D;



		const long GL_POINT_SIZE_MIN_ARB = 0x8126;
		const long GL_POINT_SIZE_MAX_ARB = 0x8127;
		const long GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128;
		const long GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129;



		const long GL_MAX_VERTEX_UNITS_ARB = 0x86A4;
		const long GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5;
		const long GL_WEIGHT_SUM_UNITY_ARB = 0x86A6;
		const long GL_VERTEX_BLEND_ARB = 0x86A7;
		const long GL_CURRENT_WEIGHT_ARB = 0x86A8;
		const long GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9;
		const long GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA;
		const long GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB;
		const long GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC;
		const long GL_WEIGHT_ARRAY_ARB = 0x86AD;
		const long GL_MODELVIEW0_ARB = 0x1700;
		const long GL_MODELVIEW1_ARB = 0x850A;
		const long GL_MODELVIEW2_ARB = 0x8722;
		const long GL_MODELVIEW3_ARB = 0x8723;
		const long GL_MODELVIEW4_ARB = 0x8724;
		const long GL_MODELVIEW5_ARB = 0x8725;
		const long GL_MODELVIEW6_ARB = 0x8726;
		const long GL_MODELVIEW7_ARB = 0x8727;
		const long GL_MODELVIEW8_ARB = 0x8728;
		const long GL_MODELVIEW9_ARB = 0x8729;
		const long GL_MODELVIEW10_ARB = 0x872A;
		const long GL_MODELVIEW11_ARB = 0x872B;
		const long GL_MODELVIEW12_ARB = 0x872C;
		const long GL_MODELVIEW13_ARB = 0x872D;
		const long GL_MODELVIEW14_ARB = 0x872E;
		const long GL_MODELVIEW15_ARB = 0x872F;
		const long GL_MODELVIEW16_ARB = 0x8730;
		const long GL_MODELVIEW17_ARB = 0x8731;
		const long GL_MODELVIEW18_ARB = 0x8732;
		const long GL_MODELVIEW19_ARB = 0x8733;
		const long GL_MODELVIEW20_ARB = 0x8734;
		const long GL_MODELVIEW21_ARB = 0x8735;
		const long GL_MODELVIEW22_ARB = 0x8736;
		const long GL_MODELVIEW23_ARB = 0x8737;
		const long GL_MODELVIEW24_ARB = 0x8738;
		const long GL_MODELVIEW25_ARB = 0x8739;
		const long GL_MODELVIEW26_ARB = 0x873A;
		const long GL_MODELVIEW27_ARB = 0x873B;
		const long GL_MODELVIEW28_ARB = 0x873C;
		const long GL_MODELVIEW29_ARB = 0x873D;
		const long GL_MODELVIEW30_ARB = 0x873E;
		const long GL_MODELVIEW31_ARB = 0x873F;



		const long GL_MATRIX_PALETTE_ARB = 0x8840;
		const long GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841;
		const long GL_MAX_PALETTE_MATRICES_ARB = 0x8842;
		const long GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843;
		const long GL_MATRIX_INDEX_ARRAY_ARB = 0x8844;
		const long GL_CURRENT_MATRIX_INDEX_ARB = 0x8845;
		const long GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846;
		const long GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847;
		const long GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848;
		const long GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849;



		const long GL_COMBINE_ARB = 0x8570;
		const long GL_COMBINE_RGB_ARB = 0x8571;
		const long GL_COMBINE_ALPHA_ARB = 0x8572;
		const long GL_SOURCE0_RGB_ARB = 0x8580;
		const long GL_SOURCE1_RGB_ARB = 0x8581;
		const long GL_SOURCE2_RGB_ARB = 0x8582;
		const long GL_SOURCE0_ALPHA_ARB = 0x8588;
		const long GL_SOURCE1_ALPHA_ARB = 0x8589;
		const long GL_SOURCE2_ALPHA_ARB = 0x858A;
		const long GL_OPERAND0_RGB_ARB = 0x8590;
		const long GL_OPERAND1_RGB_ARB = 0x8591;
		const long GL_OPERAND2_RGB_ARB = 0x8592;
		const long GL_OPERAND0_ALPHA_ARB = 0x8598;
		const long GL_OPERAND1_ALPHA_ARB = 0x8599;
		const long GL_OPERAND2_ALPHA_ARB = 0x859A;
		const long GL_RGB_SCALE_ARB = 0x8573;
		const long GL_ADD_SIGNED_ARB = 0x8574;
		const long GL_INTERPOLATE_ARB = 0x8575;
		const long GL_SUBTRACT_ARB = 0x84E7;
		const long GL_CONSTANT_ARB = 0x8576;
		const long GL_PRIMARY_COLOR_ARB = 0x8577;
		const long GL_PREVIOUS_ARB = 0x8578;






		const long GL_DOT3_RGB_ARB = 0x86AE;
		const long GL_DOT3_RGBA_ARB = 0x86AF;



		const long GL_MIRRORED_REPEAT_ARB = 0x8370;



		const long GL_DEPTH_COMPONENT16_ARB = 0x81A5;
		const long GL_DEPTH_COMPONENT24_ARB = 0x81A6;
		const long GL_DEPTH_COMPONENT32_ARB = 0x81A7;
		const long GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A;
		const long GL_DEPTH_TEXTURE_MODE_ARB = 0x884B;



		const long GL_TEXTURE_COMPARE_MODE_ARB = 0x884C;
		const long GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D;
		const long GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E;



		const long GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF;






		const long GL_COLOR_SUM_ARB = 0x8458;
		const long GL_VERTEX_PROGRAM_ARB = 0x8620;
		const long GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622;
		const long GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623;
		const long GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624;
		const long GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625;
		const long GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626;
		const long GL_PROGRAM_LENGTH_ARB = 0x8627;
		const long GL_PROGRAM_STRING_ARB = 0x8628;
		const long GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E;
		const long GL_MAX_PROGRAM_MATRICES_ARB = 0x862F;
		const long GL_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640;
		const long GL_CURRENT_MATRIX_ARB = 0x8641;
		const long GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642;
		const long GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643;
		const long GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645;
		const long GL_PROGRAM_ERROR_POSITION_ARB = 0x864B;
		const long GL_PROGRAM_BINDING_ARB = 0x8677;
		const long GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869;
		const long GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A;
		const long GL_PROGRAM_ERROR_STRING_ARB = 0x8874;
		const long GL_PROGRAM_FORMAT_ASCII_ARB = 0x8875;
		const long GL_PROGRAM_FORMAT_ARB = 0x8876;
		const long GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0;
		const long GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1;
		const long GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2;
		const long GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3;
		const long GL_PROGRAM_TEMPORARIES_ARB = 0x88A4;
		const long GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5;
		const long GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6;
		const long GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7;
		const long GL_PROGRAM_PARAMETERS_ARB = 0x88A8;
		const long GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9;
		const long GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA;
		const long GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB;
		const long GL_PROGRAM_ATTRIBS_ARB = 0x88AC;
		const long GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD;
		const long GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE;
		const long GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF;
		const long GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0;
		const long GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1;
		const long GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2;
		const long GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3;
		const long GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4;
		const long GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5;
		const long GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6;
		const long GL_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7;
		const long GL_MATRIX0_ARB = 0x88C0;
		const long GL_MATRIX1_ARB = 0x88C1;
		const long GL_MATRIX2_ARB = 0x88C2;
		const long GL_MATRIX3_ARB = 0x88C3;
		const long GL_MATRIX4_ARB = 0x88C4;
		const long GL_MATRIX5_ARB = 0x88C5;
		const long GL_MATRIX6_ARB = 0x88C6;
		const long GL_MATRIX7_ARB = 0x88C7;
		const long GL_MATRIX8_ARB = 0x88C8;
		const long GL_MATRIX9_ARB = 0x88C9;
		const long GL_MATRIX10_ARB = 0x88CA;
		const long GL_MATRIX11_ARB = 0x88CB;
		const long GL_MATRIX12_ARB = 0x88CC;
		const long GL_MATRIX13_ARB = 0x88CD;
		const long GL_MATRIX14_ARB = 0x88CE;
		const long GL_MATRIX15_ARB = 0x88CF;
		const long GL_MATRIX16_ARB = 0x88D0;
		const long GL_MATRIX17_ARB = 0x88D1;
		const long GL_MATRIX18_ARB = 0x88D2;
		const long GL_MATRIX19_ARB = 0x88D3;
		const long GL_MATRIX20_ARB = 0x88D4;
		const long GL_MATRIX21_ARB = 0x88D5;
		const long GL_MATRIX22_ARB = 0x88D6;
		const long GL_MATRIX23_ARB = 0x88D7;
		const long GL_MATRIX24_ARB = 0x88D8;
		const long GL_MATRIX25_ARB = 0x88D9;
		const long GL_MATRIX26_ARB = 0x88DA;
		const long GL_MATRIX27_ARB = 0x88DB;
		const long GL_MATRIX28_ARB = 0x88DC;
		const long GL_MATRIX29_ARB = 0x88DD;
		const long GL_MATRIX30_ARB = 0x88DE;
		const long GL_MATRIX31_ARB = 0x88DF;



		const long GL_FRAGMENT_PROGRAM_ARB = 0x8804;
		const long GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805;
		const long GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806;
		const long GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807;
		const long GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808;
		const long GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809;
		const long GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A;
		const long GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B;
		const long GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C;
		const long GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D;
		const long GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E;
		const long GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F;
		const long GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810;
		const long GL_MAX_TEXTURE_COORDS_ARB = 0x8871;
		const long GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872;



		const long GL_BUFFER_SIZE_ARB = 0x8764;
		const long GL_BUFFER_USAGE_ARB = 0x8765;
		const long GL_ARRAY_BUFFER_ARB = 0x8892;
		const long GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893;
		const long GL_ARRAY_BUFFER_BINDING_ARB = 0x8894;
		const long GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895;
		const long GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896;
		const long GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897;
		const long GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898;
		const long GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899;
		const long GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A;
		const long GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B;
		const long GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C;
		const long GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D;
		const long GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E;
		const long GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F;
		const long GL_READ_ONLY_ARB = 0x88B8;
		const long GL_WRITE_ONLY_ARB = 0x88B9;
		const long GL_READ_WRITE_ARB = 0x88BA;
		const long GL_BUFFER_ACCESS_ARB = 0x88BB;
		const long GL_BUFFER_MAPPED_ARB = 0x88BC;
		const long GL_BUFFER_MAP_POINTER_ARB = 0x88BD;
		const long GL_STREAM_DRAW_ARB = 0x88E0;
		const long GL_STREAM_READ_ARB = 0x88E1;
		const long GL_STREAM_COPY_ARB = 0x88E2;
		const long GL_STATIC_DRAW_ARB = 0x88E4;
		const long GL_STATIC_READ_ARB = 0x88E5;
		const long GL_STATIC_COPY_ARB = 0x88E6;
		const long GL_DYNAMIC_DRAW_ARB = 0x88E8;
		const long GL_DYNAMIC_READ_ARB = 0x88E9;
		const long GL_DYNAMIC_COPY_ARB = 0x88EA;



		const long GL_QUERY_COUNTER_BITS_ARB = 0x8864;
		const long GL_CURRENT_QUERY_ARB = 0x8865;
		const long GL_QUERY_RESULT_ARB = 0x8866;
		const long GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867;
		const long GL_SAMPLES_PASSED_ARB = 0x8914;



		const long GL_PROGRAM_OBJECT_ARB = 0x8B40;
		const long GL_SHADER_OBJECT_ARB = 0x8B48;
		const long GL_OBJECT_TYPE_ARB = 0x8B4E;
		const long GL_OBJECT_SUBTYPE_ARB = 0x8B4F;
		const long GL_FLOAT_VEC2_ARB = 0x8B50;
		const long GL_FLOAT_VEC3_ARB = 0x8B51;
		const long GL_FLOAT_VEC4_ARB = 0x8B52;
		const long GL_INT_VEC2_ARB = 0x8B53;
		const long GL_INT_VEC3_ARB = 0x8B54;
		const long GL_INT_VEC4_ARB = 0x8B55;
		const long GL_BOOL_ARB = 0x8B56;
		const long GL_BOOL_VEC2_ARB = 0x8B57;
		const long GL_BOOL_VEC3_ARB = 0x8B58;
		const long GL_BOOL_VEC4_ARB = 0x8B59;
		const long GL_FLOAT_MAT2_ARB = 0x8B5A;
		const long GL_FLOAT_MAT3_ARB = 0x8B5B;
		const long GL_FLOAT_MAT4_ARB = 0x8B5C;
		const long GL_SAMPLER_1D_ARB = 0x8B5D;
		const long GL_SAMPLER_2D_ARB = 0x8B5E;
		const long GL_SAMPLER_3D_ARB = 0x8B5F;
		const long GL_SAMPLER_CUBE_ARB = 0x8B60;
		const long GL_SAMPLER_1D_SHADOW_ARB = 0x8B61;
		const long GL_SAMPLER_2D_SHADOW_ARB = 0x8B62;
		const long GL_SAMPLER_2D_RECT_ARB = 0x8B63;
		const long GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64;
		const long GL_OBJECT_DELETE_STATUS_ARB = 0x8B80;
		const long GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81;
		const long GL_OBJECT_LINK_STATUS_ARB = 0x8B82;
		const long GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83;
		const long GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84;
		const long GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85;
		const long GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86;
		const long GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87;
		const long GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88;



		const long GL_VERTEX_SHADER_ARB = 0x8B31;
		const long GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A;
		const long GL_MAX_VARYING_FLOATS_ARB = 0x8B4B;
		const long GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C;
		const long GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D;
		const long GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89;
		const long GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A;



		const long GL_FRAGMENT_SHADER_ARB = 0x8B30;
		const long GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49;
		const long GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B;



		const long GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C;






		const long GL_POINT_SPRITE_ARB = 0x8861;
		const long GL_COORD_REPLACE_ARB = 0x8862;






		const long GL_MAX_DRAW_BUFFERS_ARB = 0x8824;
		const long GL_DRAW_BUFFER0_ARB = 0x8825;
		const long GL_DRAW_BUFFER1_ARB = 0x8826;
		const long GL_DRAW_BUFFER2_ARB = 0x8827;
		const long GL_DRAW_BUFFER3_ARB = 0x8828;
		const long GL_DRAW_BUFFER4_ARB = 0x8829;
		const long GL_DRAW_BUFFER5_ARB = 0x882A;
		const long GL_DRAW_BUFFER6_ARB = 0x882B;
		const long GL_DRAW_BUFFER7_ARB = 0x882C;
		const long GL_DRAW_BUFFER8_ARB = 0x882D;
		const long GL_DRAW_BUFFER9_ARB = 0x882E;
		const long GL_DRAW_BUFFER10_ARB = 0x882F;
		const long GL_DRAW_BUFFER11_ARB = 0x8830;
		const long GL_DRAW_BUFFER12_ARB = 0x8831;
		const long GL_DRAW_BUFFER13_ARB = 0x8832;
		const long GL_DRAW_BUFFER14_ARB = 0x8833;
		const long GL_DRAW_BUFFER15_ARB = 0x8834;



		const long GL_TEXTURE_RECTANGLE_ARB = 0x84F5;
		const long GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6;
		const long GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7;
		const long GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8;



		const long GL_RGBA_FLOAT_MODE_ARB = 0x8820;
		const long GL_CLAMP_VERTEX_COLOR_ARB = 0x891A;
		const long GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B;
		const long GL_CLAMP_READ_COLOR_ARB = 0x891C;
		const long GL_FIXED_ONLY_ARB = 0x891D;



		const long GL_HALF_FLOAT_ARB = 0x140B;



		const long GL_TEXTURE_RED_TYPE_ARB = 0x8C10;
		const long GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11;
		const long GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12;
		const long GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13;
		const long GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14;
		const long GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15;
		const long GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16;
		const long GL_UNSIGNED_NORMALIZED_ARB = 0x8C17;
		const long GL_RGBA32F_ARB = 0x8814;
		const long GL_RGB32F_ARB = 0x8815;
		const long GL_ALPHA32F_ARB = 0x8816;
		const long GL_INTENSITY32F_ARB = 0x8817;
		const long GL_LUMINANCE32F_ARB = 0x8818;
		const long GL_LUMINANCE_ALPHA32F_ARB = 0x8819;
		const long GL_RGBA16F_ARB = 0x881A;
		const long GL_RGB16F_ARB = 0x881B;
		const long GL_ALPHA16F_ARB = 0x881C;
		const long GL_INTENSITY16F_ARB = 0x881D;
		const long GL_LUMINANCE16F_ARB = 0x881E;
		const long GL_LUMINANCE_ALPHA16F_ARB = 0x881F;



		const long GL_PIXEL_PACK_BUFFER_ARB = 0x88EB;
		const long GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC;
		const long GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED;
		const long GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF;



		const long GL_ABGR_EXT = 0x8000;



		const long GL_CONSTANT_COLOR_EXT = 0x8001;
		const long GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002;
		const long GL_CONSTANT_ALPHA_EXT = 0x8003;
		const long GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004;
		const long GL_BLEND_COLOR_EXT = 0x8005;



		const long GL_POLYGON_OFFSET_EXT = 0x8037;
		const long GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038;
		const long GL_POLYGON_OFFSET_BIAS_EXT = 0x8039;



		const long GL_ALPHA4_EXT = 0x803B;
		const long GL_ALPHA8_EXT = 0x803C;
		const long GL_ALPHA12_EXT = 0x803D;
		const long GL_ALPHA16_EXT = 0x803E;
		const long GL_LUMINANCE4_EXT = 0x803F;
		const long GL_LUMINANCE8_EXT = 0x8040;
		const long GL_LUMINANCE12_EXT = 0x8041;
		const long GL_LUMINANCE16_EXT = 0x8042;
		const long GL_LUMINANCE4_ALPHA4_EXT = 0x8043;
		const long GL_LUMINANCE6_ALPHA2_EXT = 0x8044;
		const long GL_LUMINANCE8_ALPHA8_EXT = 0x8045;
		const long GL_LUMINANCE12_ALPHA4_EXT = 0x8046;
		const long GL_LUMINANCE12_ALPHA12_EXT = 0x8047;
		const long GL_LUMINANCE16_ALPHA16_EXT = 0x8048;
		const long GL_INTENSITY_EXT = 0x8049;
		const long GL_INTENSITY4_EXT = 0x804A;
		const long GL_INTENSITY8_EXT = 0x804B;
		const long GL_INTENSITY12_EXT = 0x804C;
		const long GL_INTENSITY16_EXT = 0x804D;
		const long GL_RGB2_EXT = 0x804E;
		const long GL_RGB4_EXT = 0x804F;
		const long GL_RGB5_EXT = 0x8050;
		const long GL_RGB8_EXT = 0x8051;
		const long GL_RGB10_EXT = 0x8052;
		const long GL_RGB12_EXT = 0x8053;
		const long GL_RGB16_EXT = 0x8054;
		const long GL_RGBA2_EXT = 0x8055;
		const long GL_RGBA4_EXT = 0x8056;
		const long GL_RGB5_A1_EXT = 0x8057;
		const long GL_RGBA8_EXT = 0x8058;
		const long GL_RGB10_A2_EXT = 0x8059;
		const long GL_RGBA12_EXT = 0x805A;
		const long GL_RGBA16_EXT = 0x805B;
		const long GL_TEXTURE_RED_SIZE_EXT = 0x805C;
		const long GL_TEXTURE_GREEN_SIZE_EXT = 0x805D;
		const long GL_TEXTURE_BLUE_SIZE_EXT = 0x805E;
		const long GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F;
		const long GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060;
		const long GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061;
		const long GL_REPLACE_EXT = 0x8062;
		const long GL_PROXY_TEXTURE_1D_EXT = 0x8063;
		const long GL_PROXY_TEXTURE_2D_EXT = 0x8064;
		const long GL_TEXTURE_TOO_LARGE_EXT = 0x8065;



		const long GL_PACK_SKIP_IMAGES_EXT = 0x806B;
		const long GL_PACK_IMAGE_HEIGHT_EXT = 0x806C;
		const long GL_UNPACK_SKIP_IMAGES_EXT = 0x806D;
		const long GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E;
		const long GL_TEXTURE_3D_EXT = 0x806F;
		const long GL_PROXY_TEXTURE_3D_EXT = 0x8070;
		const long GL_TEXTURE_DEPTH_EXT = 0x8071;
		const long GL_TEXTURE_WRAP_R_EXT = 0x8072;
		const long GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073;



		const long GL_FILTER4_SGIS = 0x8146;
		const long GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147;









		const long GL_HISTOGRAM_EXT = 0x8024;
		const long GL_PROXY_HISTOGRAM_EXT = 0x8025;
		const long GL_HISTOGRAM_WIDTH_EXT = 0x8026;
		const long GL_HISTOGRAM_FORMAT_EXT = 0x8027;
		const long GL_HISTOGRAM_RED_SIZE_EXT = 0x8028;
		const long GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029;
		const long GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A;
		const long GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B;
		const long GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C;
		const long GL_HISTOGRAM_SINK_EXT = 0x802D;
		const long GL_MINMAX_EXT = 0x802E;
		const long GL_MINMAX_FORMAT_EXT = 0x802F;
		const long GL_MINMAX_SINK_EXT = 0x8030;
		const long GL_TABLE_TOO_LARGE_EXT = 0x8031;



		const long GL_CONVOLUTION_1D_EXT = 0x8010;
		const long GL_CONVOLUTION_2D_EXT = 0x8011;
		const long GL_SEPARABLE_2D_EXT = 0x8012;
		const long GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013;
		const long GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014;
		const long GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015;
		const long GL_REDUCE_EXT = 0x8016;
		const long GL_CONVOLUTION_FORMAT_EXT = 0x8017;
		const long GL_CONVOLUTION_WIDTH_EXT = 0x8018;
		const long GL_CONVOLUTION_HEIGHT_EXT = 0x8019;
		const long GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A;
		const long GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B;
		const long GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C;
		const long GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D;
		const long GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E;
		const long GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F;
		const long GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020;
		const long GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021;
		const long GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022;
		const long GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023;



		const long GL_COLOR_MATRIX_SGI = 0x80B1;
		const long GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2;
		const long GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3;
		const long GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4;
		const long GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5;
		const long GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6;
		const long GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7;
		const long GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8;
		const long GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9;
		const long GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA;
		const long GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB;



		const long GL_COLOR_TABLE_SGI = 0x80D0;
		const long GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1;
		const long GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2;
		const long GL_PROXY_COLOR_TABLE_SGI = 0x80D3;
		const long GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4;
		const long GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5;
		const long GL_COLOR_TABLE_SCALE_SGI = 0x80D6;
		const long GL_COLOR_TABLE_BIAS_SGI = 0x80D7;
		const long GL_COLOR_TABLE_FORMAT_SGI = 0x80D8;
		const long GL_COLOR_TABLE_WIDTH_SGI = 0x80D9;
		const long GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA;
		const long GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB;
		const long GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC;
		const long GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD;
		const long GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE;
		const long GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF;



		const long GL_PIXEL_TEXTURE_SGIS = 0x8353;
		const long GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354;
		const long GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355;
		const long GL_PIXEL_GROUP_COLOR_SGIS = 0x8356;



		const long GL_PIXEL_TEX_GEN_SGIX = 0x8139;
		const long GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B;



		const long GL_PACK_SKIP_VOLUMES_SGIS = 0x8130;
		const long GL_PACK_IMAGE_DEPTH_SGIS = 0x8131;
		const long GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132;
		const long GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133;
		const long GL_TEXTURE_4D_SGIS = 0x8134;
		const long GL_PROXY_TEXTURE_4D_SGIS = 0x8135;
		const long GL_TEXTURE_4DSIZE_SGIS = 0x8136;
		const long GL_TEXTURE_WRAP_Q_SGIS = 0x8137;
		const long GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138;
		const long GL_TEXTURE_4D_BINDING_SGIS = 0x814F;



		const long GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC;
		const long GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD;



		const long GL_CMYK_EXT = 0x800C;
		const long GL_CMYKA_EXT = 0x800D;
		const long GL_PACK_CMYK_HINT_EXT = 0x800E;
		const long GL_UNPACK_CMYK_HINT_EXT = 0x800F;



		const long GL_TEXTURE_PRIORITY_EXT = 0x8066;
		const long GL_TEXTURE_RESIDENT_EXT = 0x8067;
		const long GL_TEXTURE_1D_BINDING_EXT = 0x8068;
		const long GL_TEXTURE_2D_BINDING_EXT = 0x8069;
		const long GL_TEXTURE_3D_BINDING_EXT = 0x806A;



		const long GL_DETAIL_TEXTURE_2D_SGIS = 0x8095;
		const long GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096;
		const long GL_LINEAR_DETAIL_SGIS = 0x8097;
		const long GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098;
		const long GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099;
		const long GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A;
		const long GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B;
		const long GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C;



		const long GL_LINEAR_SHARPEN_SGIS = 0x80AD;
		const long GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE;
		const long GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF;
		const long GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0;



		const long GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032;
		const long GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033;
		const long GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034;
		const long GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035;
		const long GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036;



		const long GL_TEXTURE_MIN_LOD_SGIS = 0x813A;
		const long GL_TEXTURE_MAX_LOD_SGIS = 0x813B;
		const long GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C;
		const long GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D;



		const long GL_MULTISAMPLE_SGIS = 0x809D;
		const long GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E;
		const long GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F;
		const long GL_SAMPLE_MASK_SGIS = 0x80A0;
		const long GL_1PASS_SGIS = 0x80A1;
		const long GL_2PASS_0_SGIS = 0x80A2;
		const long GL_2PASS_1_SGIS = 0x80A3;
		const long GL_4PASS_0_SGIS = 0x80A4;
		const long GL_4PASS_1_SGIS = 0x80A5;
		const long GL_4PASS_2_SGIS = 0x80A6;
		const long GL_4PASS_3_SGIS = 0x80A7;
		const long GL_SAMPLE_BUFFERS_SGIS = 0x80A8;
		const long GL_SAMPLES_SGIS = 0x80A9;
		const long GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA;
		const long GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB;
		const long GL_SAMPLE_PATTERN_SGIS = 0x80AC;



		const long GL_RESCALE_NORMAL_EXT = 0x803A;



		const long GL_VERTEX_ARRAY_EXT = 0x8074;
		const long GL_NORMAL_ARRAY_EXT = 0x8075;
		const long GL_COLOR_ARRAY_EXT = 0x8076;
		const long GL_INDEX_ARRAY_EXT = 0x8077;
		const long GL_TEXTURE_COORD_ARRAY_EXT = 0x8078;
		const long GL_EDGE_FLAG_ARRAY_EXT = 0x8079;
		const long GL_VERTEX_ARRAY_SIZE_EXT = 0x807A;
		const long GL_VERTEX_ARRAY_TYPE_EXT = 0x807B;
		const long GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C;
		const long GL_VERTEX_ARRAY_COUNT_EXT = 0x807D;
		const long GL_NORMAL_ARRAY_TYPE_EXT = 0x807E;
		const long GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F;
		const long GL_NORMAL_ARRAY_COUNT_EXT = 0x8080;
		const long GL_COLOR_ARRAY_SIZE_EXT = 0x8081;
		const long GL_COLOR_ARRAY_TYPE_EXT = 0x8082;
		const long GL_COLOR_ARRAY_STRIDE_EXT = 0x8083;
		const long GL_COLOR_ARRAY_COUNT_EXT = 0x8084;
		const long GL_INDEX_ARRAY_TYPE_EXT = 0x8085;
		const long GL_INDEX_ARRAY_STRIDE_EXT = 0x8086;
		const long GL_INDEX_ARRAY_COUNT_EXT = 0x8087;
		const long GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088;
		const long GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089;
		const long GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A;
		const long GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B;
		const long GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C;
		const long GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D;
		const long GL_VERTEX_ARRAY_POINTER_EXT = 0x808E;
		const long GL_NORMAL_ARRAY_POINTER_EXT = 0x808F;
		const long GL_COLOR_ARRAY_POINTER_EXT = 0x8090;
		const long GL_INDEX_ARRAY_POINTER_EXT = 0x8091;
		const long GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092;
		const long GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093;






		const long GL_GENERATE_MIPMAP_SGIS = 0x8191;
		const long GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192;



		const long GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170;
		const long GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171;
		const long GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172;
		const long GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173;
		const long GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174;
		const long GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175;
		const long GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176;
		const long GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177;
		const long GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178;
		const long GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D;
		const long GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E;
		const long GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F;



		const long GL_TEXTURE_COMPARE_SGIX = 0x819A;
		const long GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B;
		const long GL_TEXTURE_LEQUAL_R_SGIX = 0x819C;
		const long GL_TEXTURE_GEQUAL_R_SGIX = 0x819D;



		const long GL_CLAMP_TO_EDGE_SGIS = 0x812F;



		const long GL_CLAMP_TO_BORDER_SGIS = 0x812D;



		const long GL_FUNC_ADD_EXT = 0x8006;
		const long GL_MIN_EXT = 0x8007;
		const long GL_MAX_EXT = 0x8008;
		const long GL_BLEND_EQUATION_EXT = 0x8009;



		const long GL_FUNC_SUBTRACT_EXT = 0x800A;
		const long GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B;






		const long GL_INTERLACE_SGIX = 0x8094;



		const long GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E;
		const long GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F;
		const long GL_PIXEL_TILE_WIDTH_SGIX = 0x8140;
		const long GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141;
		const long GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142;
		const long GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143;
		const long GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144;
		const long GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145;



		const long GL_DUAL_ALPHA4_SGIS = 0x8110;
		const long GL_DUAL_ALPHA8_SGIS = 0x8111;
		const long GL_DUAL_ALPHA12_SGIS = 0x8112;
		const long GL_DUAL_ALPHA16_SGIS = 0x8113;
		const long GL_DUAL_LUMINANCE4_SGIS = 0x8114;
		const long GL_DUAL_LUMINANCE8_SGIS = 0x8115;
		const long GL_DUAL_LUMINANCE12_SGIS = 0x8116;
		const long GL_DUAL_LUMINANCE16_SGIS = 0x8117;
		const long GL_DUAL_INTENSITY4_SGIS = 0x8118;
		const long GL_DUAL_INTENSITY8_SGIS = 0x8119;
		const long GL_DUAL_INTENSITY12_SGIS = 0x811A;
		const long GL_DUAL_INTENSITY16_SGIS = 0x811B;
		const long GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C;
		const long GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D;
		const long GL_QUAD_ALPHA4_SGIS = 0x811E;
		const long GL_QUAD_ALPHA8_SGIS = 0x811F;
		const long GL_QUAD_LUMINANCE4_SGIS = 0x8120;
		const long GL_QUAD_LUMINANCE8_SGIS = 0x8121;
		const long GL_QUAD_INTENSITY4_SGIS = 0x8122;
		const long GL_QUAD_INTENSITY8_SGIS = 0x8123;
		const long GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124;
		const long GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125;



		const long GL_SPRITE_SGIX = 0x8148;
		const long GL_SPRITE_MODE_SGIX = 0x8149;
		const long GL_SPRITE_AXIS_SGIX = 0x814A;
		const long GL_SPRITE_TRANSLATION_SGIX = 0x814B;
		const long GL_SPRITE_AXIAL_SGIX = 0x814C;
		const long GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D;
		const long GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E;



		const long GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E;



		const long GL_POINT_SIZE_MIN_EXT = 0x8126;
		const long GL_POINT_SIZE_MAX_EXT = 0x8127;
		const long GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128;
		const long GL_DISTANCE_ATTENUATION_EXT = 0x8129;



		const long GL_POINT_SIZE_MIN_SGIS = 0x8126;
		const long GL_POINT_SIZE_MAX_SGIS = 0x8127;
		const long GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128;
		const long GL_DISTANCE_ATTENUATION_SGIS = 0x8129;



		const long GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180;
		const long GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181;



		const long GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179;
		const long GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A;
		const long GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B;
		const long GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C;



		const long GL_FRAMEZOOM_SGIX = 0x818B;
		const long GL_FRAMEZOOM_FACTOR_SGIX = 0x818C;
		const long GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D;






		const long GL_TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001;
		const long GL_GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002;



		const long GL_GEOMETRY_DEFORMATION_SGIX = 0x8194;
		const long GL_TEXTURE_DEFORMATION_SGIX = 0x8195;
		const long GL_DEFORMATIONS_MASK_SGIX = 0x8196;
		const long GL_MAX_DEFORMATION_ORDER_SGIX = 0x8197;



		const long GL_REFERENCE_PLANE_SGIX = 0x817D;
		const long GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E;






		const long GL_DEPTH_COMPONENT16_SGIX = 0x81A5;
		const long GL_DEPTH_COMPONENT24_SGIX = 0x81A6;
		const long GL_DEPTH_COMPONENT32_SGIX = 0x81A7;



		const long GL_FOG_FUNC_SGIS = 0x812A;
		const long GL_FOG_FUNC_POINTS_SGIS = 0x812B;
		const long GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C;



		const long GL_FOG_OFFSET_SGIX = 0x8198;
		const long GL_FOG_OFFSET_VALUE_SGIX = 0x8199;



		const long GL_IMAGE_SCALE_X_HP = 0x8155;
		const long GL_IMAGE_SCALE_Y_HP = 0x8156;
		const long GL_IMAGE_TRANSLATE_X_HP = 0x8157;
		const long GL_IMAGE_TRANSLATE_Y_HP = 0x8158;
		const long GL_IMAGE_ROTATE_ANGLE_HP = 0x8159;
		const long GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A;
		const long GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B;
		const long GL_IMAGE_MAG_FILTER_HP = 0x815C;
		const long GL_IMAGE_MIN_FILTER_HP = 0x815D;
		const long GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E;
		const long GL_CUBIC_HP = 0x815F;
		const long GL_AVERAGE_HP = 0x8160;
		const long GL_IMAGE_TRANSFORM_2D_HP = 0x8161;
		const long GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162;
		const long GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163;



		const long GL_IGNORE_BORDER_HP = 0x8150;
		const long GL_CONSTANT_BORDER_HP = 0x8151;
		const long GL_REPLICATE_BORDER_HP = 0x8153;
		const long GL_CONVOLUTION_BORDER_COLOR_HP = 0x8154;






		const long GL_TEXTURE_ENV_BIAS_SGIX = 0x80BE;






		const long GL_VERTEX_DATA_HINT_PGI = 0x1A22A;
		const long GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B;
		const long GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C;
		const long GL_MAX_VERTEX_HINT_PGI = 0x1A22D;
		const long GL_COLOR3_BIT_PGI = 0x00010000;
		const long GL_COLOR4_BIT_PGI = 0x00020000;
		const long GL_EDGEFLAG_BIT_PGI = 0x00040000;
		const long GL_INDEX_BIT_PGI = 0x00080000;
		const long GL_MAT_AMBIENT_BIT_PGI = 0x00100000;
		const long GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000;
		const long GL_MAT_DIFFUSE_BIT_PGI = 0x00400000;
		const long GL_MAT_EMISSION_BIT_PGI = 0x00800000;
		const long GL_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000;
		const long GL_MAT_SHININESS_BIT_PGI = 0x02000000;
		const long GL_MAT_SPECULAR_BIT_PGI = 0x04000000;
		const long GL_NORMAL_BIT_PGI = 0x08000000;
		const long GL_TEXCOORD1_BIT_PGI = 0x10000000;
		const long GL_TEXCOORD2_BIT_PGI = 0x20000000;
		const long GL_TEXCOORD3_BIT_PGI = 0x40000000;
		const long GL_TEXCOORD4_BIT_PGI = 0x80000000;
		const long GL_VERTEX23_BIT_PGI = 0x00000004;
		const long GL_VERTEX4_BIT_PGI = 0x00000008;



		const long GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8;
		const long GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD;
		const long GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE;
		const long GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202;
		const long GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203;
		const long GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204;
		const long GL_ALWAYS_FAST_HINT_PGI = 0x1A20C;
		const long GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D;
		const long GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E;
		const long GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F;
		const long GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210;
		const long GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211;
		const long GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216;
		const long GL_STRICT_LIGHTING_HINT_PGI = 0x1A217;
		const long GL_STRICT_SCISSOR_HINT_PGI = 0x1A218;
		const long GL_FULL_STIPPLE_HINT_PGI = 0x1A219;
		const long GL_CLIP_NEAR_HINT_PGI = 0x1A220;
		const long GL_CLIP_FAR_HINT_PGI = 0x1A221;
		const long GL_WIDE_LINE_HINT_PGI = 0x1A222;
		const long GL_BACK_NORMALS_HINT_PGI = 0x1A223;



		const long GL_COLOR_INDEX1_EXT = 0x80E2;
		const long GL_COLOR_INDEX2_EXT = 0x80E3;
		const long GL_COLOR_INDEX4_EXT = 0x80E4;
		const long GL_COLOR_INDEX8_EXT = 0x80E5;
		const long GL_COLOR_INDEX12_EXT = 0x80E6;
		const long GL_COLOR_INDEX16_EXT = 0x80E7;
		const long GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED;



		const long GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0;



		const long GL_LIST_PRIORITY_SGIX = 0x8182;



		const long GL_IR_INSTRUMENT1_SGIX = 0x817F;



		const long GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183;



		const long GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E;
		const long GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F;
		const long GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190;



		const long GL_SHADOW_AMBIENT_SGIX = 0x80BF;






		const long GL_INDEX_MATERIAL_EXT = 0x81B8;
		const long GL_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9;
		const long GL_INDEX_MATERIAL_FACE_EXT = 0x81BA;



		const long GL_INDEX_TEST_EXT = 0x81B5;
		const long GL_INDEX_TEST_FUNC_EXT = 0x81B6;
		const long GL_INDEX_TEST_REF_EXT = 0x81B7;



		const long GL_IUI_V2F_EXT = 0x81AD;
		const long GL_IUI_V3F_EXT = 0x81AE;
		const long GL_IUI_N3F_V2F_EXT = 0x81AF;
		const long GL_IUI_N3F_V3F_EXT = 0x81B0;
		const long GL_T2F_IUI_V2F_EXT = 0x81B1;
		const long GL_T2F_IUI_V3F_EXT = 0x81B2;
		const long GL_T2F_IUI_N3F_V2F_EXT = 0x81B3;
		const long GL_T2F_IUI_N3F_V3F_EXT = 0x81B4;



		const long GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8;
		const long GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9;



		const long GL_CULL_VERTEX_EXT = 0x81AA;
		const long GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB;
		const long GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC;



		const long GL_YCRCB_422_SGIX = 0x81BB;
		const long GL_YCRCB_444_SGIX = 0x81BC;



		const long GL_FRAGMENT_LIGHTING_SGIX = 0x8400;
		const long GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401;
		const long GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402;
		const long GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403;
		const long GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404;
		const long GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405;
		const long GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406;
		const long GL_LIGHT_ENV_MODE_SGIX = 0x8407;
		const long GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408;
		const long GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409;
		const long GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A;
		const long GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B;
		const long GL_FRAGMENT_LIGHT0_SGIX = 0x840C;
		const long GL_FRAGMENT_LIGHT1_SGIX = 0x840D;
		const long GL_FRAGMENT_LIGHT2_SGIX = 0x840E;
		const long GL_FRAGMENT_LIGHT3_SGIX = 0x840F;
		const long GL_FRAGMENT_LIGHT4_SGIX = 0x8410;
		const long GL_FRAGMENT_LIGHT5_SGIX = 0x8411;
		const long GL_FRAGMENT_LIGHT6_SGIX = 0x8412;
		const long GL_FRAGMENT_LIGHT7_SGIX = 0x8413;



		const long GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262;



		const long GL_TEXTURE_LIGHTING_MODE_HP = 0x8167;
		const long GL_TEXTURE_POST_SPECULAR_HP = 0x8168;
		const long GL_TEXTURE_PRE_SPECULAR_HP = 0x8169;



		const long GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8;
		const long GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9;



		const long GL_PHONG_WIN = 0x80EA;
		const long GL_PHONG_HINT_WIN = 0x80EB;



		const long GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC;



		const long GL_FRAGMENT_MATERIAL_EXT = 0x8349;
		const long GL_FRAGMENT_NORMAL_EXT = 0x834A;
		const long GL_FRAGMENT_COLOR_EXT = 0x834C;
		const long GL_ATTENUATION_EXT = 0x834D;
		const long GL_SHADOW_ATTENUATION_EXT = 0x834E;
		const long GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F;
		const long GL_TEXTURE_LIGHT_EXT = 0x8350;
		const long GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351;
		const long GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352;
		/* reuse GL_FRAGMENT_DEPTH_EXT */



		const long GL_ALPHA_MIN_SGIX = 0x8320;
		const long GL_ALPHA_MAX_SGIX = 0x8321;



		const long GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = 0x8184;
		const long GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = 0x8185;
		const long GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = 0x8186;
		const long GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = 0x8187;
		const long GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = 0x8188;
		const long GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = 0x8189;
		const long GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = 0x818A;



		const long GL_BGR_EXT = 0x80E0;
		const long GL_BGRA_EXT = 0x80E1;



		const long GL_ASYNC_MARKER_SGIX = 0x8329;



		const long GL_ASYNC_TEX_IMAGE_SGIX = 0x835C;
		const long GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D;
		const long GL_ASYNC_READ_PIXELS_SGIX = 0x835E;
		const long GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F;
		const long GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360;
		const long GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361;



		const long GL_ASYNC_HISTOGRAM_SGIX = 0x832C;
		const long GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D;






		const long GL_PARALLEL_ARRAYS_INTEL = 0x83F4;
		const long GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5;
		const long GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6;
		const long GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7;
		const long GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8;



		const long GL_OCCLUSION_TEST_HP = 0x8165;
		const long GL_OCCLUSION_TEST_RESULT_HP = 0x8166;



		const long GL_PIXEL_TRANSFORM_2D_EXT = 0x8330;
		const long GL_PIXEL_MAG_FILTER_EXT = 0x8331;
		const long GL_PIXEL_MIN_FILTER_EXT = 0x8332;
		const long GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333;
		const long GL_CUBIC_EXT = 0x8334;
		const long GL_AVERAGE_EXT = 0x8335;
		const long GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336;
		const long GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337;
		const long GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338;






		const long GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB;



		const long GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8;
		const long GL_SINGLE_COLOR_EXT = 0x81F9;
		const long GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA;



		const long GL_COLOR_SUM_EXT = 0x8458;
		const long GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459;
		const long GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A;
		const long GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B;
		const long GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C;
		const long GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D;
		const long GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E;



		const long GL_PERTURB_EXT = 0x85AE;
		const long GL_TEXTURE_NORMAL_EXT = 0x85AF;






		const long GL_FOG_COORDINATE_SOURCE_EXT = 0x8450;
		const long GL_FOG_COORDINATE_EXT = 0x8451;
		const long GL_FRAGMENT_DEPTH_EXT = 0x8452;
		const long GL_CURRENT_FOG_COORDINATE_EXT = 0x8453;
		const long GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454;
		const long GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455;
		const long GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456;
		const long GL_FOG_COORDINATE_ARRAY_EXT = 0x8457;



		const long GL_SCREEN_COORDINATES_REND = 0x8490;
		const long GL_INVERTED_SCREEN_W_REND = 0x8491;



		const long GL_TANGENT_ARRAY_EXT = 0x8439;
		const long GL_BINORMAL_ARRAY_EXT = 0x843A;
		const long GL_CURRENT_TANGENT_EXT = 0x843B;
		const long GL_CURRENT_BINORMAL_EXT = 0x843C;
		const long GL_TANGENT_ARRAY_TYPE_EXT = 0x843E;
		const long GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F;
		const long GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440;
		const long GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441;
		const long GL_TANGENT_ARRAY_POINTER_EXT = 0x8442;
		const long GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443;
		const long GL_MAP1_TANGENT_EXT = 0x8444;
		const long GL_MAP2_TANGENT_EXT = 0x8445;
		const long GL_MAP1_BINORMAL_EXT = 0x8446;
		const long GL_MAP2_BINORMAL_EXT = 0x8447;



		const long GL_COMBINE_EXT = 0x8570;
		const long GL_COMBINE_RGB_EXT = 0x8571;
		const long GL_COMBINE_ALPHA_EXT = 0x8572;
		const long GL_RGB_SCALE_EXT = 0x8573;
		const long GL_ADD_SIGNED_EXT = 0x8574;
		const long GL_INTERPOLATE_EXT = 0x8575;
		const long GL_CONSTANT_EXT = 0x8576;
		const long GL_PRIMARY_COLOR_EXT = 0x8577;
		const long GL_PREVIOUS_EXT = 0x8578;
		const long GL_SOURCE0_RGB_EXT = 0x8580;
		const long GL_SOURCE1_RGB_EXT = 0x8581;
		const long GL_SOURCE2_RGB_EXT = 0x8582;
		const long GL_SOURCE0_ALPHA_EXT = 0x8588;
		const long GL_SOURCE1_ALPHA_EXT = 0x8589;
		const long GL_SOURCE2_ALPHA_EXT = 0x858A;
		const long GL_OPERAND0_RGB_EXT = 0x8590;
		const long GL_OPERAND1_RGB_EXT = 0x8591;
		const long GL_OPERAND2_RGB_EXT = 0x8592;
		const long GL_OPERAND0_ALPHA_EXT = 0x8598;
		const long GL_OPERAND1_ALPHA_EXT = 0x8599;
		const long GL_OPERAND2_ALPHA_EXT = 0x859A;



		const long GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0;



		const long GL_TRANSFORM_HINT_APPLE = 0x85B1;



		const long GL_FOG_SCALE_SGIX = 0x81FC;
		const long GL_FOG_SCALE_VALUE_SGIX = 0x81FD;



		const long GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5;
		const long GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6;



		const long GL_GLOBAL_ALPHA_SUN = 0x81D9;
		const long GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA;



		const long GL_RESTART_SUN = 0x0001;
		const long GL_REPLACE_MIDDLE_SUN = 0x0002;
		const long GL_REPLACE_OLDEST_SUN = 0x0003;
		const long GL_TRIANGLE_LIST_SUN = 0x81D7;
		const long GL_REPLACEMENT_CODE_SUN = 0x81D8;
		const long GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0;
		const long GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1;
		const long GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2;
		const long GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3;
		const long GL_R1UI_V3F_SUN = 0x85C4;
		const long GL_R1UI_C4UB_V3F_SUN = 0x85C5;
		const long GL_R1UI_C3F_V3F_SUN = 0x85C6;
		const long GL_R1UI_N3F_V3F_SUN = 0x85C7;
		const long GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8;
		const long GL_R1UI_T2F_V3F_SUN = 0x85C9;
		const long GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA;
		const long GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB;






		const long GL_BLEND_DST_RGB_EXT = 0x80C8;
		const long GL_BLEND_SRC_RGB_EXT = 0x80C9;
		const long GL_BLEND_DST_ALPHA_EXT = 0x80CA;
		const long GL_BLEND_SRC_ALPHA_EXT = 0x80CB;



		const long GL_RED_MIN_CLAMP_INGR = 0x8560;
		const long GL_GREEN_MIN_CLAMP_INGR = 0x8561;
		const long GL_BLUE_MIN_CLAMP_INGR = 0x8562;
		const long GL_ALPHA_MIN_CLAMP_INGR = 0x8563;
		const long GL_RED_MAX_CLAMP_INGR = 0x8564;
		const long GL_GREEN_MAX_CLAMP_INGR = 0x8565;
		const long GL_BLUE_MAX_CLAMP_INGR = 0x8566;
		const long GL_ALPHA_MAX_CLAMP_INGR = 0x8567;



		const long GL_INTERLACE_READ_INGR = 0x8568;



		const long GL_INCR_WRAP_EXT = 0x8507;
		const long GL_DECR_WRAP_EXT = 0x8508;



		const long GL_422_EXT = 0x80CC;
		const long GL_422_REV_EXT = 0x80CD;
		const long GL_422_AVERAGE_EXT = 0x80CE;
		const long GL_422_REV_AVERAGE_EXT = 0x80CF;



		const long GL_NORMAL_MAP_NV = 0x8511;
		const long GL_REFLECTION_MAP_NV = 0x8512;



		const long GL_NORMAL_MAP_EXT = 0x8511;
		const long GL_REFLECTION_MAP_EXT = 0x8512;
		const long GL_TEXTURE_CUBE_MAP_EXT = 0x8513;
		const long GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518;
		const long GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519;
		const long GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A;
		const long GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B;
		const long GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C;



		const long GL_WRAP_BORDER_SUN = 0x81D4;






		const long GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD;
		const long GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500;
		const long GL_TEXTURE_LOD_BIAS_EXT = 0x8501;



		const long GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;
		const long GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;



		const long GL_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3;
		const long GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502;
		const long GL_MODELVIEW0_MATRIX_EXT = 0x0BA6;
		const long GL_MODELVIEW1_MATRIX_EXT = 0x8506;
		const long GL_VERTEX_WEIGHTING_EXT = 0x8509;
		const long GL_MODELVIEW0_EXT = 0x1700;
		const long GL_MODELVIEW1_EXT = 0x850A;
		const long GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B;
		const long GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C;
		const long GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D;
		const long GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E;
		const long GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F;
		const long GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510;



		const long GL_MAX_SHININESS_NV = 0x8504;
		const long GL_MAX_SPOT_EXPONENT_NV = 0x8505;



		const long GL_VERTEX_ARRAY_RANGE_NV = 0x851D;
		const long GL_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E;
		const long GL_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F;
		const long GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520;
		const long GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521;



		const long GL_REGISTER_COMBINERS_NV = 0x8522;
		const long GL_VARIABLE_A_NV = 0x8523;
		const long GL_VARIABLE_B_NV = 0x8524;
		const long GL_VARIABLE_C_NV = 0x8525;
		const long GL_VARIABLE_D_NV = 0x8526;
		const long GL_VARIABLE_E_NV = 0x8527;
		const long GL_VARIABLE_F_NV = 0x8528;
		const long GL_VARIABLE_G_NV = 0x8529;
		const long GL_CONSTANT_COLOR0_NV = 0x852A;
		const long GL_CONSTANT_COLOR1_NV = 0x852B;
		const long GL_PRIMARY_COLOR_NV = 0x852C;
		const long GL_SECONDARY_COLOR_NV = 0x852D;
		const long GL_SPARE0_NV = 0x852E;
		const long GL_SPARE1_NV = 0x852F;
		const long GL_DISCARD_NV = 0x8530;
		const long GL_E_TIMES_F_NV = 0x8531;
		const long GL_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532;
		const long GL_UNSIGNED_IDENTITY_NV = 0x8536;
		const long GL_UNSIGNED_INVERT_NV = 0x8537;
		const long GL_EXPAND_NORMAL_NV = 0x8538;
		const long GL_EXPAND_NEGATE_NV = 0x8539;
		const long GL_HALF_BIAS_NORMAL_NV = 0x853A;
		const long GL_HALF_BIAS_NEGATE_NV = 0x853B;
		const long GL_SIGNED_IDENTITY_NV = 0x853C;
		const long GL_SIGNED_NEGATE_NV = 0x853D;
		const long GL_SCALE_BY_TWO_NV = 0x853E;
		const long GL_SCALE_BY_FOUR_NV = 0x853F;
		const long GL_SCALE_BY_ONE_HALF_NV = 0x8540;
		const long GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541;
		const long GL_COMBINER_INPUT_NV = 0x8542;
		const long GL_COMBINER_MAPPING_NV = 0x8543;
		const long GL_COMBINER_COMPONENT_USAGE_NV = 0x8544;
		const long GL_COMBINER_AB_DOT_PRODUCT_NV = 0x8545;
		const long GL_COMBINER_CD_DOT_PRODUCT_NV = 0x8546;
		const long GL_COMBINER_MUX_SUM_NV = 0x8547;
		const long GL_COMBINER_SCALE_NV = 0x8548;
		const long GL_COMBINER_BIAS_NV = 0x8549;
		const long GL_COMBINER_AB_OUTPUT_NV = 0x854A;
		const long GL_COMBINER_CD_OUTPUT_NV = 0x854B;
		const long GL_COMBINER_SUM_OUTPUT_NV = 0x854C;
		const long GL_MAX_GENERAL_COMBINERS_NV = 0x854D;
		const long GL_NUM_GENERAL_COMBINERS_NV = 0x854E;
		const long GL_COLOR_SUM_CLAMP_NV = 0x854F;
		const long GL_COMBINER0_NV = 0x8550;
		const long GL_COMBINER1_NV = 0x8551;
		const long GL_COMBINER2_NV = 0x8552;
		const long GL_COMBINER3_NV = 0x8553;
		const long GL_COMBINER4_NV = 0x8554;
		const long GL_COMBINER5_NV = 0x8555;
		const long GL_COMBINER6_NV = 0x8556;
		const long GL_COMBINER7_NV = 0x8557;
		/* reuse GL_TEXTURE0_ARB */
		/* reuse GL_TEXTURE1_ARB */
		/* reuse GL_ZERO */
		/* reuse GL_NONE */
		/* reuse GL_FOG */



		const long GL_FOG_DISTANCE_MODE_NV = 0x855A;
		const long GL_EYE_RADIAL_NV = 0x855B;
		const long GL_EYE_PLANE_ABSOLUTE_NV = 0x855C;
		/* reuse GL_EYE_PLANE */



		const long GL_EMBOSS_LIGHT_NV = 0x855D;
		const long GL_EMBOSS_CONSTANT_NV = 0x855E;
		const long GL_EMBOSS_MAP_NV = 0x855F;






		const long GL_COMBINE4_NV = 0x8503;
		const long GL_SOURCE3_RGB_NV = 0x8583;
		const long GL_SOURCE3_ALPHA_NV = 0x858B;
		const long GL_OPERAND3_RGB_NV = 0x8593;
		const long GL_OPERAND3_ALPHA_NV = 0x859B;









		const long GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;
		const long GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;
		const long GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;
		const long GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;



		const long GL_CULL_VERTEX_IBM = 103050;






		const long GL_VERTEX_ARRAY_LIST_IBM = 103070;
		const long GL_NORMAL_ARRAY_LIST_IBM = 103071;
		const long GL_COLOR_ARRAY_LIST_IBM = 103072;
		const long GL_INDEX_ARRAY_LIST_IBM = 103073;
		const long GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074;
		const long GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075;
		const long GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076;
		const long GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077;
		const long GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080;
		const long GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081;
		const long GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082;
		const long GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083;
		const long GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084;
		const long GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085;
		const long GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086;
		const long GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087;



		const long GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0;
		const long GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1;
		const long GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2;
		const long GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3;
		const long GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4;






		const long GL_YCRCB_SGIX = 0x8318;
		const long GL_YCRCBA_SGIX = 0x8319;



		const long GL_DEPTH_PASS_INSTRUMENT_SGIX = 0x8310;
		const long GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = 0x8311;
		const long GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = 0x8312;



		const long GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0;
		const long GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1;



		const long GL_MULTISAMPLE_3DFX = 0x86B2;
		const long GL_SAMPLE_BUFFERS_3DFX = 0x86B3;
		const long GL_SAMPLES_3DFX = 0x86B4;
		const long GL_MULTISAMPLE_BIT_3DFX = 0x20000000;






		const long GL_MULTISAMPLE_EXT = 0x809D;
		const long GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E;
		const long GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F;
		const long GL_SAMPLE_MASK_EXT = 0x80A0;
		const long GL_1PASS_EXT = 0x80A1;
		const long GL_2PASS_0_EXT = 0x80A2;
		const long GL_2PASS_1_EXT = 0x80A3;
		const long GL_4PASS_0_EXT = 0x80A4;
		const long GL_4PASS_1_EXT = 0x80A5;
		const long GL_4PASS_2_EXT = 0x80A6;
		const long GL_4PASS_3_EXT = 0x80A7;
		const long GL_SAMPLE_BUFFERS_EXT = 0x80A8;
		const long GL_SAMPLES_EXT = 0x80A9;
		const long GL_SAMPLE_MASK_VALUE_EXT = 0x80AA;
		const long GL_SAMPLE_MASK_INVERT_EXT = 0x80AB;
		const long GL_SAMPLE_PATTERN_EXT = 0x80AC;
		const long GL_MULTISAMPLE_BIT_EXT = 0x20000000;



		const long GL_VERTEX_PRECLIP_SGIX = 0x83EE;
		const long GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF;



		const long GL_CONVOLUTION_HINT_SGIX = 0x8316;



		const long GL_PACK_RESAMPLE_SGIX = 0x842C;
		const long GL_UNPACK_RESAMPLE_SGIX = 0x842D;
		const long GL_RESAMPLE_REPLICATE_SGIX = 0x842E;
		const long GL_RESAMPLE_ZERO_FILL_SGIX = 0x842F;
		const long GL_RESAMPLE_DECIMATE_SGIX = 0x8430;



		const long GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0;
		const long GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1;
		const long GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2;
		const long GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3;
		const long GL_EYE_POINT_SGIS = 0x81F4;
		const long GL_OBJECT_POINT_SGIS = 0x81F5;
		const long GL_EYE_LINE_SGIS = 0x81F6;
		const long GL_OBJECT_LINE_SGIS = 0x81F7;



		const long GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF;



		const long GL_DOT3_RGB_EXT = 0x8740;
		const long GL_DOT3_RGBA_EXT = 0x8741;



		const long GL_MIRROR_CLAMP_ATI = 0x8742;
		const long GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743;



		const long GL_ALL_COMPLETED_NV = 0x84F2;
		const long GL_FENCE_STATUS_NV = 0x84F3;
		const long GL_FENCE_CONDITION_NV = 0x84F4;



		const long GL_MIRRORED_REPEAT_IBM = 0x8370;



		const long GL_EVAL_2D_NV = 0x86C0;
		const long GL_EVAL_TRIANGULAR_2D_NV = 0x86C1;
		const long GL_MAP_TESSELLATION_NV = 0x86C2;
		const long GL_MAP_ATTRIB_U_ORDER_NV = 0x86C3;
		const long GL_MAP_ATTRIB_V_ORDER_NV = 0x86C4;
		const long GL_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5;
		const long GL_EVAL_VERTEX_ATTRIB0_NV = 0x86C6;
		const long GL_EVAL_VERTEX_ATTRIB1_NV = 0x86C7;
		const long GL_EVAL_VERTEX_ATTRIB2_NV = 0x86C8;
		const long GL_EVAL_VERTEX_ATTRIB3_NV = 0x86C9;
		const long GL_EVAL_VERTEX_ATTRIB4_NV = 0x86CA;
		const long GL_EVAL_VERTEX_ATTRIB5_NV = 0x86CB;
		const long GL_EVAL_VERTEX_ATTRIB6_NV = 0x86CC;
		const long GL_EVAL_VERTEX_ATTRIB7_NV = 0x86CD;
		const long GL_EVAL_VERTEX_ATTRIB8_NV = 0x86CE;
		const long GL_EVAL_VERTEX_ATTRIB9_NV = 0x86CF;
		const long GL_EVAL_VERTEX_ATTRIB10_NV = 0x86D0;
		const long GL_EVAL_VERTEX_ATTRIB11_NV = 0x86D1;
		const long GL_EVAL_VERTEX_ATTRIB12_NV = 0x86D2;
		const long GL_EVAL_VERTEX_ATTRIB13_NV = 0x86D3;
		const long GL_EVAL_VERTEX_ATTRIB14_NV = 0x86D4;
		const long GL_EVAL_VERTEX_ATTRIB15_NV = 0x86D5;
		const long GL_MAX_MAP_TESSELLATION_NV = 0x86D6;
		const long GL_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7;



		const long GL_DEPTH_STENCIL_NV = 0x84F9;
		const long GL_UNSIGNED_INT_24_8_NV = 0x84FA;



		const long GL_PER_STAGE_CONSTANTS_NV = 0x8535;






		const long GL_TEXTURE_RECTANGLE_NV = 0x84F5;
		const long GL_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6;
		const long GL_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7;
		const long GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8;



		const long GL_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C;
		const long GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D;
		const long GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E;
		const long GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9;
		const long GL_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA;
		const long GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB;
		const long GL_DSDT_MAG_INTENSITY_NV = 0x86DC;
		const long GL_SHADER_CONSISTENT_NV = 0x86DD;
		const long GL_TEXTURE_SHADER_NV = 0x86DE;
		const long GL_SHADER_OPERATION_NV = 0x86DF;
		const long GL_CULL_MODES_NV = 0x86E0;
		const long GL_OFFSET_TEXTURE_MATRIX_NV = 0x86E1;
		const long GL_OFFSET_TEXTURE_SCALE_NV = 0x86E2;
		const long GL_OFFSET_TEXTURE_BIAS_NV = 0x86E3;
		const long GL_OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1;
		const long GL_OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2;
		const long GL_OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3;
		const long GL_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4;
		const long GL_CONST_EYE_NV = 0x86E5;
		const long GL_PASS_THROUGH_NV = 0x86E6;
		const long GL_CULL_FRAGMENT_NV = 0x86E7;
		const long GL_OFFSET_TEXTURE_2D_NV = 0x86E8;
		const long GL_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9;
		const long GL_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA;
		const long GL_DOT_PRODUCT_NV = 0x86EC;
		const long GL_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED;
		const long GL_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE;
		const long GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0;
		const long GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1;
		const long GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2;
		const long GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3;
		const long GL_HILO_NV = 0x86F4;
		const long GL_DSDT_NV = 0x86F5;
		const long GL_DSDT_MAG_NV = 0x86F6;
		const long GL_DSDT_MAG_VIB_NV = 0x86F7;
		const long GL_HILO16_NV = 0x86F8;
		const long GL_SIGNED_HILO_NV = 0x86F9;
		const long GL_SIGNED_HILO16_NV = 0x86FA;
		const long GL_SIGNED_RGBA_NV = 0x86FB;
		const long GL_SIGNED_RGBA8_NV = 0x86FC;
		const long GL_SIGNED_RGB_NV = 0x86FE;
		const long GL_SIGNED_RGB8_NV = 0x86FF;
		const long GL_SIGNED_LUMINANCE_NV = 0x8701;
		const long GL_SIGNED_LUMINANCE8_NV = 0x8702;
		const long GL_SIGNED_LUMINANCE_ALPHA_NV = 0x8703;
		const long GL_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704;
		const long GL_SIGNED_ALPHA_NV = 0x8705;
		const long GL_SIGNED_ALPHA8_NV = 0x8706;
		const long GL_SIGNED_INTENSITY_NV = 0x8707;
		const long GL_SIGNED_INTENSITY8_NV = 0x8708;
		const long GL_DSDT8_NV = 0x8709;
		const long GL_DSDT8_MAG8_NV = 0x870A;
		const long GL_DSDT8_MAG8_INTENSITY8_NV = 0x870B;
		const long GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C;
		const long GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D;
		const long GL_HI_SCALE_NV = 0x870E;
		const long GL_LO_SCALE_NV = 0x870F;
		const long GL_DS_SCALE_NV = 0x8710;
		const long GL_DT_SCALE_NV = 0x8711;
		const long GL_MAGNITUDE_SCALE_NV = 0x8712;
		const long GL_VIBRANCE_SCALE_NV = 0x8713;
		const long GL_HI_BIAS_NV = 0x8714;
		const long GL_LO_BIAS_NV = 0x8715;
		const long GL_DS_BIAS_NV = 0x8716;
		const long GL_DT_BIAS_NV = 0x8717;
		const long GL_MAGNITUDE_BIAS_NV = 0x8718;
		const long GL_VIBRANCE_BIAS_NV = 0x8719;
		const long GL_TEXTURE_BORDER_VALUES_NV = 0x871A;
		const long GL_TEXTURE_HI_SIZE_NV = 0x871B;
		const long GL_TEXTURE_LO_SIZE_NV = 0x871C;
		const long GL_TEXTURE_DS_SIZE_NV = 0x871D;
		const long GL_TEXTURE_DT_SIZE_NV = 0x871E;
		const long GL_TEXTURE_MAG_SIZE_NV = 0x871F;



		const long GL_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF;



		const long GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533;



		const long GL_VERTEX_PROGRAM_NV = 0x8620;
		const long GL_VERTEX_STATE_PROGRAM_NV = 0x8621;
		const long GL_ATTRIB_ARRAY_SIZE_NV = 0x8623;
		const long GL_ATTRIB_ARRAY_STRIDE_NV = 0x8624;
		const long GL_ATTRIB_ARRAY_TYPE_NV = 0x8625;
		const long GL_CURRENT_ATTRIB_NV = 0x8626;
		const long GL_PROGRAM_LENGTH_NV = 0x8627;
		const long GL_PROGRAM_STRING_NV = 0x8628;
		const long GL_MODELVIEW_PROJECTION_NV = 0x8629;
		const long GL_IDENTITY_NV = 0x862A;
		const long GL_INVERSE_NV = 0x862B;
		const long GL_TRANSPOSE_NV = 0x862C;
		const long GL_INVERSE_TRANSPOSE_NV = 0x862D;
		const long GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E;
		const long GL_MAX_TRACK_MATRICES_NV = 0x862F;
		const long GL_MATRIX0_NV = 0x8630;
		const long GL_MATRIX1_NV = 0x8631;
		const long GL_MATRIX2_NV = 0x8632;
		const long GL_MATRIX3_NV = 0x8633;
		const long GL_MATRIX4_NV = 0x8634;
		const long GL_MATRIX5_NV = 0x8635;
		const long GL_MATRIX6_NV = 0x8636;
		const long GL_MATRIX7_NV = 0x8637;
		const long GL_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640;
		const long GL_CURRENT_MATRIX_NV = 0x8641;
		const long GL_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642;
		const long GL_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643;
		const long GL_PROGRAM_PARAMETER_NV = 0x8644;
		const long GL_ATTRIB_ARRAY_POINTER_NV = 0x8645;
		const long GL_PROGRAM_TARGET_NV = 0x8646;
		const long GL_PROGRAM_RESIDENT_NV = 0x8647;
		const long GL_TRACK_MATRIX_NV = 0x8648;
		const long GL_TRACK_MATRIX_TRANSFORM_NV = 0x8649;
		const long GL_VERTEX_PROGRAM_BINDING_NV = 0x864A;
		const long GL_PROGRAM_ERROR_POSITION_NV = 0x864B;
		const long GL_VERTEX_ATTRIB_ARRAY0_NV = 0x8650;
		const long GL_VERTEX_ATTRIB_ARRAY1_NV = 0x8651;
		const long GL_VERTEX_ATTRIB_ARRAY2_NV = 0x8652;
		const long GL_VERTEX_ATTRIB_ARRAY3_NV = 0x8653;
		const long GL_VERTEX_ATTRIB_ARRAY4_NV = 0x8654;
		const long GL_VERTEX_ATTRIB_ARRAY5_NV = 0x8655;
		const long GL_VERTEX_ATTRIB_ARRAY6_NV = 0x8656;
		const long GL_VERTEX_ATTRIB_ARRAY7_NV = 0x8657;
		const long GL_VERTEX_ATTRIB_ARRAY8_NV = 0x8658;
		const long GL_VERTEX_ATTRIB_ARRAY9_NV = 0x8659;
		const long GL_VERTEX_ATTRIB_ARRAY10_NV = 0x865A;
		const long GL_VERTEX_ATTRIB_ARRAY11_NV = 0x865B;
		const long GL_VERTEX_ATTRIB_ARRAY12_NV = 0x865C;
		const long GL_VERTEX_ATTRIB_ARRAY13_NV = 0x865D;
		const long GL_VERTEX_ATTRIB_ARRAY14_NV = 0x865E;
		const long GL_VERTEX_ATTRIB_ARRAY15_NV = 0x865F;
		const long GL_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660;
		const long GL_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661;
		const long GL_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662;
		const long GL_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663;
		const long GL_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664;
		const long GL_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665;
		const long GL_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666;
		const long GL_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667;
		const long GL_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668;
		const long GL_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669;
		const long GL_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A;
		const long GL_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B;
		const long GL_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C;
		const long GL_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D;
		const long GL_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E;
		const long GL_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F;
		const long GL_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670;
		const long GL_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671;
		const long GL_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672;
		const long GL_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673;
		const long GL_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674;
		const long GL_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675;
		const long GL_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676;
		const long GL_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677;
		const long GL_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678;
		const long GL_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679;
		const long GL_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A;
		const long GL_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B;
		const long GL_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C;
		const long GL_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D;
		const long GL_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E;
		const long GL_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F;



		const long GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369;
		const long GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A;
		const long GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B;



		const long GL_SCALEBIAS_HINT_SGIX = 0x8322;



		const long GL_INTERLACE_OML = 0x8980;
		const long GL_INTERLACE_READ_OML = 0x8981;



		const long GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982;
		const long GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983;



		const long GL_PACK_RESAMPLE_OML = 0x8984;
		const long GL_UNPACK_RESAMPLE_OML = 0x8985;
		const long GL_RESAMPLE_REPLICATE_OML = 0x8986;
		const long GL_RESAMPLE_ZERO_FILL_OML = 0x8987;
		const long GL_RESAMPLE_AVERAGE_OML = 0x8988;
		const long GL_RESAMPLE_DECIMATE_OML = 0x8989;



		const long GL_DEPTH_STENCIL_TO_RGBA_NV = 0x886E;
		const long GL_DEPTH_STENCIL_TO_BGRA_NV = 0x886F;



		const long GL_BUMP_ROT_MATRIX_ATI = 0x8775;
		const long GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776;
		const long GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777;
		const long GL_BUMP_TEX_UNITS_ATI = 0x8778;
		const long GL_DUDV_ATI = 0x8779;
		const long GL_DU8DV8_ATI = 0x877A;
		const long GL_BUMP_ENVMAP_ATI = 0x877B;
		const long GL_BUMP_TARGET_ATI = 0x877C;



		const long GL_FRAGMENT_SHADER_ATI = 0x8920;
		const long GL_REG_0_ATI = 0x8921;
		const long GL_REG_1_ATI = 0x8922;
		const long GL_REG_2_ATI = 0x8923;
		const long GL_REG_3_ATI = 0x8924;
		const long GL_REG_4_ATI = 0x8925;
		const long GL_REG_5_ATI = 0x8926;
		const long GL_REG_6_ATI = 0x8927;
		const long GL_REG_7_ATI = 0x8928;
		const long GL_REG_8_ATI = 0x8929;
		const long GL_REG_9_ATI = 0x892A;
		const long GL_REG_10_ATI = 0x892B;
		const long GL_REG_11_ATI = 0x892C;
		const long GL_REG_12_ATI = 0x892D;
		const long GL_REG_13_ATI = 0x892E;
		const long GL_REG_14_ATI = 0x892F;
		const long GL_REG_15_ATI = 0x8930;
		const long GL_REG_16_ATI = 0x8931;
		const long GL_REG_17_ATI = 0x8932;
		const long GL_REG_18_ATI = 0x8933;
		const long GL_REG_19_ATI = 0x8934;
		const long GL_REG_20_ATI = 0x8935;
		const long GL_REG_21_ATI = 0x8936;
		const long GL_REG_22_ATI = 0x8937;
		const long GL_REG_23_ATI = 0x8938;
		const long GL_REG_24_ATI = 0x8939;
		const long GL_REG_25_ATI = 0x893A;
		const long GL_REG_26_ATI = 0x893B;
		const long GL_REG_27_ATI = 0x893C;
		const long GL_REG_28_ATI = 0x893D;
		const long GL_REG_29_ATI = 0x893E;
		const long GL_REG_30_ATI = 0x893F;
		const long GL_REG_31_ATI = 0x8940;
		const long GL_CON_0_ATI = 0x8941;
		const long GL_CON_1_ATI = 0x8942;
		const long GL_CON_2_ATI = 0x8943;
		const long GL_CON_3_ATI = 0x8944;
		const long GL_CON_4_ATI = 0x8945;
		const long GL_CON_5_ATI = 0x8946;
		const long GL_CON_6_ATI = 0x8947;
		const long GL_CON_7_ATI = 0x8948;
		const long GL_CON_8_ATI = 0x8949;
		const long GL_CON_9_ATI = 0x894A;
		const long GL_CON_10_ATI = 0x894B;
		const long GL_CON_11_ATI = 0x894C;
		const long GL_CON_12_ATI = 0x894D;
		const long GL_CON_13_ATI = 0x894E;
		const long GL_CON_14_ATI = 0x894F;
		const long GL_CON_15_ATI = 0x8950;
		const long GL_CON_16_ATI = 0x8951;
		const long GL_CON_17_ATI = 0x8952;
		const long GL_CON_18_ATI = 0x8953;
		const long GL_CON_19_ATI = 0x8954;
		const long GL_CON_20_ATI = 0x8955;
		const long GL_CON_21_ATI = 0x8956;
		const long GL_CON_22_ATI = 0x8957;
		const long GL_CON_23_ATI = 0x8958;
		const long GL_CON_24_ATI = 0x8959;
		const long GL_CON_25_ATI = 0x895A;
		const long GL_CON_26_ATI = 0x895B;
		const long GL_CON_27_ATI = 0x895C;
		const long GL_CON_28_ATI = 0x895D;
		const long GL_CON_29_ATI = 0x895E;
		const long GL_CON_30_ATI = 0x895F;
		const long GL_CON_31_ATI = 0x8960;
		const long GL_MOV_ATI = 0x8961;
		const long GL_ADD_ATI = 0x8963;
		const long GL_MUL_ATI = 0x8964;
		const long GL_SUB_ATI = 0x8965;
		const long GL_DOT3_ATI = 0x8966;
		const long GL_DOT4_ATI = 0x8967;
		const long GL_MAD_ATI = 0x8968;
		const long GL_LERP_ATI = 0x8969;
		const long GL_CND_ATI = 0x896A;
		const long GL_CND0_ATI = 0x896B;
		const long GL_DOT2_ADD_ATI = 0x896C;
		const long GL_SECONDARY_INTERPOLATOR_ATI = 0x896D;
		const long GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E;
		const long GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F;
		const long GL_NUM_PASSES_ATI = 0x8970;
		const long GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971;
		const long GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972;
		const long GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973;
		const long GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974;
		const long GL_COLOR_ALPHA_PAIRING_ATI = 0x8975;
		const long GL_SWIZZLE_STR_ATI = 0x8976;
		const long GL_SWIZZLE_STQ_ATI = 0x8977;
		const long GL_SWIZZLE_STR_DR_ATI = 0x8978;
		const long GL_SWIZZLE_STQ_DQ_ATI = 0x8979;
		const long GL_SWIZZLE_STRQ_ATI = 0x897A;
		const long GL_SWIZZLE_STRQ_DQ_ATI = 0x897B;
		const long GL_RED_BIT_ATI = 0x00000001;
		const long GL_GREEN_BIT_ATI = 0x00000002;
		const long GL_BLUE_BIT_ATI = 0x00000004;
		const long GL_2X_BIT_ATI = 0x00000001;
		const long GL_4X_BIT_ATI = 0x00000002;
		const long GL_8X_BIT_ATI = 0x00000004;
		const long GL_HALF_BIT_ATI = 0x00000008;
		const long GL_QUARTER_BIT_ATI = 0x00000010;
		const long GL_EIGHTH_BIT_ATI = 0x00000020;
		const long GL_SATURATE_BIT_ATI = 0x00000040;
		const long GL_COMP_BIT_ATI = 0x00000002;
		const long GL_NEGATE_BIT_ATI = 0x00000004;
		const long GL_BIAS_BIT_ATI = 0x00000008;



		const long GL_PN_TRIANGLES_ATI = 0x87F0;
		const long GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1;
		const long GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2;
		const long GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3;
		const long GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4;
		const long GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5;
		const long GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6;
		const long GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7;
		const long GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8;



		const long GL_STATIC_ATI = 0x8760;
		const long GL_DYNAMIC_ATI = 0x8761;
		const long GL_PRESERVE_ATI = 0x8762;
		const long GL_DISCARD_ATI = 0x8763;
		const long GL_OBJECT_BUFFER_SIZE_ATI = 0x8764;
		const long GL_OBJECT_BUFFER_USAGE_ATI = 0x8765;
		const long GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766;
		const long GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767;



		const long GL_VERTEX_SHADER_EXT = 0x8780;
		const long GL_VERTEX_SHADER_BINDING_EXT = 0x8781;
		const long GL_OP_INDEX_EXT = 0x8782;
		const long GL_OP_NEGATE_EXT = 0x8783;
		const long GL_OP_DOT3_EXT = 0x8784;
		const long GL_OP_DOT4_EXT = 0x8785;
		const long GL_OP_MUL_EXT = 0x8786;
		const long GL_OP_ADD_EXT = 0x8787;
		const long GL_OP_MADD_EXT = 0x8788;
		const long GL_OP_FRAC_EXT = 0x8789;
		const long GL_OP_MAX_EXT = 0x878A;
		const long GL_OP_MIN_EXT = 0x878B;
		const long GL_OP_SET_GE_EXT = 0x878C;
		const long GL_OP_SET_LT_EXT = 0x878D;
		const long GL_OP_CLAMP_EXT = 0x878E;
		const long GL_OP_FLOOR_EXT = 0x878F;
		const long GL_OP_ROUND_EXT = 0x8790;
		const long GL_OP_EXP_BASE_2_EXT = 0x8791;
		const long GL_OP_LOG_BASE_2_EXT = 0x8792;
		const long GL_OP_POWER_EXT = 0x8793;
		const long GL_OP_RECIP_EXT = 0x8794;
		const long GL_OP_RECIP_SQRT_EXT = 0x8795;
		const long GL_OP_SUB_EXT = 0x8796;
		const long GL_OP_CROSS_PRODUCT_EXT = 0x8797;
		const long GL_OP_MULTIPLY_MATRIX_EXT = 0x8798;
		const long GL_OP_MOV_EXT = 0x8799;
		const long GL_OUTPUT_VERTEX_EXT = 0x879A;
		const long GL_OUTPUT_COLOR0_EXT = 0x879B;
		const long GL_OUTPUT_COLOR1_EXT = 0x879C;
		const long GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D;
		const long GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E;
		const long GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F;
		const long GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0;
		const long GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1;
		const long GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2;
		const long GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3;
		const long GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4;
		const long GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5;
		const long GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6;
		const long GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7;
		const long GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8;
		const long GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9;
		const long GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA;
		const long GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB;
		const long GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC;
		const long GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD;
		const long GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE;
		const long GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF;
		const long GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0;
		const long GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1;
		const long GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2;
		const long GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3;
		const long GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4;
		const long GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5;
		const long GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6;
		const long GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7;
		const long GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8;
		const long GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9;
		const long GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA;
		const long GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB;
		const long GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC;
		const long GL_OUTPUT_FOG_EXT = 0x87BD;
		const long GL_SCALAR_EXT = 0x87BE;
		const long GL_VECTOR_EXT = 0x87BF;
		const long GL_MATRIX_EXT = 0x87C0;
		const long GL_VARIANT_EXT = 0x87C1;
		const long GL_INVARIANT_EXT = 0x87C2;
		const long GL_LOCAL_CONSTANT_EXT = 0x87C3;
		const long GL_LOCAL_EXT = 0x87C4;
		const long GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5;
		const long GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6;
		const long GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7;
		const long GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8;
		const long GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9;
		const long GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA;
		const long GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB;
		const long GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC;
		const long GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD;
		const long GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE;
		const long GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF;
		const long GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0;
		const long GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1;
		const long GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2;
		const long GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3;
		const long GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4;
		const long GL_X_EXT = 0x87D5;
		const long GL_Y_EXT = 0x87D6;
		const long GL_Z_EXT = 0x87D7;
		const long GL_W_EXT = 0x87D8;
		const long GL_NEGATIVE_X_EXT = 0x87D9;
		const long GL_NEGATIVE_Y_EXT = 0x87DA;
		const long GL_NEGATIVE_Z_EXT = 0x87DB;
		const long GL_NEGATIVE_W_EXT = 0x87DC;
		const long GL_ZERO_EXT = 0x87DD;
		const long GL_ONE_EXT = 0x87DE;
		const long GL_NEGATIVE_ONE_EXT = 0x87DF;
		const long GL_NORMALIZED_RANGE_EXT = 0x87E0;
		const long GL_FULL_RANGE_EXT = 0x87E1;
		const long GL_CURRENT_VERTEX_EXT = 0x87E2;
		const long GL_MVP_MATRIX_EXT = 0x87E3;
		const long GL_VARIANT_VALUE_EXT = 0x87E4;
		const long GL_VARIANT_DATATYPE_EXT = 0x87E5;
		const long GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6;
		const long GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7;
		const long GL_VARIANT_ARRAY_EXT = 0x87E8;
		const long GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9;
		const long GL_INVARIANT_VALUE_EXT = 0x87EA;
		const long GL_INVARIANT_DATATYPE_EXT = 0x87EB;
		const long GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC;
		const long GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED;



		const long GL_MAX_VERTEX_STREAMS_ATI = 0x876B;
		const long GL_VERTEX_STREAM0_ATI = 0x876C;
		const long GL_VERTEX_STREAM1_ATI = 0x876D;
		const long GL_VERTEX_STREAM2_ATI = 0x876E;
		const long GL_VERTEX_STREAM3_ATI = 0x876F;
		const long GL_VERTEX_STREAM4_ATI = 0x8770;
		const long GL_VERTEX_STREAM5_ATI = 0x8771;
		const long GL_VERTEX_STREAM6_ATI = 0x8772;
		const long GL_VERTEX_STREAM7_ATI = 0x8773;
		const long GL_VERTEX_SOURCE_ATI = 0x8774;



		const long GL_ELEMENT_ARRAY_ATI = 0x8768;
		const long GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769;
		const long GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A;



		const long GL_QUAD_MESH_SUN = 0x8614;
		const long GL_TRIANGLE_MESH_SUN = 0x8615;



		const long GL_SLICE_ACCUM_SUN = 0x85CC;



		const long GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534;



		const long GL_DEPTH_CLAMP_NV = 0x864F;



		const long GL_PIXEL_COUNTER_BITS_NV = 0x8864;
		const long GL_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865;
		const long GL_PIXEL_COUNT_NV = 0x8866;
		const long GL_PIXEL_COUNT_AVAILABLE_NV = 0x8867;



		const long GL_POINT_SPRITE_NV = 0x8861;
		const long GL_COORD_REPLACE_NV = 0x8862;
		const long GL_POINT_SPRITE_R_MODE_NV = 0x8863;



		const long GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850;
		const long GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851;
		const long GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852;
		const long GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853;
		const long GL_OFFSET_HILO_TEXTURE_2D_NV = 0x8854;
		const long GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855;
		const long GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856;
		const long GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857;
		const long GL_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858;
		const long GL_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859;
		const long GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A;
		const long GL_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B;
		const long GL_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C;
		const long GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D;
		const long GL_HILO8_NV = 0x885E;
		const long GL_SIGNED_HILO8_NV = 0x885F;
		const long GL_FORCE_BLUE_TO_ONE_NV = 0x8860;









		const long GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910;
		const long GL_ACTIVE_STENCIL_FACE_EXT = 0x8911;



		const long GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200;



		const long GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2;



		const long GL_ELEMENT_ARRAY_APPLE = 0x8768;
		const long GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8769;
		const long GL_ELEMENT_ARRAY_POINTER_APPLE = 0x876A;



		const long GL_DRAW_PIXELS_APPLE = 0x8A0A;
		const long GL_FENCE_APPLE = 0x8A0B;



		const long GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5;



		const long GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D;
		const long GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E;
		const long GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F;
		const long GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521;
		const long GL_STORAGE_CACHED_APPLE = 0x85BE;
		const long GL_STORAGE_SHARED_APPLE = 0x85BF;



		const long GL_YCBCR_422_APPLE = 0x85B9;
		const long GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA;
		const long GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB;



		const long GL_RGB_S3TC = 0x83A0;
		const long GL_RGB4_S3TC = 0x83A1;
		const long GL_RGBA_S3TC = 0x83A2;
		const long GL_RGBA4_S3TC = 0x83A3;



		const long GL_MAX_DRAW_BUFFERS_ATI = 0x8824;
		const long GL_DRAW_BUFFER0_ATI = 0x8825;
		const long GL_DRAW_BUFFER1_ATI = 0x8826;
		const long GL_DRAW_BUFFER2_ATI = 0x8827;
		const long GL_DRAW_BUFFER3_ATI = 0x8828;
		const long GL_DRAW_BUFFER4_ATI = 0x8829;
		const long GL_DRAW_BUFFER5_ATI = 0x882A;
		const long GL_DRAW_BUFFER6_ATI = 0x882B;
		const long GL_DRAW_BUFFER7_ATI = 0x882C;
		const long GL_DRAW_BUFFER8_ATI = 0x882D;
		const long GL_DRAW_BUFFER9_ATI = 0x882E;
		const long GL_DRAW_BUFFER10_ATI = 0x882F;
		const long GL_DRAW_BUFFER11_ATI = 0x8830;
		const long GL_DRAW_BUFFER12_ATI = 0x8831;
		const long GL_DRAW_BUFFER13_ATI = 0x8832;
		const long GL_DRAW_BUFFER14_ATI = 0x8833;
		const long GL_DRAW_BUFFER15_ATI = 0x8834;



		const long GL_TYPE_RGBA_FLOAT_ATI = 0x8820;
		const long GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835;



		const long GL_MODULATE_ADD_ATI = 0x8744;
		const long GL_MODULATE_SIGNED_ADD_ATI = 0x8745;
		const long GL_MODULATE_SUBTRACT_ATI = 0x8746;



		const long GL_RGBA_FLOAT32_ATI = 0x8814;
		const long GL_RGB_FLOAT32_ATI = 0x8815;
		const long GL_ALPHA_FLOAT32_ATI = 0x8816;
		const long GL_INTENSITY_FLOAT32_ATI = 0x8817;
		const long GL_LUMINANCE_FLOAT32_ATI = 0x8818;
		const long GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819;
		const long GL_RGBA_FLOAT16_ATI = 0x881A;
		const long GL_RGB_FLOAT16_ATI = 0x881B;
		const long GL_ALPHA_FLOAT16_ATI = 0x881C;
		const long GL_INTENSITY_FLOAT16_ATI = 0x881D;
		const long GL_LUMINANCE_FLOAT16_ATI = 0x881E;
		const long GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F;



		const long GL_FLOAT_R_NV = 0x8880;
		const long GL_FLOAT_RG_NV = 0x8881;
		const long GL_FLOAT_RGB_NV = 0x8882;
		const long GL_FLOAT_RGBA_NV = 0x8883;
		const long GL_FLOAT_R16_NV = 0x8884;
		const long GL_FLOAT_R32_NV = 0x8885;
		const long GL_FLOAT_RG16_NV = 0x8886;
		const long GL_FLOAT_RG32_NV = 0x8887;
		const long GL_FLOAT_RGB16_NV = 0x8888;
		const long GL_FLOAT_RGB32_NV = 0x8889;
		const long GL_FLOAT_RGBA16_NV = 0x888A;
		const long GL_FLOAT_RGBA32_NV = 0x888B;
		const long GL_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C;
		const long GL_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D;
		const long GL_FLOAT_RGBA_MODE_NV = 0x888E;



		const long GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868;
		const long GL_FRAGMENT_PROGRAM_NV = 0x8870;
		const long GL_MAX_TEXTURE_COORDS_NV = 0x8871;
		const long GL_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872;
		const long GL_FRAGMENT_PROGRAM_BINDING_NV = 0x8873;
		const long GL_PROGRAM_ERROR_STRING_NV = 0x8874;



		const long GL_HALF_FLOAT_NV = 0x140B;



		const long GL_WRITE_PIXEL_DATA_RANGE_NV = 0x8878;
		const long GL_READ_PIXEL_DATA_RANGE_NV = 0x8879;
		const long GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A;
		const long GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B;
		const long GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C;
		const long GL_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D;



		const long GL_PRIMITIVE_RESTART_NV = 0x8558;
		const long GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559;



		const long GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F;









		const long GL_STENCIL_BACK_FUNC_ATI = 0x8800;
		const long GL_STENCIL_BACK_FAIL_ATI = 0x8801;
		const long GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802;
		const long GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803;






		const long GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A;
		const long GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B;



		const long GL_DEPTH_BOUNDS_TEST_EXT = 0x8890;
		const long GL_DEPTH_BOUNDS_EXT = 0x8891;



		const long GL_MIRROR_CLAMP_EXT = 0x8742;
		const long GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743;
		const long GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912;



		const long GL_BLEND_EQUATION_RGB_EXT = 0x8009;
		const long GL_BLEND_EQUATION_ALPHA_EXT = 0x883D;



		const long GL_PACK_INVERT_MESA = 0x8758;



		const long GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA;
		const long GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB;
		const long GL_YCBCR_MESA = 0x8757;



		const long GL_PIXEL_PACK_BUFFER_EXT = 0x88EB;
		const long GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC;
		const long GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED;
		const long GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF;






		const long GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4;
		const long GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5;
		const long GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6;
		const long GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7;
		const long GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8;



		/* reuse GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV */
		/* reuse GL_MAX_PROGRAM_CALL_DEPTH_NV */



		/* reuse GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB */



		const long GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506;
		const long GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8;
		const long GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6;
		const long GL_RENDERBUFFER_BINDING_EXT = 0x8CA7;
		const long GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0;
		const long GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1;
		const long GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2;
		const long GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3;
		const long GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4;
		const long GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5;
		const long GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6;
		const long GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7;
		const long GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT = 0x8CD8;
		const long GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9;
		const long GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA;
		const long GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB;
		const long GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC;
		const long GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD;
		const long GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF;
		const long GL_COLOR_ATTACHMENT0_EXT = 0x8CE0;
		const long GL_COLOR_ATTACHMENT1_EXT = 0x8CE1;
		const long GL_COLOR_ATTACHMENT2_EXT = 0x8CE2;
		const long GL_COLOR_ATTACHMENT3_EXT = 0x8CE3;
		const long GL_COLOR_ATTACHMENT4_EXT = 0x8CE4;
		const long GL_COLOR_ATTACHMENT5_EXT = 0x8CE5;
		const long GL_COLOR_ATTACHMENT6_EXT = 0x8CE6;
		const long GL_COLOR_ATTACHMENT7_EXT = 0x8CE7;
		const long GL_COLOR_ATTACHMENT8_EXT = 0x8CE8;
		const long GL_COLOR_ATTACHMENT9_EXT = 0x8CE9;
		const long GL_COLOR_ATTACHMENT10_EXT = 0x8CEA;
		const long GL_COLOR_ATTACHMENT11_EXT = 0x8CEB;
		const long GL_COLOR_ATTACHMENT12_EXT = 0x8CEC;
		const long GL_COLOR_ATTACHMENT13_EXT = 0x8CED;
		const long GL_COLOR_ATTACHMENT14_EXT = 0x8CEE;
		const long GL_COLOR_ATTACHMENT15_EXT = 0x8CEF;
		const long GL_DEPTH_ATTACHMENT_EXT = 0x8D00;
		const long GL_STENCIL_ATTACHMENT_EXT = 0x8D20;
		const long GL_FRAMEBUFFER_EXT = 0x8D40;
		const long GL_RENDERBUFFER_EXT = 0x8D41;
		const long GL_RENDERBUFFER_WIDTH_EXT = 0x8D42;
		const long GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43;
		const long GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44;
		const long GL_STENCIL_INDEX1_EXT = 0x8D46;
		const long GL_STENCIL_INDEX4_EXT = 0x8D47;
		const long GL_STENCIL_INDEX8_EXT = 0x8D48;
		const long GL_STENCIL_INDEX16_EXT = 0x8D49;
		const long GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50;
		const long GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51;
		const long GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52;
		const long GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53;
		const long GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54;
		const long GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55;

		/*************************************************************/

		const long WGL_WGLEXT_VERSION = 6;
		const long WGL_FRONT_COLOR_BUFFER_BIT_ARB = 0x00000001;
		const long WGL_BACK_COLOR_BUFFER_BIT_ARB = 0x00000002;
		const long WGL_DEPTH_BUFFER_BIT_ARB = 0x00000004;
		const long WGL_STENCIL_BUFFER_BIT_ARB = 0x00000008;
		const long WGL_SAMPLE_BUFFERS_ARB = 0x2041;
		const long WGL_SAMPLES_ARB = 0x2042;
		const long WGL_NUMBER_PIXEL_FORMATS_ARB = 0x2000;
		const long WGL_DRAW_TO_WINDOW_ARB = 0x2001;
		const long WGL_DRAW_TO_BITMAP_ARB = 0x2002;
		const long WGL_ACCELERATION_ARB = 0x2003;
		const long WGL_NEED_PALETTE_ARB = 0x2004;
		const long WGL_NEED_SYSTEM_PALETTE_ARB = 0x2005;
		const long WGL_SWAP_LAYER_BUFFERS_ARB = 0x2006;
		const long WGL_SWAP_METHOD_ARB = 0x2007;
		const long WGL_NUMBER_OVERLAYS_ARB = 0x2008;
		const long WGL_NUMBER_UNDERLAYS_ARB = 0x2009;
		const long WGL_TRANSPARENT_ARB = 0x200A;
		const long WGL_TRANSPARENT_RED_VALUE_ARB = 0x2037;
		const long WGL_TRANSPARENT_GREEN_VALUE_ARB = 0x2038;
		const long WGL_TRANSPARENT_BLUE_VALUE_ARB = 0x2039;
		const long WGL_TRANSPARENT_ALPHA_VALUE_ARB = 0x203A;
		const long WGL_TRANSPARENT_INDEX_VALUE_ARB = 0x203B;
		const long WGL_SHARE_DEPTH_ARB = 0x200C;
		const long WGL_SHARE_STENCIL_ARB = 0x200D;
		const long WGL_SHARE_ACCUM_ARB = 0x200E;
		const long WGL_SUPPORT_GDI_ARB = 0x200F;
		const long WGL_SUPPORT_OPENGL_ARB = 0x2010;
		const long WGL_DOUBLE_BUFFER_ARB = 0x2011;
		const long WGL_STEREO_ARB = 0x2012;
		const long WGL_PIXEL_TYPE_ARB = 0x2013;
		const long WGL_COLOR_BITS_ARB = 0x2014;
		const long WGL_RED_BITS_ARB = 0x2015;
		const long WGL_RED_SHIFT_ARB = 0x2016;
		const long WGL_GREEN_BITS_ARB = 0x2017;
		const long WGL_GREEN_SHIFT_ARB = 0x2018;
		const long WGL_BLUE_BITS_ARB = 0x2019;
		const long WGL_BLUE_SHIFT_ARB = 0x201A;
		const long WGL_ALPHA_BITS_ARB = 0x201B;
		const long WGL_ALPHA_SHIFT_ARB = 0x201C;
		const long WGL_ACCUM_BITS_ARB = 0x201D;
		const long WGL_ACCUM_RED_BITS_ARB = 0x201E;
		const long WGL_ACCUM_GREEN_BITS_ARB = 0x201F;
		const long WGL_ACCUM_BLUE_BITS_ARB = 0x2020;
		const long WGL_ACCUM_ALPHA_BITS_ARB = 0x2021;
		const long WGL_DEPTH_BITS_ARB = 0x2022;
		const long WGL_STENCIL_BITS_ARB = 0x2023;
		const long WGL_AUX_BUFFERS_ARB = 0x2024;
		const long WGL_NO_ACCELERATION_ARB = 0x2025;
		const long WGL_GENERIC_ACCELERATION_ARB = 0x2026;
		const long WGL_FULL_ACCELERATION_ARB = 0x2027;
		const long WGL_SWAP_EXCHANGE_ARB = 0x2028;
		const long WGL_SWAP_COPY_ARB = 0x2029;
		const long WGL_SWAP_UNDEFINED_ARB = 0x202A;
		const long WGL_TYPE_RGBA_ARB = 0x202B;
		const long WGL_TYPE_COLORINDEX_ARB = 0x202C;

		const long ERROR_INVALID_PIXEL_TYPE_ARB = 0x2043;
		const long ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = 0x2054;

		const long WGL_DRAW_TO_PBUFFER_ARB = 0x202D;
		const long WGL_MAX_PBUFFER_PIXELS_ARB = 0x202E;
		const long WGL_MAX_PBUFFER_WIDTH_ARB = 0x202F;
		const long WGL_MAX_PBUFFER_HEIGHT_ARB = 0x2030;
		const long WGL_PBUFFER_LARGEST_ARB = 0x2033;
		const long WGL_PBUFFER_WIDTH_ARB = 0x2034;
		const long WGL_PBUFFER_HEIGHT_ARB = 0x2035;
		const long WGL_PBUFFER_LOST_ARB = 0x2036;
		const long WGL_BIND_TO_TEXTURE_RGB_ARB = 0x2070;
		const long WGL_BIND_TO_TEXTURE_RGBA_ARB = 0x2071;
		const long WGL_TEXTURE_FORMAT_ARB = 0x2072;
		const long WGL_TEXTURE_TARGET_ARB = 0x2073;
		const long WGL_MIPMAP_TEXTURE_ARB = 0x2074;
		const long WGL_TEXTURE_RGB_ARB = 0x2075;
		const long WGL_TEXTURE_RGBA_ARB = 0x2076;
		const long WGL_NO_TEXTURE_ARB = 0x2077;
		const long WGL_TEXTURE_CUBE_MAP_ARB = 0x2078;
		const long WGL_TEXTURE_1D_ARB = 0x2079;
		const long WGL_TEXTURE_2D_ARB = 0x207A;
		const long WGL_MIPMAP_LEVEL_ARB = 0x207B;
		const long WGL_CUBE_MAP_FACE_ARB = 0x207C;
		const long WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x207D;
		const long WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x207E;
		const long WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x207F;
		const long WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x2080;
		const long WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x2081;
		const long WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x2082;
		const long WGL_FRONT_LEFT_ARB = 0x2083;
		const long WGL_FRONT_RIGHT_ARB = 0x2084;
		const long WGL_BACK_LEFT_ARB = 0x2085;
		const long WGL_BACK_RIGHT_ARB = 0x2086;
		const long WGL_AUX0_ARB = 0x2087;
		const long WGL_AUX1_ARB = 0x2088;
		const long WGL_AUX2_ARB = 0x2089;
		const long WGL_AUX3_ARB = 0x208A;
		const long WGL_AUX4_ARB = 0x208B;
		const long WGL_AUX5_ARB = 0x208C;
		const long WGL_AUX6_ARB = 0x208D;
		const long WGL_AUX7_ARB = 0x208E;
		const long WGL_AUX8_ARB = 0x208F;
		const long WGL_AUX9_ARB = 0x2090;
		const long WGL_TYPE_RGBA_FLOAT_ARB = 0x21A0;



		const long ERROR_INVALID_PIXEL_TYPE_EXT = 0x2043;



		const long WGL_NUMBER_PIXEL_FORMATS_EXT = 0x2000;
		const long WGL_DRAW_TO_WINDOW_EXT = 0x2001;
		const long WGL_DRAW_TO_BITMAP_EXT = 0x2002;
		const long WGL_ACCELERATION_EXT = 0x2003;
		const long WGL_NEED_PALETTE_EXT = 0x2004;
		const long WGL_NEED_SYSTEM_PALETTE_EXT = 0x2005;
		const long WGL_SWAP_LAYER_BUFFERS_EXT = 0x2006;
		const long WGL_SWAP_METHOD_EXT = 0x2007;
		const long WGL_NUMBER_OVERLAYS_EXT = 0x2008;
		const long WGL_NUMBER_UNDERLAYS_EXT = 0x2009;
		const long WGL_TRANSPARENT_EXT = 0x200A;
		const long WGL_TRANSPARENT_VALUE_EXT = 0x200B;
		const long WGL_SHARE_DEPTH_EXT = 0x200C;
		const long WGL_SHARE_STENCIL_EXT = 0x200D;
		const long WGL_SHARE_ACCUM_EXT = 0x200E;
		const long WGL_SUPPORT_GDI_EXT = 0x200F;
		const long WGL_SUPPORT_OPENGL_EXT = 0x2010;
		const long WGL_DOUBLE_BUFFER_EXT = 0x2011;
		const long WGL_STEREO_EXT = 0x2012;
		const long WGL_PIXEL_TYPE_EXT = 0x2013;
		const long WGL_COLOR_BITS_EXT = 0x2014;
		const long WGL_RED_BITS_EXT = 0x2015;
		const long WGL_RED_SHIFT_EXT = 0x2016;
		const long WGL_GREEN_BITS_EXT = 0x2017;
		const long WGL_GREEN_SHIFT_EXT = 0x2018;
		const long WGL_BLUE_BITS_EXT = 0x2019;
		const long WGL_BLUE_SHIFT_EXT = 0x201A;
		const long WGL_ALPHA_BITS_EXT = 0x201B;
		const long WGL_ALPHA_SHIFT_EXT = 0x201C;
		const long WGL_ACCUM_BITS_EXT = 0x201D;
		const long WGL_ACCUM_RED_BITS_EXT = 0x201E;
		const long WGL_ACCUM_GREEN_BITS_EXT = 0x201F;
		const long WGL_ACCUM_BLUE_BITS_EXT = 0x2020;
		const long WGL_ACCUM_ALPHA_BITS_EXT = 0x2021;
		const long WGL_DEPTH_BITS_EXT = 0x2022;
		const long WGL_STENCIL_BITS_EXT = 0x2023;
		const long WGL_AUX_BUFFERS_EXT = 0x2024;
		const long WGL_NO_ACCELERATION_EXT = 0x2025;
		const long WGL_GENERIC_ACCELERATION_EXT = 0x2026;
		const long WGL_FULL_ACCELERATION_EXT = 0x2027;
		const long WGL_SWAP_EXCHANGE_EXT = 0x2028;
		const long WGL_SWAP_COPY_EXT = 0x2029;
		const long WGL_SWAP_UNDEFINED_EXT = 0x202A;
		const long WGL_TYPE_RGBA_EXT = 0x202B;
		const long WGL_TYPE_COLORINDEX_EXT = 0x202C;
		const long WGL_DRAW_TO_PBUFFER_EXT = 0x202D;
		const long WGL_MAX_PBUFFER_PIXELS_EXT = 0x202E;
		const long WGL_MAX_PBUFFER_WIDTH_EXT = 0x202F;
		const long WGL_MAX_PBUFFER_HEIGHT_EXT = 0x2030;
		const long WGL_OPTIMAL_PBUFFER_WIDTH_EXT = 0x2031;
		const long WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = 0x2032;
		const long WGL_PBUFFER_LARGEST_EXT = 0x2033;
		const long WGL_PBUFFER_WIDTH_EXT = 0x2034;
		const long WGL_PBUFFER_HEIGHT_EXT = 0x2035;
		const long WGL_DEPTH_FLOAT_EXT = 0x2040;
		const long WGL_SAMPLE_BUFFERS_3DFX = 0x2060;
		const long WGL_SAMPLES_3DFX = 0x2061;
		const long WGL_SAMPLE_BUFFERS_EXT = 0x2041;
		const long WGL_SAMPLES_EXT = 0x2042;
		const long WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = 0x2050;
		const long WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = 0x2051;
		const long WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = 0x2052;
		const long WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = 0x2053;
		const long WGL_GAMMA_TABLE_SIZE_I3D = 0x204E;
		const long WGL_GAMMA_EXCLUDE_DESKTOP_I3D = 0x204F;
		const long WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = 0x2044;
		const long WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D = 0x2045;
		const long WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D = 0x2046;
		const long WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D = 0x2047;
		const long WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = 0x2048;
		const long WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = 0x2049;
		const long WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = 0x204A;
		const long WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = 0x204B;
		const long WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = 0x204C;
		const long WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = 0x00000001;
		const long WGL_IMAGE_BUFFER_LOCK_I3D = 0x00000002;
		const long WGL_BIND_TO_TEXTURE_DEPTH_NV = 0x20A3;
		const long WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = 0x20A4;
		const long WGL_DEPTH_TEXTURE_FORMAT_NV = 0x20A5;
		const long WGL_TEXTURE_DEPTH_COMPONENT_NV = 0x20A6;
		const long WGL_DEPTH_COMPONENT_NV = 0x20A7;
		const long WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = 0x20A0;
		const long WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = 0x20A1;
		const long WGL_TEXTURE_RECTANGLE_NV = 0x20A2;
		const long WGL_TYPE_RGBA_FLOAT_ATI = 0x21A0;
		const long WGL_FLOAT_COMPONENTS_NV = 0x20B0;
		const long WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = 0x20B1;
		const long WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = 0x20B2;
		const long WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = 0x20B3;
		const long WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = 0x20B4;
		const long WGL_TEXTURE_FLOAT_R_NV = 0x20B5;
		const long WGL_TEXTURE_FLOAT_RG_NV = 0x20B6;
		const long WGL_TEXTURE_FLOAT_RGB_NV = 0x20B7;
		const long WGL_TEXTURE_FLOAT_RGBA_NV = 0x20B8;

		const long GLX_GLXEXT_VERSION = 11;
		const long GLX_WINDOW_BIT = 0x00000001;
		const long GLX_PIXMAP_BIT = 0x00000002;
		const long GLX_PBUFFER_BIT = 0x00000004;
		const long GLX_RGBA_BIT = 0x00000001;
		const long GLX_COLOR_INDEX_BIT = 0x00000002;
		const long GLX_PBUFFER_CLOBBER_MASK = 0x08000000;
		const long GLX_FRONT_LEFT_BUFFER_BIT = 0x00000001;
		const long GLX_FRONT_RIGHT_BUFFER_BIT = 0x00000002;
		const long GLX_BACK_LEFT_BUFFER_BIT = 0x00000004;
		const long GLX_BACK_RIGHT_BUFFER_BIT = 0x00000008;
		const long GLX_AUX_BUFFERS_BIT = 0x00000010;
		const long GLX_DEPTH_BUFFER_BIT = 0x00000020;
		const long GLX_STENCIL_BUFFER_BIT = 0x00000040;
		const long GLX_ACCUM_BUFFER_BIT = 0x00000080;
		const long GLX_CONFIG_CAVEAT = 0x20;
		const long GLX_X_VISUAL_TYPE = 0x22;
		const long GLX_TRANSPARENT_TYPE = 0x23;
		const long GLX_TRANSPARENT_INDEX_VALUE = 0x24;
		const long GLX_TRANSPARENT_RED_VALUE = 0x25;
		const long GLX_TRANSPARENT_GREEN_VALUE = 0x26;
		const long GLX_TRANSPARENT_BLUE_VALUE = 0x27;
		const long GLX_TRANSPARENT_ALPHA_VALUE = 0x28;
		const long GLX_DONT_CARE = 0xFFFFFFFF;
		const long GLX_NONE = 0x8000;
		const long GLX_SLOW_CONFIG = 0x8001;
		const long GLX_TRUE_COLOR = 0x8002;
		const long GLX_DIRECT_COLOR = 0x8003;
		const long GLX_PSEUDO_COLOR = 0x8004;
		const long GLX_STATIC_COLOR = 0x8005;
		const long GLX_GRAY_SCALE = 0x8006;
		const long GLX_STATIC_GRAY = 0x8007;
		const long GLX_TRANSPARENT_RGB = 0x8008;
		const long GLX_TRANSPARENT_INDEX = 0x8009;
		const long GLX_VISUAL_ID = 0x800B;
		const long GLX_SCREEN = 0x800C;
		const long GLX_NON_CONFORMANT_CONFIG = 0x800D;
		const long GLX_DRAWABLE_TYPE = 0x8010;
		const long GLX_RENDER_TYPE = 0x8011;
		const long GLX_X_RENDERABLE = 0x8012;
		const long GLX_FBCONFIG_ID = 0x8013;
		const long GLX_RGBA_TYPE = 0x8014;
		const long GLX_COLOR_INDEX_TYPE = 0x8015;
		const long GLX_MAX_PBUFFER_WIDTH = 0x8016;
		const long GLX_MAX_PBUFFER_HEIGHT = 0x8017;
		const long GLX_MAX_PBUFFER_PIXELS = 0x8018;
		const long GLX_PRESERVED_CONTENTS = 0x801B;
		const long GLX_LARGEST_PBUFFER = 0x801C;
		const long GLX_WIDTH = 0x801D;
		const long GLX_HEIGHT = 0x801E;
		const long GLX_EVENT_MASK = 0x801F;
		const long GLX_DAMAGED = 0x8020;
		const long GLX_SAVED = 0x8021;
		const long GLX_WINDOW = 0x8022;
		const long GLX_PBUFFER = 0x8023;
		const long GLX_PBUFFER_HEIGHT = 0x8040;
		const long GLX_PBUFFER_WIDTH = 0x8041;



		const long GLX_SAMPLE_BUFFERS = 100000;
		const long GLX_SAMPLES = 100001;






		const long GLX_SAMPLE_BUFFERS_ARB = 100000;
		const long GLX_SAMPLES_ARB = 100001;



		const long GLX_RGBA_FLOAT_TYPE_ARB = 0x20B9;
		const long GLX_RGBA_FLOAT_BIT_ARB = 0x00000004;



		const long GLX_SAMPLE_BUFFERS_SGIS = 100000;
		const long GLX_SAMPLES_SGIS = 100001;



		const long GLX_X_VISUAL_TYPE_EXT = 0x22;
		const long GLX_TRANSPARENT_TYPE_EXT = 0x23;
		const long GLX_TRANSPARENT_INDEX_VALUE_EXT = 0x24;
		const long GLX_TRANSPARENT_RED_VALUE_EXT = 0x25;
		const long GLX_TRANSPARENT_GREEN_VALUE_EXT = 0x26;
		const long GLX_TRANSPARENT_BLUE_VALUE_EXT = 0x27;
		const long GLX_TRANSPARENT_ALPHA_VALUE_EXT = 0x28;
		const long GLX_NONE_EXT = 0x8000;
		const long GLX_TRUE_COLOR_EXT = 0x8002;
		const long GLX_DIRECT_COLOR_EXT = 0x8003;
		const long GLX_PSEUDO_COLOR_EXT = 0x8004;
		const long GLX_STATIC_COLOR_EXT = 0x8005;
		const long GLX_GRAY_SCALE_EXT = 0x8006;
		const long GLX_STATIC_GRAY_EXT = 0x8007;
		const long GLX_TRANSPARENT_RGB_EXT = 0x8008;
		const long GLX_TRANSPARENT_INDEX_EXT = 0x8009;















		const long GLX_VISUAL_CAVEAT_EXT = 0x20;
		const long GLX_SLOW_VISUAL_EXT = 0x8001;
		const long GLX_NON_CONFORMANT_VISUAL_EXT = 0x800D;
		/* reuse GLX_NONE_EXT */



		const long GLX_SHARE_CONTEXT_EXT = 0x800A;
		const long GLX_VISUAL_ID_EXT = 0x800B;
		const long GLX_SCREEN_EXT = 0x800C;



		const long GLX_WINDOW_BIT_SGIX = 0x00000001;
		const long GLX_PIXMAP_BIT_SGIX = 0x00000002;
		const long GLX_RGBA_BIT_SGIX = 0x00000001;
		const long GLX_COLOR_INDEX_BIT_SGIX = 0x00000002;
		const long GLX_DRAWABLE_TYPE_SGIX = 0x8010;
		const long GLX_RENDER_TYPE_SGIX = 0x8011;
		const long GLX_X_RENDERABLE_SGIX = 0x8012;
		const long GLX_FBCONFIG_ID_SGIX = 0x8013;
		const long GLX_RGBA_TYPE_SGIX = 0x8014;
		const long GLX_COLOR_INDEX_TYPE_SGIX = 0x8015;
		/* reuse GLX_SCREEN_EXT */



		const long GLX_PBUFFER_BIT_SGIX = 0x00000004;
		const long GLX_BUFFER_CLOBBER_MASK_SGIX = 0x08000000;
		const long GLX_FRONT_LEFT_BUFFER_BIT_SGIX = 0x00000001;
		const long GLX_FRONT_RIGHT_BUFFER_BIT_SGIX = 0x00000002;
		const long GLX_BACK_LEFT_BUFFER_BIT_SGIX = 0x00000004;
		const long GLX_BACK_RIGHT_BUFFER_BIT_SGIX = 0x00000008;
		const long GLX_AUX_BUFFERS_BIT_SGIX = 0x00000010;
		const long GLX_DEPTH_BUFFER_BIT_SGIX = 0x00000020;
		const long GLX_STENCIL_BUFFER_BIT_SGIX = 0x00000040;
		const long GLX_ACCUM_BUFFER_BIT_SGIX = 0x00000080;
		const long GLX_SAMPLE_BUFFERS_BIT_SGIX = 0x00000100;
		const long GLX_MAX_PBUFFER_WIDTH_SGIX = 0x8016;
		const long GLX_MAX_PBUFFER_HEIGHT_SGIX = 0x8017;
		const long GLX_MAX_PBUFFER_PIXELS_SGIX = 0x8018;
		const long GLX_OPTIMAL_PBUFFER_WIDTH_SGIX = 0x8019;
		const long GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX = 0x801A;
		const long GLX_PRESERVED_CONTENTS_SGIX = 0x801B;
		const long GLX_LARGEST_PBUFFER_SGIX = 0x801C;
		const long GLX_WIDTH_SGIX = 0x801D;
		const long GLX_HEIGHT_SGIX = 0x801E;
		const long GLX_EVENT_MASK_SGIX = 0x801F;
		const long GLX_DAMAGED_SGIX = 0x8020;
		const long GLX_SAVED_SGIX = 0x8021;
		const long GLX_WINDOW_SGIX = 0x8022;
		const long GLX_PBUFFER_SGIX = 0x8023;
		const long GLX_SYNC_FRAME_SGIX = 0x00000000;
		const long GLX_SYNC_SWAP_SGIX = 0x00000001;
		const long GLX_DIGITAL_MEDIA_PBUFFER_SGIX = 0x8024;
		const long GLX_BLENDED_RGBA_SGIS = 0x8025;
		const long GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS = 0x8026;
		const long GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = 0x8027;
		const long GLX_SAMPLE_BUFFERS_3DFX = 0x8050;
		const long GLX_SAMPLES_3DFX = 0x8051;
		const long GLX_3DFX_WINDOW_MODE_MESA = 0x1;
		const long GLX_3DFX_FULLSCREEN_MODE_MESA = 0x2;
		const long GLX_VISUAL_SELECT_GROUP_SGIX = 0x8028;
		const long GLX_SWAP_METHOD_OML = 0x8060;
		const long GLX_SWAP_EXCHANGE_OML = 0x8061;
		const long GLX_SWAP_COPY_OML = 0x8062;
		const long GLX_SWAP_UNDEFINED_OML = 0x8063;
		const long GLX_FLOAT_COMPONENTS_NV = 0x20B0;
		const long GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = 80;
		const long GLX_BAD_HYPERPIPE_CONFIG_SGIX = 91;
		const long GLX_BAD_HYPERPIPE_SGIX = 92;
		const long GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = 0x00000001;
		const long GLX_HYPERPIPE_RENDER_PIPE_SGIX = 0x00000002;
		const long GLX_PIPE_RECT_SGIX = 0x00000001;
		const long GLX_PIPE_RECT_LIMITS_SGIX = 0x00000002;
		const long GLX_HYPERPIPE_STEREO_SGIX = 0x00000003;
		const long GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = 0x00000004;
		const long GLX_HYPERPIPE_ID_SGIX = 0x8030;

	}

	[dllname("glaux.dll")]
	module Glaux
	{

		/*
		** ToolKit Window Types
		** In the future, AUX_RGBA may be a combination of both RGB and ALPHA
		*/

		const long AUX_RGB = 0;
		const long AUX_RGBA = 0;
		const long AUX_INDEX = 1;
		const long AUX_SINGLE = 0;
		const long AUX_DOUBLE = 2;
		const long AUX_DIRECT = 0;
		const long AUX_INDIRECT = 4;

		const long AUX_ACCUM = 8;
		const long AUX_ALPHA = 16;
		const long AUX_DEPTH24 = 32;      /* 24-bit depth buffer */
		const long AUX_STENCIL = 64;
		const long AUX_AUX = 128;
		const long AUX_DEPTH16 = 256;     /* 16-bit depth buffer */
		const long AUX_FIXED_332_PAL = 512;
		const long AUX_DEPTH = 256; /* default is 16-bit depth buffer */

		/* 
		** Window Masks
		*/
		/*
		#define AUX_WIND_IS_RGB(x)      (((x) & AUX_INDEX) == 0)
		#define AUX_WIND_IS_INDEX(x)    (((x) & AUX_INDEX) != 0)
		#define AUX_WIND_IS_SINGLE(x)   (((x) & AUX_DOUBLE) == 0)
		#define AUX_WIND_IS_DOUBLE(x)   (((x) & AUX_DOUBLE) != 0)
		#define AUX_WIND_IS_INDIRECT(x) (((x) & AUX_INDIRECT) != 0)
		#define AUX_WIND_IS_DIRECT(x)   (((x) & AUX_INDIRECT) == 0)
		#define AUX_WIND_HAS_ACCUM(x)   (((x) & AUX_ACCUM) != 0)
		#define AUX_WIND_HAS_ALPHA(x)   (((x) & AUX_ALPHA) != 0)
		#define AUX_WIND_HAS_DEPTH(x)   (((x) & (AUX_DEPTH24 | AUX_DEPTH16)) != 0)
		#define AUX_WIND_HAS_STENCIL(x) (((x) & AUX_STENCIL) != 0)
		#define AUX_WIND_USES_FIXED_332_PAL(x)  (((x) & AUX_FIXED_332_PAL) != 0)
		*/

		/* 
		** ToolKit Event Types
		*/
		const long AUX_EXPOSE = 1;
		const long AUX_CONFIG = 2;
		const long AUX_DRAW = 4;
		const long AUX_KEYEVENT = 8;
		const long AUX_MOUSEDOWN = 16;
		const long AUX_MOUSEUP = 32;
		const long AUX_MOUSELOC = 64;

		/*
		** Toolkit Event Data Indices
		*/
		const long AUX_WINDOWX = 0;
		const long AUX_WINDOWY = 1;
		const long AUX_MOUSEX = 0;
		const long AUX_MOUSEY = 1;
		const long AUX_MOUSESTATUS = 3;
		const long AUX_KEY = 0;
		const long AUX_KEYSTATUS = 1;

		/*
		** ToolKit Event Status Messages
		*/
		const long AUX_LEFTBUTTON = 1;
		const long AUX_RIGHTBUTTON = 2;
		const long AUX_MIDDLEBUTTON = 4;
		const long AUX_SHIFT = 1;
		const long AUX_CONTROL = 2;

		/* 
		** ToolKit Key Codes
		*/
		const long AUX_RETURN = 0x0D;
		const long AUX_ESCAPE = 0x1B;
		const long AUX_SPACE = 0x20;
		const long AUX_LEFT = 0x25;
		const long AUX_UP = 0x26;
		const long AUX_RIGHT = 0x27;
		const long AUX_DOWN = 0x28;
		const char AUX_A = 'A';
		const char AUX_B = 'B';
		const char AUX_C = 'C';
		const char AUX_D = 'D';
		const char AUX_E = 'E';
		const char AUX_F = 'F';
		const char AUX_G = 'G';
		const char AUX_H = 'H';
		const char AUX_I = 'I';
		const char AUX_J = 'J';
		const char AUX_K = 'K';
		const char AUX_L = 'L';
		const char AUX_M = 'M';
		const char AUX_N = 'N';
		const char AUX_O = 'O';
		const char AUX_P = 'P';
		const char AUX_Q = 'Q';
		const char AUX_R = 'R';
		const char AUX_S = 'S';
		const char AUX_T = 'T';
		const char AUX_U = 'U';
		const char AUX_V = 'V';
		const char AUX_W = 'W';
		const char AUX_X = 'X';
		const char AUX_Y = 'Y';
		const char AUX_Z = 'Z';
		const char AUX__a = 'a';
		const char AUX__b = 'b';
		const char AUX__c = 'c';
		const char AUX__d = 'd';
		const char AUX__e = 'e';
		const char AUX__f = 'f';
		const char AUX__g = 'g';
		const char AUX__h = 'h';
		const char AUX__i = 'i';
		const char AUX__j = 'j';
		const char AUX__k = 'k';
		const char AUX__l = 'l';
		const char AUX__m = 'm';
		const char AUX__n = 'n';
		const char AUX__o = 'o';
		const char AUX__p = 'p';
		const char AUX__q = 'q';
		const char AUX__r = 'r';
		const char AUX__s = 's';
		const char AUX__t = 't';
		const char AUX__u = 'u';
		const char AUX__v = 'v';
		const char AUX__w = 'w';
		const char AUX__x = 'x';
		const char AUX__y = 'y';
		const char AUX__z = 'z';
		const char AUX_0 = '0';
		const char AUX_1 = '1';
		const char AUX_2 = '2';
		const char AUX_3 = '3';
		const char AUX_4 = '4';
		const char AUX_5 = '5';
		const char AUX_6 = '6';
		const char AUX_7 = '7';
		const char AUX_8 = '8';
		const char AUX_9 = '9';

		/*
		** ToolKit Gets and Sets
		*/
		const long AUX_FD = 1;  /* return fd (long) */
		const long AUX_COLORMAP = 3;  /* pass buf of r, g and b (unsigned char) */
		const long AUX_GREYSCALEMAP = 4;
		const long AUX_FOGMAP = 5;  /* pass fog and color bits (long) */
		const long AUX_ONECOLOR = 6;  /* pass index, r, g, and b (long) */

		/*
		** Color Macros
		*/

		const long AUX_BLACK = 0;
		const long AUX_RED = 13;
		const long AUX_GREEN = 14;
		const long AUX_YELLOW = 15;
		const long AUX_BLUE = 16;
		const long AUX_MAGENTA = 17;
		const long AUX_CYAN = 18;
		const long AUX_WHITE = 19;

		// extern float auxRGBMap[20][3];

		/*#define AUX_SETCOLOR(x, y) (AUX_WIND_IS_RGB((x)) ? \
								   glColor3fv(auxRGBMap[(y)]) : glIndexf((y)))

		/*
		** Prototypes
		*/

		[entry("auxInitDisplayMode")] void auxInitDisplayMode(GLenum);
		[entry("auxInitPosition")] void auxInitPosition(int, int, int, int);

		/*[entry("auxInitWindow")] GLenum auxInitWindow(LPCTSTR); */
		//[entry("auxInitWindowA")] GLenum auxInitWindowA(LPCSTR);
		//[entry("auxInitWindowW")] GLenum auxInitWindowW(LPCWSTR);

		[entry("auxInitWindowA")] GLenum auxInitWindowA(LPCTSTR);
		[entry("auxInitWindowW")] GLenum auxInitWindowW(BSTR);

		[entry("auxCloseWindow")] void auxCloseWindow(void);
		[entry("auxQuit")] void auxQuit(void);
		[entry("auxSwapBuffers")] void auxSwapBuffers(void);

		//typedef void (CALLBACK* AUXMAINPROC)(void);
		//[entry("auxMainLoop")] void auxMainLoop(AUXMAINPROC);
		[entry("auxMainLoop")] void auxMainLoop(long);

		//typedef void (CALLBACK* AUXEXPOSEPROC)(int, int);
		//[entry("auxExposeFunc")] void auxExposeFunc(AUXEXPOSEPROC);
		[entry("auxExposeFunc")] void auxExposeFunc(long);

		//typedef void (CALLBACK* AUXRESHAPEPROC)(GLsizei, GLsizei);
		//[entry("auxReshapeFunc")] void auxReshapeFunc(AUXRESHAPEPROC);
		[entry("auxReshapeFunc")] void auxReshapeFunc(long);

		//typedef void (CALLBACK* AUXIDLEPROC)(void);
		//[entry("auxIdleFunc")] void auxIdleFunc(AUXIDLEPROC);
		[entry("auxIdleFunc")] void auxIdleFunc(long);

		//typedef void (CALLBACK* AUXKEYPROC)(void);
		//[entry("auxKeyFunc")] void auxKeyFunc(int, AUXKEYPROC);
		[entry("auxKeyFunc")] void auxKeyFunc(int, long);

		//typedef void (CALLBACK* AUXMOUSEPROC)(AUX_EVENTREC *);
		//[entry("auxMouseFunc")] void auxMouseFunc(int, int, AUXMOUSEPROC);
		[entry("auxMouseFunc")] void auxMouseFunc(int, int, long);

		[entry("auxGetColorMapSize")] int auxGetColorMapSize(void);
		[entry("auxGetMouseLoc")] void auxGetMouseLoc(int *, int *);
		[entry("auxSetOneColor")] void auxSetOneColor(int, float, float, float);
		[entry("auxSetFogRamp")] void auxSetFogRamp(int, int);
		[entry("auxSetGreyRamp")] void auxSetGreyRamp(void);
		[entry("auxSetRGBMap")] void auxSetRGBMap(int, float *);

		/* AUX_RGBImageRec * APIENTRY auxRGBImageLoad(LPCTSTR); */
		/*AUX_RGBImageRec * APIENTRY auxRGBImageLoadA(LPCSTR);
		AUX_RGBImageRec * APIENTRY auxRGBImageLoadW(LPCWSTR);

		AUX_RGBImageRec * APIENTRY auxDIBImageLoadA(LPCSTR);
		AUX_RGBImageRec * APIENTRY auxDIBImageLoadW(LPCWSTR);*/
		[entry("auxRGBImageLoadA")] long auxRGBImageLoadA(LPCTSTR);
		[entry("auxRGBImageLoadW")] long auxRGBImageLoadW(BSTR);
		[entry("auxDIBImageLoadA")] long auxDIBImageLoadA(LPCTSTR);
		[entry("auxDIBImageLoadW")] long auxDIBImageLoadW(BSTR);


		[entry("auxCreateFont")] void auxCreateFont(void);
		//[entry("auxDrawStrA")] void auxDrawStrA(LPCSTR);
		//[entry("auxDrawStrW")] void auxDrawStrW(LPCWSTR);
		[entry("auxDrawStrA")] void auxDrawStrA(LPCTSTR);
		[entry("auxDrawStrW")] void auxDrawStrW(BSTR);

		[entry("auxWireSphere")] void auxWireSphere(GLdouble);
		[entry("auxSolidSphere")] void auxSolidSphere(GLdouble);
		[entry("auxWireCube")] void auxWireCube(GLdouble);
		[entry("auxSolidCube")] void auxSolidCube(GLdouble);
		[entry("auxWireBox")] void auxWireBox(GLdouble, GLdouble, GLdouble);
		[entry("auxSolidBox")] void auxSolidBox(GLdouble, GLdouble, GLdouble);
		[entry("auxWireTorus")] void auxWireTorus(GLdouble, GLdouble);
		[entry("auxSolidTorus")] void auxSolidTorus(GLdouble, GLdouble);
		[entry("auxWireCylinder")] void auxWireCylinder(GLdouble, GLdouble);
		[entry("auxSolidCylinder")] void auxSolidCylinder(GLdouble, GLdouble);
		[entry("auxWireIcosahedron")] void auxWireIcosahedron(GLdouble);
		[entry("auxSolidIcosahedron")] void auxSolidIcosahedron(GLdouble);
		[entry("auxWireOctahedron")] void auxWireOctahedron(GLdouble);
		[entry("auxSolidOctahedron")] void auxSolidOctahedron(GLdouble);
		[entry("auxWireTetrahedron")] void auxWireTetrahedron(GLdouble);
		[entry("auxSolidTetrahedron")] void auxSolidTetrahedron(GLdouble);
		[entry("auxWireDodecahedron")] void auxWireDodecahedron(GLdouble);
		[entry("auxSolidDodecahedron")] void auxSolidDodecahedron(GLdouble);
		[entry("auxWireCone")] void auxWireCone(GLdouble, GLdouble);
		[entry("auxSolidCone")] void auxSolidCone(GLdouble, GLdouble);
		[entry("auxWireTeapot")] void auxWireTeapot(GLdouble);
		[entry("auxSolidTeapot")] void auxSolidTeapot(GLdouble);

		/*
		** Window specific functions
		** hwnd, hdc, and hglrc valid after auxInitWindow()
		*/
		[entry("auxGetHWND")] HWND auxGetHWND(void);
		[entry("auxGetHDC")] HDC auxGetHDC(void);
		[entry("auxGetHGLRC")] HGLRC auxGetHGLRC(void);

		/*
		** Viewperf support functions and constants
		*/

		[entry("auxInitDisplayModePolicy")] void auxInitDisplayModePolicy(GLenum);
		[entry("auxInitDisplayModeID")] GLenum auxInitDisplayModeID(GLint);
		[entry("auxGetDisplayModePolicy")] GLenum auxGetDisplayModePolicy(void);
		[entry("auxGetDisplayModeID")] GLint auxGetDisplayModeID(void);
		[entry("auxGetDisplayMode")] GLenum auxGetDisplayMode(void);

	}

}